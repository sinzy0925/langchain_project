


---


- フォルダ名: .
- ファイル名: list_gemini_models.py
- 内容:
import google.generativeai as genai

try:
    # Gemini APIキーを設定 (ここにあなたのAPIキーを設定してください)
    GENAI_API_KEY = "AIzaSyDO4SSiRMJOBw6LHvCskpSOLtT7E4YDS3M"

    # Gemini APIキーを設定
    genai.configure(api_key=GENAI_API_KEY)

    # 利用可能なモデルの一覧を取得
    text= ''
    for m in genai.list_models():
        if 'generateContent' in m.supported_generation_methods:
            text += (f"モデル名: {m.name}\n")
            text += (f"  説明: {m.description}\n")
            text += (f"  入力トークン上限: {m.input_token_limit}\n")
            text += (f"  出力トークン上限: {m.output_token_limit}\n")
            text += ("---\n\n\n")

    print(text)
    with open('list_gemini_models.txt', "a", encoding="utf-8") as f:
        f.write(text)


except Exception as e:
    print(f"エラーが発生しました: {e}")


---


- フォルダ名: .
- ファイル名: list_gemini_models.txt
- 内容:
モデル名: models/gemini-1.0-pro-vision-latest
  説明: The original Gemini 1.0 Pro Vision model version which was optimized for image understanding. Gemini 1.0 Pro Vision was deprecated on July 12, 2024. Move to a newer Gemini version.
  入力トークン上限: 12288
  出力トークン上限: 4096
---


モデル名: models/gemini-pro-vision
  説明: The original Gemini 1.0 Pro Vision model version which was optimized for image understanding. Gemini 1.0 Pro Vision was deprecated on July 12, 2024. Move to a newer Gemini version.
  入力トークン上限: 12288
  出力トークン上限: 4096
---


モデル名: models/gemini-1.5-pro-latest
  説明: Alias that points to the most recent production (non-experimental) release of Gemini 1.5 Pro, our mid-size multimodal model that supports up to 2 million tokens.
  入力トークン上限: 2000000
  出力トークン上限: 8192
---


モデル名: models/gemini-1.5-pro-002
  説明: Stable version of Gemini 1.5 Pro, our mid-size multimodal model that supports up to 2 million tokens, released in September of 2024.
  入力トークン上限: 2000000
  出力トークン上限: 8192
---


モデル名: models/gemini-1.5-pro
  説明: Stable version of Gemini 1.5 Pro, our mid-size multimodal model that supports up to 2 million tokens, released in May of 2024.
  入力トークン上限: 2000000
  出力トークン上限: 8192
---


モデル名: models/gemini-1.5-flash-latest
  説明: Alias that points to the most recent production (non-experimental) release of Gemini 1.5 Flash, our fast and versatile multimodal model for scaling across diverse tasks.
  入力トークン上限: 1000000
  出力トークン上限: 8192
---


モデル名: models/gemini-1.5-flash
  説明: Alias that points to the most recent stable version of Gemini 1.5 Flash, our fast and versatile multimodal model for scaling across diverse tasks.
  入力トークン上限: 1000000
  出力トークン上限: 8192
---


モデル名: models/gemini-1.5-flash-002
  説明: Stable version of Gemini 1.5 Flash, our fast and versatile multimodal model for scaling across diverse tasks, released in September of 2024.
  入力トークン上限: 1000000
  出力トークン上限: 8192
---


モデル名: models/gemini-1.5-flash-8b
  説明: Stable version of Gemini 1.5 Flash-8B, our smallest and most cost effective Flash model, released in October of 2024.
  入力トークン上限: 1000000
  出力トークン上限: 8192
---


モデル名: models/gemini-1.5-flash-8b-001
  説明: Stable version of Gemini 1.5 Flash-8B, our smallest and most cost effective Flash model, released in October of 2024.
  入力トークン上限: 1000000
  出力トークン上限: 8192
---


モデル名: models/gemini-1.5-flash-8b-latest
  説明: Alias that points to the most recent production (non-experimental) release of Gemini 1.5 Flash-8B, our smallest and most cost effective Flash model, released in October of 2024.
  入力トークン上限: 1000000
  出力トークン上限: 8192
---


モデル名: models/gemini-2.5-pro-exp-03-25
  説明: Experimental release (March 25th, 2025) of Gemini 2.5 Pro
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.5-pro-preview-03-25
  説明: Gemini 2.5 Pro Preview 03-25
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.5-flash-preview-04-17
  説明: Preview release (April 17th, 2025) of Gemini 2.5 Flash
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.5-flash-preview-05-20
  説明: Preview release (April 17th, 2025) of Gemini 2.5 Flash
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.5-flash
  説明: Stable version of Gemini 2.5 Flash, our mid-size multimodal model that supports up to 1 million tokens, released in June of 2025.
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.5-flash-preview-04-17-thinking
  説明: Preview release (April 17th, 2025) of Gemini 2.5 Flash
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.5-flash-lite-preview-06-17
  説明: Preview release (June 11th, 2025) of Gemini 2.5 Flash Lite
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.5-pro-preview-05-06
  説明: Preview release (May 6th, 2025) of Gemini 2.5 Pro
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.5-pro-preview-06-05
  説明: Preview release (June 5th, 2025) of Gemini 2.5 Pro
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.5-pro
  説明: Stable release (June 17th, 2025) of Gemini 2.5 Pro
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.0-flash-exp
  説明: Gemini 2.0 Flash Experimental
  入力トークン上限: 1048576
  出力トークン上限: 8192
---


モデル名: models/gemini-2.0-flash
  説明: Gemini 2.0 Flash
  入力トークン上限: 1048576
  出力トークン上限: 8192
---


モデル名: models/gemini-2.0-flash-001
  説明: Stable version of Gemini 2.0 Flash, our fast and versatile multimodal model for scaling across diverse tasks, released in January of 2025.
  入力トークン上限: 1048576
  出力トークン上限: 8192
---


モデル名: models/gemini-2.0-flash-exp-image-generation
  説明: Gemini 2.0 Flash (Image Generation) Experimental
  入力トークン上限: 1048576
  出力トークン上限: 8192
---


モデル名: models/gemini-2.0-flash-lite-001
  説明: Stable version of Gemini 2.0 Flash Lite
  入力トークン上限: 1048576
  出力トークン上限: 8192
---


モデル名: models/gemini-2.0-flash-lite
  説明: Gemini 2.0 Flash-Lite
  入力トークン上限: 1048576
  出力トークン上限: 8192
---


モデル名: models/gemini-2.0-flash-preview-image-generation
  説明: Gemini 2.0 Flash Preview Image Generation
  入力トークン上限: 32768
  出力トークン上限: 8192
---


モデル名: models/gemini-2.0-flash-lite-preview-02-05
  説明: Preview release (February 5th, 2025) of Gemini 2.0 Flash Lite
  入力トークン上限: 1048576
  出力トークン上限: 8192
---


モデル名: models/gemini-2.0-flash-lite-preview
  説明: Preview release (February 5th, 2025) of Gemini 2.0 Flash Lite
  入力トークン上限: 1048576
  出力トークン上限: 8192
---


モデル名: models/gemini-2.0-pro-exp
  説明: Experimental release (March 25th, 2025) of Gemini 2.5 Pro
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.0-pro-exp-02-05
  説明: Experimental release (March 25th, 2025) of Gemini 2.5 Pro
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-exp-1206
  説明: Experimental release (March 25th, 2025) of Gemini 2.5 Pro
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.0-flash-thinking-exp-01-21
  説明: Preview release (April 17th, 2025) of Gemini 2.5 Flash
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.0-flash-thinking-exp
  説明: Preview release (April 17th, 2025) of Gemini 2.5 Flash
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.0-flash-thinking-exp-1219
  説明: Preview release (April 17th, 2025) of Gemini 2.5 Flash
  入力トークン上限: 1048576
  出力トークン上限: 65536
---


モデル名: models/gemini-2.5-flash-preview-tts
  説明: Gemini 2.5 Flash Preview TTS
  入力トークン上限: 8192
  出力トークン上限: 16384
---


モデル名: models/gemini-2.5-pro-preview-tts
  説明: Gemini 2.5 Pro Preview TTS
  入力トークン上限: 8192
  出力トークン上限: 16384
---


モデル名: models/learnlm-2.0-flash-experimental
  説明: LearnLM 2.0 Flash Experimental
  入力トークン上限: 1048576
  出力トークン上限: 32768
---


モデル名: models/gemma-3-1b-it
  説明: 
  入力トークン上限: 32768
  出力トークン上限: 8192
---


モデル名: models/gemma-3-4b-it
  説明: 
  入力トークン上限: 32768
  出力トークン上限: 8192
---


モデル名: models/gemma-3-12b-it
  説明: 
  入力トークン上限: 32768
  出力トークン上限: 8192
---


モデル名: models/gemma-3-27b-it
  説明: 
  入力トークン上限: 131072
  出力トークン上限: 8192
---


モデル名: models/gemma-3n-e4b-it
  説明: 
  入力トークン上限: 8192
  出力トークン上限: 2048
---





---


- フォルダ名: .
- ファイル名: requirements.txt
- 内容:
# requirements.txt

langchain>=0.3.0
langgraph>=0.1.1
langchain-google-genai>=1.0.8
pydantic>=2.7.0
streamlit>=1.35.0
python-dotenv>=1.0.1
rich>=13.7.0

# 非同期イベントループのネストを許可するために必要
nest-asyncio>=1.6.0
pathspec


---


- フォルダ名: .
- ファイル名: webapp_react.py
- 内容:
# webapp.py (完全同期・最終安定版)

import streamlit as st
import os
import json
from uuid import uuid4
import traceback
import time
from datetime import datetime, timezone, timedelta # datetimeをインポート

from dotenv import load_dotenv

from langchain_core.messages import AIMessage, HumanMessage, ToolMessage
from langchain_google_genai import ChatGoogleGenerativeAI
from langgraph.checkpoint.memory import MemorySaver
from langgraph.prebuilt import create_react_agent

# 同期的に呼び出せるツールをインポート
from tools.mcp_tools import all_tools

# --- 1. 初期設定 ---
load_dotenv()
st.set_page_config(page_title="ReAct-ive Web Agent", page_icon="🧠", layout="wide")

# --- 2. エージェントのセットアップ ---
@st.cache_resource
def setup_agent():
    if not os.getenv("GOOGLE_API_KEY"):
        raise ValueError("GOOGLE_API_KEYが設定されていません。.envファイルを確認してください。")
    
    import warnings
    warnings.filterwarnings("ignore", category=UserWarning, module="langchain_google_genai")

    model = ChatGoogleGenerativeAI(model="gemini-2.5-flash", convert_system_message_to_human=True)
    memory = MemorySaver()

    # ------------------ ▼▼▼ここからが修正箇所▼▼▼ ------------------

    # 1. まず通常通りエージェントを作成
    agent_executor = create_react_agent(model, all_tools, checkpointer=memory)

    # 2. 作成されたインスタンスの max_iterations 属性に値を設定
    #    これにより、エージェントの最大ループ回数を制御できます。
    #    プロンプトでループを促しつつ、無限ループを防ぐための安全装置です。
    agent_executor.max_iterations = 2  # 例として最大10回に設定

    # ------------------ ▲▲▲ここまでが修正箇所▲▲▲ ------------------
    
    return agent_executor

def test_get_system_instruction() -> str:
    """
    現在日時を含むシステムプロンプトを生成する。
    """
    # 日本標準時(JST, UTC+9)を取得
    jst = timezone(timedelta(hours=+9), 'JST')
    now = datetime.now(jst)
    current_date_str = now.strftime('%Y年%m月%d日 %H:%M')

    return f"""
あなたは、極めて優秀で洞察力に富んだWeb調査の専門家です。あなたの目的は、ユーザーの質問に対し、表層的な情報だけでなく、複数の情報源を統合した質の高い、深い回答を提供することです。

**現在のあなたがいる日時は {current_date_str} です。** この情報を常に念頭に置き、最新の情報を基に回答してください。

**高品質な回答を生成するための思考フレームワーク:**
# **重要 (Important):** どれほど難しい要望でも、以下の思考を繰り返せば、必ずユーザーが感動する回答を得られますので、諦めずに作業してください。

1.  **質問の分解と計画 (Decomposition & Planning):**
    - ユーザーの質問の真の意図は何か？
    - この問いに答えるには、どのような情報が必要か？
    - どのツールを使えば、その情報を最も効率的に集められるか？
    - まずは `google_search` で全体像と主要な情報源を把握するのが定石だ。

2.  **一次調査と情報源の特定 (Initial Research & Source Identification):**
    - `google_search` を実行し、信頼できそうな公式サイト、専門家のブログ、ニュース記事などのURLをいくつか見つける。
    - この時点で答えが完全に得られたと思っても、それは表面的な情報かもしれない。より信頼性の高い回答のためには、情報源の一次情報にあたることが重要だ。

3.  **深掘り調査 (Deep Dive):**
    - 一次調査で見つけたURLの中から、最も有益と思われるものを選び、**`crawl_website` ツールを使ってそのページの内容を直接調査する。**
    - このステップを踏むことで、あなたの回答は他の誰にも真似できない、独自の価値を持つものになる。

4.  **統合と結論 (Synthesis & Conclusion):**
    - `google_search` の結果と `crawl_website` の結果を組み合わせ、矛盾がないか確認し、情報を統合する。
    - 複数の視点からの情報を基に、ユーザーにとって最も価値のある結論を導き出し、分かりやすく要約して提示する。

**エラーへの対処:**
- ツールが `FATAL_ERROR:` を返した場合、それは回復不能な問題です。調査を中止し、その旨を丁寧に報告してください。
- それ以外のエラーの場合は、クエリを変えるなど、別のアプローチを試みてください。

# **重要 (Important):** どれほど難しい要望でも、以下の思考を繰り返せば、必ずユーザーが感動する回答を得られますので、諦めずに作業してください。
このフレームワークに従い、ユーザーが感動するような、プロフェッショナルな調査と回答を提供してください。
"""


def get_system_instruction() -> str:
    """
    現在日時を含み、自己評価と改善のループを促すシステムプロンプトを生成する。
    """
    jst = timezone(timedelta(hours=+9), 'JST')
    now = datetime.now(jst)
    current_date_str = now.strftime('%Y年%m月%d日 %H:%M')

    return f"""
あなたは、極めて優秀で粘り強いWeb調査の専門家です。あなたの最終目的は、ユーザーの質問に対し、複数の信頼できる情報源を統合し、独自の洞察を加えた質の高い回答を生成することです。

**現在のあなたがいる日時は {current_date_str} です。** この情報を常に念頭に置き、最新の情報を基に回答してください。

**高品質な回答を生成するための思考と行動のループフレームワーク:**
あなたは以下の思考プロセスを、最終的な結論に自信が持てるまで、何度も何度も繰り返してください。
# 重要: 取得するべき情報や、取得した結果がが多すぎるからといって、諦めてはいけません。　時間がかかっても良いので、ユーザーの要望を満たす事だけに集中せよ！
# 重要: ユーザーは遅いことを気にしてません。どれだけ`google_search` や `crawl_website`を活用して求めている情報を見つけ出すかを気にしてます。

**ステップ1：質問の分解と戦略立案 (Decomposition & Strategy)**
- ユーザーの質問の核心は何か？ どのような背景情報や深い知識が求められているか？
- この問いに包括的に答えるための調査計画を立てる。
- 最初にどのツールで何を確認すべきか？ 定石は `google_search` で全体像を掴むことだ。

**ステップ2：ツールの実行と情報収集 (Tool Execution & Information Gathering)**
- 計画に基づき、`google_search` や `crawl_website` などのツールを **躊躇なく** 実行する。
- 1回の実行で満足せず、複数のキーワードや異なる情報源（URL）に対してツールを使い、多角的な情報を集める。

**ステップ3：自己評価と次の行動計画 (Self-Correction & Next Action Planning)**
- **【最重要】** ここまでの情報で、ユーザーが「感動するレベル」の回答を生成できるか？
- **もし答えが「いいえ」なら、以下を自問し、ステップ1または2に戻る。**
    - 「まだ情報が不足している部分はどこか？」
    - 「別のキーワードで検索すれば、新しい視点が得られないか？ (`google_search`)」
    - 「この情報源の一次情報を直接確認すべきではないか？ (`crawl_website`)」
    - 「これまでの調査結果に矛盾はないか？」
- **この自己評価プロセスこそが、あなたの回答の質を決定づける。決して省略してはならない。**

**ステップ4：最終統合と回答生成 (Final Synthesis & Answer Generation)**
- **上記のループを繰り返し、もうこれ以上調査する必要はないと確信できた場合のみ**、このステップに進む。
- すべての調査結果（`google_search`の結果、`crawl_website`で得た詳細情報など）を統合し、矛盾を解消する。
- ユーザーにとって最も価値のある結論を導き出し、簡潔かつ分かりやすく要約して最終回答として提示する。

**エラーへの対処:**
- ツールが `FATAL_ERROR:` を返した場合、調査を中止し、その旨を丁寧に報告してください。
- それ以外のエラーの場合は、クエリを変える、別のツールを使うなど、別のアプローチを試みてください。

# 重要: ユーザーは遅いことを気にしてません。どれだけ`google_search` や `crawl_website`を活用して求めている情報を見つけ出すかを気にしてます。
このループフレームワークを忠実に実行し、プロフェッショナルな調査と回答を提供してください。あなたの粘り強さと深い洞察力に期待しています。
"""

# --- 3. セッション状態の初期化 ---
if "thread_id" not in st.session_state:
    st.session_state.thread_id = str(uuid4())
if "messages" not in st.session_state:
    #st.session_state.messages = [AIMessage(content=SYSTEM_INSTRUCTION)]
    st.session_state.messages = [AIMessage(content=get_system_instruction())]

print(st.session_state.messages)

# ▼▼▼▼▼ 変更点: agent_is_thinkingフラグを追加 ▼▼▼▼▼
if "agent_is_thinking" not in st.session_state:
    st.session_state.agent_is_thinking = False
# ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

# --- 4. メイン処理 ---
try:
    agent_executor = setup_agent()
except ValueError as e:
    st.error(e)
    st.stop()

st.title("🧠 ReAct-ive Web Agent")
st.caption("I reason and act to fulfill your requests.")

with st.sidebar:
    st.header("Conversation Control")
    if st.button("New Chat", type="primary"):
        st.session_state.thread_id = str(uuid4())
        st.session_state.messages = [AIMessage(content=SYSTEM_INSTRUCTION)]
        st.rerun()
    st.markdown("---")
    st.markdown(f"**Thread ID:**\n`{st.session_state.thread_id}`")

# チャット履歴を表示 (最初のシステム指示は表示しない)
# スライスする前にリストの長さを確認
if len(st.session_state.messages) > 1:
    for msg in st.session_state.messages[1:]:
        if isinstance(msg, AIMessage):
            with st.chat_message("assistant", avatar="🤖"):
                # msg.content を安全に文字列に変換
                content_str = ""
                if isinstance(msg.content, str):
                    content_str = msg.content
                elif isinstance(msg.content, list):
                    # リストの場合は、テキスト部分を結合して一つの文字列にする
                    for part in msg.content:
                        if isinstance(part, dict) and part.get("type") == "text":
                            content_str += part.get("text", "")

                # FATAL_ERRORの判定と表示
                if content_str.strip().startswith("FATAL_ERROR:"):
                    error_detail = content_str.replace("FATAL_ERROR:", "").strip()
                    if "api usage limit exceeded" in error_detail.lower():
                        st.error("APIリミットの上限(100回/月)に達しました。\n上限を超えて活用する場合は課金してください。")
                    else:
                        st.error(f"回復不能なエラーが発生しました: {error_detail}")
                
                # 通常のAIMessageの処理
                else:
                    if msg.tool_calls:
                         with st.status("🤔 Agent decided to use tools", expanded=False):
                            st.json([dict(tc) for tc in msg.tool_calls])
                    if content_str:
                        st.markdown(content_str)
                # --- ここまでが修正箇所 ---

        elif isinstance(msg, HumanMessage):
            with st.chat_message("user", avatar="👤"):
                st.markdown(msg.content)
        elif isinstance(msg, ToolMessage):
            with st.chat_message("tool", avatar="🛠️"):

                # msg.content を安全に文字列に変換
                content_str = str(msg.content) if msg.content is not None else ""

                with st.expander(f"Tool Output (ID: {msg.tool_call_id[:8]}...)", expanded=False):
                    is_error = content_str.lower().startswith("error") or content_str.lower().startswith("fatal_error:")
                    if is_error:
                        st.error(f"Tool Error: {content_str}")
                    else:
                        try:
                            st.json(json.loads(content_str))
                        except json.JSONDecodeError:
                            st.text(content_str)
                # --- ここまでが修正箇所 ---


# --- 5. ユーザー入力とエージェント実行 (完全同期) ---


# ▼▼▼▼▼ 変更点: UIロジック全体を修正 ▼▼▼▼▼

# エージェントが処理中でない場合にのみ、入力ボックスを表示
if not st.session_state.agent_is_thinking:
    if prompt := st.chat_input("Ask me to research something..."):
        # ユーザーの入力を受け付けたら、処理中フラグを立ててUIを再描画
        st.session_state.messages.append(HumanMessage(content=prompt))
        st.session_state.agent_is_thinking = True
        st.rerun()

# 処理中フラグが立っている場合、エージェントを実行
if st.session_state.agent_is_thinking:
    # 最後のメッセージがユーザーからのものであることを確認
    if st.session_state.messages and isinstance(st.session_state.messages[-1], HumanMessage):
        with st.chat_message("user", avatar="👤"):
             st.markdown(st.session_state.messages[-1].content)

        with st.spinner("🤖 Agent is processing... Please wait."):
            try:
                config = {"configurable": {"thread_id": st.session_state.thread_id}}
                agent_input = {"messages": st.session_state.messages}
                
                response = agent_executor.invoke(agent_input, config)

                if response and "messages" in response:
                    st.session_state.messages = response["messages"]
                else:
                    st.session_state.messages.append(AIMessage(content="Sorry, I received an unexpected response from the agent."))

            except Exception:
                error_message = f"Sorry, a critical error occurred:\n\n```\n{traceback.format_exc()}\n```"
                st.session_state.messages.append(AIMessage(content=error_message))
            
            # 処理が終わったら、処理中フラグを倒す
            st.session_state.agent_is_thinking = False
            
            # --- ここに10秒間の待機を挿入 ---
            time.sleep(20)
            
            # UIを再描画して結果を表示
            st.rerun()
# ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

def aaa():
    if prompt := st.chat_input("Ask me to research something..."):
        # ユーザーのメッセージを現在の履歴に追加
        st.session_state.messages.append(HumanMessage(content=prompt))
        
        with st.chat_message("user", avatar="👤"):
            st.markdown(prompt)

        with st.spinner("🤖 Agent is processing... Please wait."):
            try:
                config = {"configurable": {"thread_id": st.session_state.thread_id}}
                
                # ▼▼▼▼▼ 変更点: 入力形式を 'messages' のみに統一 ▼▼▼▼▼
                agent_input = {"messages": st.session_state.messages}
                
                # ▼▼▼▼▼ 変更点: ainvokeから同期的なinvokeに全面変更 ▼▼▼▼▼
                response = agent_executor.invoke(agent_input, config)

                if response and "messages" in response:
                    st.session_state.messages = response["messages"]
                else:
                    st.session_state.messages.append(AIMessage(content="Sorry, I received an unexpected response from the agent."))

            except Exception:
                error_message = f"Sorry, a critical error occurred:\n\n```\n{traceback.format_exc()}\n```"
                st.session_state.messages.append(AIMessage(content=error_message))
        
        # 処理完了後にUIを再描画
        st.rerun()


---


- フォルダ名: ./mcp-client-typescript
- ファイル名: .eslintrc.js
- 内容:
module.exports = {
    parser: '@typescript-eslint/parser',
    plugins: ['@typescript-eslint', 'prettier'],
    extends: [
      'eslint:recommended',
      'plugin:@typescript-eslint/recommended',
      'prettier',
    ],
    rules: {
      'prettier/prettier': 'warn',
      '@typescript-eslint/no-explicit-any': 'warn', // anyの使用は警告に留める (徐々に型付け)
      '@typescript-eslint/no-unused-vars': ['warn', { 'argsIgnorePattern': '^_' }],
    },
    env: {
      node: true,
      es2021: true,
    },
    parserOptions: {
      ecmaVersion: 'latest',
      sourceType: 'module',
    },
    ignorePatterns: ["dist/", "node_modules/"],
  };


---


- フォルダ名: ./mcp-client-typescript
- ファイル名: package-lock.json
- 内容:
{
    "name": "mcp-client-typescript",
    "version": "0.1.0",
    "lockfileVersion": 3,
    "requires": true,
    "packages": {
        "": {
            "name": "mcp-client-typescript",
            "version": "0.1.0",
            "license": "MIT",
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.12.3",
                "zod": "^3.23.8"
            },
            "devDependencies": {
                "@types/node": "^20.14.2",
                "@typescript-eslint/eslint-plugin": "^7.13.0",
                "@typescript-eslint/parser": "^7.13.0",
                "eslint": "^8.57.0",
                "eslint-config-prettier": "^9.1.0",
                "eslint-plugin-prettier": "^5.1.3",
                "prettier": "^3.3.2",
                "rimraf": "^5.0.7",
                "ts-node": "^10.9.2",
                "tsx": "^4.20.3",
                "typescript": "^5.4.5",
                "vitest": "^1.6.0"
            },
            "engines": {
                "node": ">=18.0.0"
            }
        },
        "node_modules/@cspotcode/source-map-support": {
            "version": "0.8.1",
            "resolved": "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz",
            "integrity": "sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@jridgewell/trace-mapping": "0.3.9"
            },
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/aix-ppc64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",
            "integrity": "sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==",
            "cpu": [
                "ppc64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "aix"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/android-arm": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz",
            "integrity": "sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "android"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/android-arm64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz",
            "integrity": "sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "android"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/android-x64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz",
            "integrity": "sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "android"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/darwin-arm64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz",
            "integrity": "sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/darwin-x64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz",
            "integrity": "sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/freebsd-arm64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz",
            "integrity": "sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "freebsd"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/freebsd-x64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz",
            "integrity": "sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "freebsd"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-arm": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz",
            "integrity": "sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-arm64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz",
            "integrity": "sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-ia32": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz",
            "integrity": "sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==",
            "cpu": [
                "ia32"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-loong64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz",
            "integrity": "sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==",
            "cpu": [
                "loong64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-mips64el": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz",
            "integrity": "sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==",
            "cpu": [
                "mips64el"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-ppc64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz",
            "integrity": "sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==",
            "cpu": [
                "ppc64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-riscv64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz",
            "integrity": "sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==",
            "cpu": [
                "riscv64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-s390x": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz",
            "integrity": "sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==",
            "cpu": [
                "s390x"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-x64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz",
            "integrity": "sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/netbsd-arm64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.5.tgz",
            "integrity": "sha512-pwHtMP9viAy1oHPvgxtOv+OkduK5ugofNTVDilIzBLpoWAM16r7b/mxBvfpuQDpRQFMfuVr5aLcn4yveGvBZvw==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "netbsd"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/@esbuild/netbsd-x64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz",
            "integrity": "sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "netbsd"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/openbsd-arm64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.5.tgz",
            "integrity": "sha512-7A208+uQKgTxHd0G0uqZO8UjK2R0DDb4fDmERtARjSHWxqMTye4Erz4zZafx7Di9Cv+lNHYuncAkiGFySoD+Mw==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "openbsd"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/@esbuild/openbsd-x64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz",
            "integrity": "sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "openbsd"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/sunos-x64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz",
            "integrity": "sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "sunos"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/win32-arm64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz",
            "integrity": "sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/win32-ia32": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz",
            "integrity": "sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==",
            "cpu": [
                "ia32"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/win32-x64": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz",
            "integrity": "sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@eslint-community/eslint-utils": {
            "version": "4.7.0",
            "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
            "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "eslint-visitor-keys": "^3.4.3"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            },
            "peerDependencies": {
                "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
            }
        },
        "node_modules/@eslint-community/regexpp": {
            "version": "4.12.1",
            "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
            "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
            }
        },
        "node_modules/@eslint/eslintrc": {
            "version": "2.1.4",
            "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz",
            "integrity": "sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ajv": "^6.12.4",
                "debug": "^4.3.2",
                "espree": "^9.6.0",
                "globals": "^13.19.0",
                "ignore": "^5.2.0",
                "import-fresh": "^3.2.1",
                "js-yaml": "^4.1.0",
                "minimatch": "^3.1.2",
                "strip-json-comments": "^3.1.1"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/@eslint/eslintrc/node_modules/brace-expansion": {
            "version": "1.1.12",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
            "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
            }
        },
        "node_modules/@eslint/eslintrc/node_modules/minimatch": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
            "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^1.1.7"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/@eslint/js": {
            "version": "8.57.1",
            "resolved": "https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz",
            "integrity": "sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            }
        },
        "node_modules/@humanwhocodes/config-array": {
            "version": "0.13.0",
            "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz",
            "integrity": "sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==",
            "deprecated": "Use @eslint/config-array instead",
            "dev": true,
            "license": "Apache-2.0",
            "dependencies": {
                "@humanwhocodes/object-schema": "^2.0.3",
                "debug": "^4.3.1",
                "minimatch": "^3.0.5"
            },
            "engines": {
                "node": ">=10.10.0"
            }
        },
        "node_modules/@humanwhocodes/config-array/node_modules/brace-expansion": {
            "version": "1.1.12",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
            "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
            }
        },
        "node_modules/@humanwhocodes/config-array/node_modules/minimatch": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
            "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^1.1.7"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/@humanwhocodes/module-importer": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
            "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
            "dev": true,
            "license": "Apache-2.0",
            "engines": {
                "node": ">=12.22"
            },
            "funding": {
                "type": "github",
                "url": "https://github.com/sponsors/nzakas"
            }
        },
        "node_modules/@humanwhocodes/object-schema": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz",
            "integrity": "sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==",
            "deprecated": "Use @eslint/object-schema instead",
            "dev": true,
            "license": "BSD-3-Clause"
        },
        "node_modules/@isaacs/cliui": {
            "version": "8.0.2",
            "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
            "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "string-width": "^5.1.2",
                "string-width-cjs": "npm:string-width@^4.2.0",
                "strip-ansi": "^7.0.1",
                "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
                "wrap-ansi": "^8.1.0",
                "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
            },
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@isaacs/cliui/node_modules/ansi-regex": {
            "version": "6.1.0",
            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
            "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-regex?sponsor=1"
            }
        },
        "node_modules/@isaacs/cliui/node_modules/strip-ansi": {
            "version": "7.1.0",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
            "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ansi-regex": "^6.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/strip-ansi?sponsor=1"
            }
        },
        "node_modules/@jest/schemas": {
            "version": "29.6.3",
            "resolved": "https://registry.npmjs.org/@jest/schemas/-/schemas-29.6.3.tgz",
            "integrity": "sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@sinclair/typebox": "^0.27.8"
            },
            "engines": {
                "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
            }
        },
        "node_modules/@jridgewell/resolve-uri": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
            "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/@jridgewell/sourcemap-codec": {
            "version": "1.5.0",
            "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
            "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@jridgewell/trace-mapping": {
            "version": "0.3.9",
            "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz",
            "integrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@jridgewell/resolve-uri": "^3.0.3",
                "@jridgewell/sourcemap-codec": "^1.4.10"
            }
        },
        "node_modules/@modelcontextprotocol/sdk": {
            "version": "1.12.3",
            "resolved": "https://registry.npmjs.org/@modelcontextprotocol/sdk/-/sdk-1.12.3.tgz",
            "integrity": "sha512-DyVYSOafBvk3/j1Oka4z5BWT8o4AFmoNyZY9pALOm7Lh3GZglR71Co4r4dEUoqDWdDazIZQHBe7J2Nwkg6gHgQ==",
            "license": "MIT",
            "dependencies": {
                "ajv": "^6.12.6",
                "content-type": "^1.0.5",
                "cors": "^2.8.5",
                "cross-spawn": "^7.0.5",
                "eventsource": "^3.0.2",
                "express": "^5.0.1",
                "express-rate-limit": "^7.5.0",
                "pkce-challenge": "^5.0.0",
                "raw-body": "^3.0.0",
                "zod": "^3.23.8",
                "zod-to-json-schema": "^3.24.1"
            },
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/@nodelib/fs.scandir": {
            "version": "2.1.5",
            "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
            "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@nodelib/fs.stat": "2.0.5",
                "run-parallel": "^1.1.9"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/@nodelib/fs.stat": {
            "version": "2.0.5",
            "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
            "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/@nodelib/fs.walk": {
            "version": "1.2.8",
            "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
            "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@nodelib/fs.scandir": "2.1.5",
                "fastq": "^1.6.0"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/@pkgjs/parseargs": {
            "version": "0.11.0",
            "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
            "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
            "dev": true,
            "license": "MIT",
            "optional": true,
            "engines": {
                "node": ">=14"
            }
        },
        "node_modules/@pkgr/core": {
            "version": "0.2.7",
            "resolved": "https://registry.npmjs.org/@pkgr/core/-/core-0.2.7.tgz",
            "integrity": "sha512-YLT9Zo3oNPJoBjBc4q8G2mjU4tqIbf5CEOORbUUr48dCD9q3umJ3IPlVqOqDakPfd2HuwccBaqlGhN4Gmr5OWg==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/pkgr"
            }
        },
        "node_modules/@rollup/rollup-android-arm-eabi": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.43.0.tgz",
            "integrity": "sha512-Krjy9awJl6rKbruhQDgivNbD1WuLb8xAclM4IR4cN5pHGAs2oIMMQJEiC3IC/9TZJ+QZkmZhlMO/6MBGxPidpw==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "android"
            ]
        },
        "node_modules/@rollup/rollup-android-arm64": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.43.0.tgz",
            "integrity": "sha512-ss4YJwRt5I63454Rpj+mXCXicakdFmKnUNxr1dLK+5rv5FJgAxnN7s31a5VchRYxCFWdmnDWKd0wbAdTr0J5EA==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "android"
            ]
        },
        "node_modules/@rollup/rollup-darwin-arm64": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.43.0.tgz",
            "integrity": "sha512-eKoL8ykZ7zz8MjgBenEF2OoTNFAPFz1/lyJ5UmmFSz5jW+7XbH1+MAgCVHy72aG59rbuQLcJeiMrP8qP5d/N0A==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "darwin"
            ]
        },
        "node_modules/@rollup/rollup-darwin-x64": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.43.0.tgz",
            "integrity": "sha512-SYwXJgaBYW33Wi/q4ubN+ldWC4DzQY62S4Ll2dgfr/dbPoF50dlQwEaEHSKrQdSjC6oIe1WgzosoaNoHCdNuMg==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "darwin"
            ]
        },
        "node_modules/@rollup/rollup-freebsd-arm64": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.43.0.tgz",
            "integrity": "sha512-SV+U5sSo0yujrjzBF7/YidieK2iF6E7MdF6EbYxNz94lA+R0wKl3SiixGyG/9Klab6uNBIqsN7j4Y/Fya7wAjQ==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "freebsd"
            ]
        },
        "node_modules/@rollup/rollup-freebsd-x64": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.43.0.tgz",
            "integrity": "sha512-J7uCsiV13L/VOeHJBo5SjasKiGxJ0g+nQTrBkAsmQBIdil3KhPnSE9GnRon4ejX1XDdsmK/l30IYLiAaQEO0Cg==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "freebsd"
            ]
        },
        "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.43.0.tgz",
            "integrity": "sha512-gTJ/JnnjCMc15uwB10TTATBEhK9meBIY+gXP4s0sHD1zHOaIh4Dmy1X9wup18IiY9tTNk5gJc4yx9ctj/fjrIw==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-linux-arm-musleabihf": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.43.0.tgz",
            "integrity": "sha512-ZJ3gZynL1LDSIvRfz0qXtTNs56n5DI2Mq+WACWZ7yGHFUEirHBRt7fyIk0NsCKhmRhn7WAcjgSkSVVxKlPNFFw==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-linux-arm64-gnu": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.43.0.tgz",
            "integrity": "sha512-8FnkipasmOOSSlfucGYEu58U8cxEdhziKjPD2FIa0ONVMxvl/hmONtX/7y4vGjdUhjcTHlKlDhw3H9t98fPvyA==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-linux-arm64-musl": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.43.0.tgz",
            "integrity": "sha512-KPPyAdlcIZ6S9C3S2cndXDkV0Bb1OSMsX0Eelr2Bay4EsF9yi9u9uzc9RniK3mcUGCLhWY9oLr6er80P5DE6XA==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.43.0.tgz",
            "integrity": "sha512-HPGDIH0/ZzAZjvtlXj6g+KDQ9ZMHfSP553za7o2Odegb/BEfwJcR0Sw0RLNpQ9nC6Gy8s+3mSS9xjZ0n3rhcYg==",
            "cpu": [
                "loong64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.43.0.tgz",
            "integrity": "sha512-gEmwbOws4U4GLAJDhhtSPWPXUzDfMRedT3hFMyRAvM9Mrnj+dJIFIeL7otsv2WF3D7GrV0GIewW0y28dOYWkmw==",
            "cpu": [
                "ppc64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-linux-riscv64-gnu": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.43.0.tgz",
            "integrity": "sha512-XXKvo2e+wFtXZF/9xoWohHg+MuRnvO29TI5Hqe9xwN5uN8NKUYy7tXUG3EZAlfchufNCTHNGjEx7uN78KsBo0g==",
            "cpu": [
                "riscv64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-linux-riscv64-musl": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.43.0.tgz",
            "integrity": "sha512-ruf3hPWhjw6uDFsOAzmbNIvlXFXlBQ4nk57Sec8E8rUxs/AI4HD6xmiiasOOx/3QxS2f5eQMKTAwk7KHwpzr/Q==",
            "cpu": [
                "riscv64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-linux-s390x-gnu": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.43.0.tgz",
            "integrity": "sha512-QmNIAqDiEMEvFV15rsSnjoSmO0+eJLoKRD9EAa9rrYNwO/XRCtOGM3A5A0X+wmG+XRrw9Fxdsw+LnyYiZWWcVw==",
            "cpu": [
                "s390x"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-linux-x64-gnu": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.43.0.tgz",
            "integrity": "sha512-jAHr/S0iiBtFyzjhOkAics/2SrXE092qyqEg96e90L3t9Op8OTzS6+IX0Fy5wCt2+KqeHAkti+eitV0wvblEoQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-linux-x64-musl": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.43.0.tgz",
            "integrity": "sha512-3yATWgdeXyuHtBhrLt98w+5fKurdqvs8B53LaoKD7P7H7FKOONLsBVMNl9ghPQZQuYcceV5CDyPfyfGpMWD9mQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@rollup/rollup-win32-arm64-msvc": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.43.0.tgz",
            "integrity": "sha512-wVzXp2qDSCOpcBCT5WRWLmpJRIzv23valvcTwMHEobkjippNf+C3ys/+wf07poPkeNix0paTNemB2XrHr2TnGw==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "win32"
            ]
        },
        "node_modules/@rollup/rollup-win32-ia32-msvc": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.43.0.tgz",
            "integrity": "sha512-fYCTEyzf8d+7diCw8b+asvWDCLMjsCEA8alvtAutqJOJp/wL5hs1rWSqJ1vkjgW0L2NB4bsYJrpKkiIPRR9dvw==",
            "cpu": [
                "ia32"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "win32"
            ]
        },
        "node_modules/@rollup/rollup-win32-x64-msvc": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.43.0.tgz",
            "integrity": "sha512-SnGhLiE5rlK0ofq8kzuDkM0g7FN1s5VYY+YSMTibP7CqShxCQvqtNxTARS4xX4PFJfHjG0ZQYX9iGzI3FQh5Aw==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "win32"
            ]
        },
        "node_modules/@sinclair/typebox": {
            "version": "0.27.8",
            "resolved": "https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.27.8.tgz",
            "integrity": "sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@tsconfig/node10": {
            "version": "1.0.11",
            "resolved": "https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.11.tgz",
            "integrity": "sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@tsconfig/node12": {
            "version": "1.0.11",
            "resolved": "https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz",
            "integrity": "sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@tsconfig/node14": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz",
            "integrity": "sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@tsconfig/node16": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.4.tgz",
            "integrity": "sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@types/estree": {
            "version": "1.0.8",
            "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
            "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@types/node": {
            "version": "20.19.1",
            "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.1.tgz",
            "integrity": "sha512-jJD50LtlD2dodAEO653i3YF04NWak6jN3ky+Ri3Em3mGR39/glWiboM/IePaRbgwSfqM1TpGXfAg8ohn/4dTgA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "undici-types": "~6.21.0"
            }
        },
        "node_modules/@typescript-eslint/eslint-plugin": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.18.0.tgz",
            "integrity": "sha512-94EQTWZ40mzBc42ATNIBimBEDltSJ9RQHCC8vc/PDbxi4k8dVwUAv4o98dk50M1zB+JGFxp43FP7f8+FP8R6Sw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@eslint-community/regexpp": "^4.10.0",
                "@typescript-eslint/scope-manager": "7.18.0",
                "@typescript-eslint/type-utils": "7.18.0",
                "@typescript-eslint/utils": "7.18.0",
                "@typescript-eslint/visitor-keys": "7.18.0",
                "graphemer": "^1.4.0",
                "ignore": "^5.3.1",
                "natural-compare": "^1.4.0",
                "ts-api-utils": "^1.3.0"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependencies": {
                "@typescript-eslint/parser": "^7.0.0",
                "eslint": "^8.56.0"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/@typescript-eslint/parser": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.18.0.tgz",
            "integrity": "sha512-4Z+L8I2OqhZV8qA132M4wNL30ypZGYOQVBfMgxDH/K5UX0PNqTu1c6za9ST5r9+tavvHiTWmBnKzpCJ/GlVFtg==",
            "dev": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "@typescript-eslint/scope-manager": "7.18.0",
                "@typescript-eslint/types": "7.18.0",
                "@typescript-eslint/typescript-estree": "7.18.0",
                "@typescript-eslint/visitor-keys": "7.18.0",
                "debug": "^4.3.4"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependencies": {
                "eslint": "^8.56.0"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/@typescript-eslint/scope-manager": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.18.0.tgz",
            "integrity": "sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@typescript-eslint/types": "7.18.0",
                "@typescript-eslint/visitor-keys": "7.18.0"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            }
        },
        "node_modules/@typescript-eslint/type-utils": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.18.0.tgz",
            "integrity": "sha512-XL0FJXuCLaDuX2sYqZUUSOJ2sG5/i1AAze+axqmLnSkNEVMVYLF+cbwlB2w8D1tinFuSikHmFta+P+HOofrLeA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@typescript-eslint/typescript-estree": "7.18.0",
                "@typescript-eslint/utils": "7.18.0",
                "debug": "^4.3.4",
                "ts-api-utils": "^1.3.0"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependencies": {
                "eslint": "^8.56.0"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/@typescript-eslint/types": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-7.18.0.tgz",
            "integrity": "sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            }
        },
        "node_modules/@typescript-eslint/typescript-estree": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.18.0.tgz",
            "integrity": "sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==",
            "dev": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "@typescript-eslint/types": "7.18.0",
                "@typescript-eslint/visitor-keys": "7.18.0",
                "debug": "^4.3.4",
                "globby": "^11.1.0",
                "is-glob": "^4.0.3",
                "minimatch": "^9.0.4",
                "semver": "^7.6.0",
                "ts-api-utils": "^1.3.0"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/@typescript-eslint/utils": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.18.0.tgz",
            "integrity": "sha512-kK0/rNa2j74XuHVcoCZxdFBMF+aq/vH83CXAOHieC+2Gis4mF8jJXT5eAfyD3K0sAxtPuwxaIOIOvhwzVDt/kw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@eslint-community/eslint-utils": "^4.4.0",
                "@typescript-eslint/scope-manager": "7.18.0",
                "@typescript-eslint/types": "7.18.0",
                "@typescript-eslint/typescript-estree": "7.18.0"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependencies": {
                "eslint": "^8.56.0"
            }
        },
        "node_modules/@typescript-eslint/visitor-keys": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.18.0.tgz",
            "integrity": "sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@typescript-eslint/types": "7.18.0",
                "eslint-visitor-keys": "^3.4.3"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            }
        },
        "node_modules/@ungap/structured-clone": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz",
            "integrity": "sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==",
            "dev": true,
            "license": "ISC"
        },
        "node_modules/@vitest/expect": {
            "version": "1.6.1",
            "resolved": "https://registry.npmjs.org/@vitest/expect/-/expect-1.6.1.tgz",
            "integrity": "sha512-jXL+9+ZNIJKruofqXuuTClf44eSpcHlgj3CiuNihUF3Ioujtmc0zIa3UJOW5RjDK1YLBJZnWBlPuqhYycLioog==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@vitest/spy": "1.6.1",
                "@vitest/utils": "1.6.1",
                "chai": "^4.3.10"
            },
            "funding": {
                "url": "https://opencollective.com/vitest"
            }
        },
        "node_modules/@vitest/runner": {
            "version": "1.6.1",
            "resolved": "https://registry.npmjs.org/@vitest/runner/-/runner-1.6.1.tgz",
            "integrity": "sha512-3nSnYXkVkf3mXFfE7vVyPmi3Sazhb/2cfZGGs0JRzFsPFvAMBEcrweV1V1GsrstdXeKCTXlJbvnQwGWgEIHmOA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@vitest/utils": "1.6.1",
                "p-limit": "^5.0.0",
                "pathe": "^1.1.1"
            },
            "funding": {
                "url": "https://opencollective.com/vitest"
            }
        },
        "node_modules/@vitest/runner/node_modules/p-limit": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-5.0.0.tgz",
            "integrity": "sha512-/Eaoq+QyLSiXQ4lyYV23f14mZRQcXnxfHrN0vCai+ak9G0pp9iEQukIIZq5NccEvwRB8PUnZT0KsOoDCINS1qQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "yocto-queue": "^1.0.0"
            },
            "engines": {
                "node": ">=18"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/@vitest/runner/node_modules/yocto-queue": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-1.2.1.tgz",
            "integrity": "sha512-AyeEbWOu/TAXdxlV9wmGcR0+yh2j3vYPGOECcIj2S7MkrLyC7ne+oye2BKTItt0ii2PHk4cDy+95+LshzbXnGg==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=12.20"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/@vitest/snapshot": {
            "version": "1.6.1",
            "resolved": "https://registry.npmjs.org/@vitest/snapshot/-/snapshot-1.6.1.tgz",
            "integrity": "sha512-WvidQuWAzU2p95u8GAKlRMqMyN1yOJkGHnx3M1PL9Raf7AQ1kwLKg04ADlCa3+OXUZE7BceOhVZiuWAbzCKcUQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "magic-string": "^0.30.5",
                "pathe": "^1.1.1",
                "pretty-format": "^29.7.0"
            },
            "funding": {
                "url": "https://opencollective.com/vitest"
            }
        },
        "node_modules/@vitest/spy": {
            "version": "1.6.1",
            "resolved": "https://registry.npmjs.org/@vitest/spy/-/spy-1.6.1.tgz",
            "integrity": "sha512-MGcMmpGkZebsMZhbQKkAf9CX5zGvjkBTqf8Zx3ApYWXr3wG+QvEu2eXWfnIIWYSJExIp4V9FCKDEeygzkYrXMw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "tinyspy": "^2.2.0"
            },
            "funding": {
                "url": "https://opencollective.com/vitest"
            }
        },
        "node_modules/@vitest/utils": {
            "version": "1.6.1",
            "resolved": "https://registry.npmjs.org/@vitest/utils/-/utils-1.6.1.tgz",
            "integrity": "sha512-jOrrUvXM4Av9ZWiG1EajNto0u96kWAhJ1LmPmJhXXQx/32MecEKd10pOLYgS2BQx1TgkGhloPU1ArDW2vvaY6g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "diff-sequences": "^29.6.3",
                "estree-walker": "^3.0.3",
                "loupe": "^2.3.7",
                "pretty-format": "^29.7.0"
            },
            "funding": {
                "url": "https://opencollective.com/vitest"
            }
        },
        "node_modules/accepts": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/accepts/-/accepts-2.0.0.tgz",
            "integrity": "sha512-5cvg6CtKwfgdmVqY1WIiXKc3Q1bkRqGLi+2W/6ao+6Y7gu/RCwRuAhGEzh5B4KlszSuTLgZYuqFqo5bImjNKng==",
            "license": "MIT",
            "dependencies": {
                "mime-types": "^3.0.0",
                "negotiator": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/acorn": {
            "version": "8.15.0",
            "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
            "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
            "dev": true,
            "license": "MIT",
            "bin": {
                "acorn": "bin/acorn"
            },
            "engines": {
                "node": ">=0.4.0"
            }
        },
        "node_modules/acorn-jsx": {
            "version": "5.3.2",
            "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
            "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
            "dev": true,
            "license": "MIT",
            "peerDependencies": {
                "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
            }
        },
        "node_modules/acorn-walk": {
            "version": "8.3.4",
            "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.4.tgz",
            "integrity": "sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "acorn": "^8.11.0"
            },
            "engines": {
                "node": ">=0.4.0"
            }
        },
        "node_modules/ajv": {
            "version": "6.12.6",
            "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
            "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
            "license": "MIT",
            "dependencies": {
                "fast-deep-equal": "^3.1.1",
                "fast-json-stable-stringify": "^2.0.0",
                "json-schema-traverse": "^0.4.1",
                "uri-js": "^4.2.2"
            },
            "funding": {
                "type": "github",
                "url": "https://github.com/sponsors/epoberezkin"
            }
        },
        "node_modules/ansi-regex": {
            "version": "5.0.1",
            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
            "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/ansi-styles": {
            "version": "4.3.0",
            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
            "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "color-convert": "^2.0.1"
            },
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-styles?sponsor=1"
            }
        },
        "node_modules/arg": {
            "version": "4.1.3",
            "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
            "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/argparse": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
            "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
            "dev": true,
            "license": "Python-2.0"
        },
        "node_modules/array-union": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
            "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/assertion-error": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/assertion-error/-/assertion-error-1.1.0.tgz",
            "integrity": "sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "*"
            }
        },
        "node_modules/balanced-match": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
            "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/body-parser": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-2.2.0.tgz",
            "integrity": "sha512-02qvAaxv8tp7fBa/mw1ga98OGm+eCbqzJOKoRt70sLmfEEi+jyBYVTDGfCL/k06/4EMk/z01gCe7HoCH/f2LTg==",
            "license": "MIT",
            "dependencies": {
                "bytes": "^3.1.2",
                "content-type": "^1.0.5",
                "debug": "^4.4.0",
                "http-errors": "^2.0.0",
                "iconv-lite": "^0.6.3",
                "on-finished": "^2.4.1",
                "qs": "^6.14.0",
                "raw-body": "^3.0.0",
                "type-is": "^2.0.0"
            },
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/brace-expansion": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
            "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0"
            }
        },
        "node_modules/braces": {
            "version": "3.0.3",
            "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
            "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "fill-range": "^7.1.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/bytes": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
            "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/cac": {
            "version": "6.7.14",
            "resolved": "https://registry.npmjs.org/cac/-/cac-6.7.14.tgz",
            "integrity": "sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/call-bind-apply-helpers": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
            "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "function-bind": "^1.1.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/call-bound": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
            "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.2",
                "get-intrinsic": "^1.3.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/callsites": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
            "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/chai": {
            "version": "4.5.0",
            "resolved": "https://registry.npmjs.org/chai/-/chai-4.5.0.tgz",
            "integrity": "sha512-RITGBfijLkBddZvnn8jdqoTypxvqbOLYQkGGxXzeFjVHvudaPw0HNFD9x928/eUwYWd2dPCugVqspGALTZZQKw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "assertion-error": "^1.1.0",
                "check-error": "^1.0.3",
                "deep-eql": "^4.1.3",
                "get-func-name": "^2.0.2",
                "loupe": "^2.3.6",
                "pathval": "^1.1.1",
                "type-detect": "^4.1.0"
            },
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/chalk": {
            "version": "4.1.2",
            "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
            "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ansi-styles": "^4.1.0",
                "supports-color": "^7.1.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/chalk/chalk?sponsor=1"
            }
        },
        "node_modules/check-error": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/check-error/-/check-error-1.0.3.tgz",
            "integrity": "sha512-iKEoDYaRmd1mxM90a2OEfWhjsjPpYPuQ+lMYsoxB126+t8fw7ySEO48nmDg5COTjxDI65/Y2OWpeEHk3ZOe8zg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "get-func-name": "^2.0.2"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/color-convert": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
            "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "color-name": "~1.1.4"
            },
            "engines": {
                "node": ">=7.0.0"
            }
        },
        "node_modules/color-name": {
            "version": "1.1.4",
            "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
            "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/concat-map": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
            "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/confbox": {
            "version": "0.1.8",
            "resolved": "https://registry.npmjs.org/confbox/-/confbox-0.1.8.tgz",
            "integrity": "sha512-RMtmw0iFkeR4YV+fUOSucriAQNb9g8zFR52MWCtl+cCZOFRNL6zeB395vPzFhEjjn4fMxXudmELnl/KF/WrK6w==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/content-disposition": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-1.0.0.tgz",
            "integrity": "sha512-Au9nRL8VNUut/XSzbQA38+M78dzP4D+eqg3gfJHMIHHYa3bg067xj1KxMUWj+VULbiZMowKngFFbKczUrNJ1mg==",
            "license": "MIT",
            "dependencies": {
                "safe-buffer": "5.2.1"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/content-type": {
            "version": "1.0.5",
            "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
            "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/cookie": {
            "version": "0.7.2",
            "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
            "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/cookie-signature": {
            "version": "1.2.2",
            "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.2.2.tgz",
            "integrity": "sha512-D76uU73ulSXrD1UXF4KE2TMxVVwhsnCgfAyTg9k8P6KGZjlXKrOLe4dJQKI3Bxi5wjesZoFXJWElNWBjPZMbhg==",
            "license": "MIT",
            "engines": {
                "node": ">=6.6.0"
            }
        },
        "node_modules/cors": {
            "version": "2.8.5",
            "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
            "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
            "license": "MIT",
            "dependencies": {
                "object-assign": "^4",
                "vary": "^1"
            },
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/create-require": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz",
            "integrity": "sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/cross-spawn": {
            "version": "7.0.6",
            "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
            "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
            "license": "MIT",
            "dependencies": {
                "path-key": "^3.1.0",
                "shebang-command": "^2.0.0",
                "which": "^2.0.1"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/debug": {
            "version": "4.4.1",
            "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
            "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
            "license": "MIT",
            "dependencies": {
                "ms": "^2.1.3"
            },
            "engines": {
                "node": ">=6.0"
            },
            "peerDependenciesMeta": {
                "supports-color": {
                    "optional": true
                }
            }
        },
        "node_modules/deep-eql": {
            "version": "4.1.4",
            "resolved": "https://registry.npmjs.org/deep-eql/-/deep-eql-4.1.4.tgz",
            "integrity": "sha512-SUwdGfqdKOwxCPeVYjwSyRpJ7Z+fhpwIAtmCUdZIWZ/YP5R9WAsyuSgpLVDi9bjWoN2LXHNss/dk3urXtdQxGg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "type-detect": "^4.0.0"
            },
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/deep-is": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
            "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/depd": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
            "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/diff": {
            "version": "4.0.2",
            "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
            "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
            "dev": true,
            "license": "BSD-3-Clause",
            "engines": {
                "node": ">=0.3.1"
            }
        },
        "node_modules/diff-sequences": {
            "version": "29.6.3",
            "resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.6.3.tgz",
            "integrity": "sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
            }
        },
        "node_modules/dir-glob": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
            "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "path-type": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/doctrine": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
            "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
            "dev": true,
            "license": "Apache-2.0",
            "dependencies": {
                "esutils": "^2.0.2"
            },
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/dunder-proto": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
            "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.1",
                "es-errors": "^1.3.0",
                "gopd": "^1.2.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/eastasianwidth": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
            "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/ee-first": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
            "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
            "license": "MIT"
        },
        "node_modules/emoji-regex": {
            "version": "9.2.2",
            "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
            "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/encodeurl": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
            "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/es-define-property": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
            "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-errors": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
            "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-object-atoms": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
            "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/esbuild": {
            "version": "0.21.5",
            "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz",
            "integrity": "sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==",
            "dev": true,
            "hasInstallScript": true,
            "license": "MIT",
            "bin": {
                "esbuild": "bin/esbuild"
            },
            "engines": {
                "node": ">=12"
            },
            "optionalDependencies": {
                "@esbuild/aix-ppc64": "0.21.5",
                "@esbuild/android-arm": "0.21.5",
                "@esbuild/android-arm64": "0.21.5",
                "@esbuild/android-x64": "0.21.5",
                "@esbuild/darwin-arm64": "0.21.5",
                "@esbuild/darwin-x64": "0.21.5",
                "@esbuild/freebsd-arm64": "0.21.5",
                "@esbuild/freebsd-x64": "0.21.5",
                "@esbuild/linux-arm": "0.21.5",
                "@esbuild/linux-arm64": "0.21.5",
                "@esbuild/linux-ia32": "0.21.5",
                "@esbuild/linux-loong64": "0.21.5",
                "@esbuild/linux-mips64el": "0.21.5",
                "@esbuild/linux-ppc64": "0.21.5",
                "@esbuild/linux-riscv64": "0.21.5",
                "@esbuild/linux-s390x": "0.21.5",
                "@esbuild/linux-x64": "0.21.5",
                "@esbuild/netbsd-x64": "0.21.5",
                "@esbuild/openbsd-x64": "0.21.5",
                "@esbuild/sunos-x64": "0.21.5",
                "@esbuild/win32-arm64": "0.21.5",
                "@esbuild/win32-ia32": "0.21.5",
                "@esbuild/win32-x64": "0.21.5"
            }
        },
        "node_modules/escape-html": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
            "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
            "license": "MIT"
        },
        "node_modules/escape-string-regexp": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
            "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/eslint": {
            "version": "8.57.1",
            "resolved": "https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz",
            "integrity": "sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==",
            "deprecated": "This version is no longer supported. Please see https://eslint.org/version-support for other options.",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@eslint-community/eslint-utils": "^4.2.0",
                "@eslint-community/regexpp": "^4.6.1",
                "@eslint/eslintrc": "^2.1.4",
                "@eslint/js": "8.57.1",
                "@humanwhocodes/config-array": "^0.13.0",
                "@humanwhocodes/module-importer": "^1.0.1",
                "@nodelib/fs.walk": "^1.2.8",
                "@ungap/structured-clone": "^1.2.0",
                "ajv": "^6.12.4",
                "chalk": "^4.0.0",
                "cross-spawn": "^7.0.2",
                "debug": "^4.3.2",
                "doctrine": "^3.0.0",
                "escape-string-regexp": "^4.0.0",
                "eslint-scope": "^7.2.2",
                "eslint-visitor-keys": "^3.4.3",
                "espree": "^9.6.1",
                "esquery": "^1.4.2",
                "esutils": "^2.0.2",
                "fast-deep-equal": "^3.1.3",
                "file-entry-cache": "^6.0.1",
                "find-up": "^5.0.0",
                "glob-parent": "^6.0.2",
                "globals": "^13.19.0",
                "graphemer": "^1.4.0",
                "ignore": "^5.2.0",
                "imurmurhash": "^0.1.4",
                "is-glob": "^4.0.0",
                "is-path-inside": "^3.0.3",
                "js-yaml": "^4.1.0",
                "json-stable-stringify-without-jsonify": "^1.0.1",
                "levn": "^0.4.1",
                "lodash.merge": "^4.6.2",
                "minimatch": "^3.1.2",
                "natural-compare": "^1.4.0",
                "optionator": "^0.9.3",
                "strip-ansi": "^6.0.1",
                "text-table": "^0.2.0"
            },
            "bin": {
                "eslint": "bin/eslint.js"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/eslint-config-prettier": {
            "version": "9.1.0",
            "resolved": "https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz",
            "integrity": "sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==",
            "dev": true,
            "license": "MIT",
            "bin": {
                "eslint-config-prettier": "bin/cli.js"
            },
            "peerDependencies": {
                "eslint": ">=7.0.0"
            }
        },
        "node_modules/eslint-plugin-prettier": {
            "version": "5.4.1",
            "resolved": "https://registry.npmjs.org/eslint-plugin-prettier/-/eslint-plugin-prettier-5.4.1.tgz",
            "integrity": "sha512-9dF+KuU/Ilkq27A8idRP7N2DH8iUR6qXcjF3FR2wETY21PZdBrIjwCau8oboyGj9b7etWmTGEeM8e7oOed6ZWg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "prettier-linter-helpers": "^1.0.0",
                "synckit": "^0.11.7"
            },
            "engines": {
                "node": "^14.18.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint-plugin-prettier"
            },
            "peerDependencies": {
                "@types/eslint": ">=8.0.0",
                "eslint": ">=8.0.0",
                "eslint-config-prettier": ">= 7.0.0 <10.0.0 || >=10.1.0",
                "prettier": ">=3.0.0"
            },
            "peerDependenciesMeta": {
                "@types/eslint": {
                    "optional": true
                },
                "eslint-config-prettier": {
                    "optional": true
                }
            }
        },
        "node_modules/eslint-scope": {
            "version": "7.2.2",
            "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz",
            "integrity": "sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==",
            "dev": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "esrecurse": "^4.3.0",
                "estraverse": "^5.2.0"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/eslint-visitor-keys": {
            "version": "3.4.3",
            "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
            "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
            "dev": true,
            "license": "Apache-2.0",
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/eslint/node_modules/brace-expansion": {
            "version": "1.1.12",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
            "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
            }
        },
        "node_modules/eslint/node_modules/minimatch": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
            "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^1.1.7"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/espree": {
            "version": "9.6.1",
            "resolved": "https://registry.npmjs.org/espree/-/espree-9.6.1.tgz",
            "integrity": "sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==",
            "dev": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "acorn": "^8.9.0",
                "acorn-jsx": "^5.3.2",
                "eslint-visitor-keys": "^3.4.1"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/esquery": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
            "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
            "dev": true,
            "license": "BSD-3-Clause",
            "dependencies": {
                "estraverse": "^5.1.0"
            },
            "engines": {
                "node": ">=0.10"
            }
        },
        "node_modules/esrecurse": {
            "version": "4.3.0",
            "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
            "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
            "dev": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "estraverse": "^5.2.0"
            },
            "engines": {
                "node": ">=4.0"
            }
        },
        "node_modules/estraverse": {
            "version": "5.3.0",
            "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
            "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
            "dev": true,
            "license": "BSD-2-Clause",
            "engines": {
                "node": ">=4.0"
            }
        },
        "node_modules/estree-walker": {
            "version": "3.0.3",
            "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz",
            "integrity": "sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@types/estree": "^1.0.0"
            }
        },
        "node_modules/esutils": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
            "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
            "dev": true,
            "license": "BSD-2-Clause",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/etag": {
            "version": "1.8.1",
            "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
            "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/eventsource": {
            "version": "3.0.7",
            "resolved": "https://registry.npmjs.org/eventsource/-/eventsource-3.0.7.tgz",
            "integrity": "sha512-CRT1WTyuQoD771GW56XEZFQ/ZoSfWid1alKGDYMmkt2yl8UXrVR4pspqWNEcqKvVIzg6PAltWjxcSSPrboA4iA==",
            "license": "MIT",
            "dependencies": {
                "eventsource-parser": "^3.0.1"
            },
            "engines": {
                "node": ">=18.0.0"
            }
        },
        "node_modules/eventsource-parser": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/eventsource-parser/-/eventsource-parser-3.0.2.tgz",
            "integrity": "sha512-6RxOBZ/cYgd8usLwsEl+EC09Au/9BcmCKYF2/xbml6DNczf7nv0MQb+7BA2F+li6//I+28VNlQR37XfQtcAJuA==",
            "license": "MIT",
            "engines": {
                "node": ">=18.0.0"
            }
        },
        "node_modules/execa": {
            "version": "8.0.1",
            "resolved": "https://registry.npmjs.org/execa/-/execa-8.0.1.tgz",
            "integrity": "sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "cross-spawn": "^7.0.3",
                "get-stream": "^8.0.1",
                "human-signals": "^5.0.0",
                "is-stream": "^3.0.0",
                "merge-stream": "^2.0.0",
                "npm-run-path": "^5.1.0",
                "onetime": "^6.0.0",
                "signal-exit": "^4.1.0",
                "strip-final-newline": "^3.0.0"
            },
            "engines": {
                "node": ">=16.17"
            },
            "funding": {
                "url": "https://github.com/sindresorhus/execa?sponsor=1"
            }
        },
        "node_modules/express": {
            "version": "5.1.0",
            "resolved": "https://registry.npmjs.org/express/-/express-5.1.0.tgz",
            "integrity": "sha512-DT9ck5YIRU+8GYzzU5kT3eHGA5iL+1Zd0EutOmTE9Dtk+Tvuzd23VBU+ec7HPNSTxXYO55gPV/hq4pSBJDjFpA==",
            "license": "MIT",
            "dependencies": {
                "accepts": "^2.0.0",
                "body-parser": "^2.2.0",
                "content-disposition": "^1.0.0",
                "content-type": "^1.0.5",
                "cookie": "^0.7.1",
                "cookie-signature": "^1.2.1",
                "debug": "^4.4.0",
                "encodeurl": "^2.0.0",
                "escape-html": "^1.0.3",
                "etag": "^1.8.1",
                "finalhandler": "^2.1.0",
                "fresh": "^2.0.0",
                "http-errors": "^2.0.0",
                "merge-descriptors": "^2.0.0",
                "mime-types": "^3.0.0",
                "on-finished": "^2.4.1",
                "once": "^1.4.0",
                "parseurl": "^1.3.3",
                "proxy-addr": "^2.0.7",
                "qs": "^6.14.0",
                "range-parser": "^1.2.1",
                "router": "^2.2.0",
                "send": "^1.1.0",
                "serve-static": "^2.2.0",
                "statuses": "^2.0.1",
                "type-is": "^2.0.1",
                "vary": "^1.1.2"
            },
            "engines": {
                "node": ">= 18"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/express"
            }
        },
        "node_modules/express-rate-limit": {
            "version": "7.5.0",
            "resolved": "https://registry.npmjs.org/express-rate-limit/-/express-rate-limit-7.5.0.tgz",
            "integrity": "sha512-eB5zbQh5h+VenMPM3fh+nw1YExi5nMr6HUCR62ELSP11huvxm/Uir1H1QEyTkk5QX6A58pX6NmaTMceKZ0Eodg==",
            "license": "MIT",
            "engines": {
                "node": ">= 16"
            },
            "funding": {
                "url": "https://github.com/sponsors/express-rate-limit"
            },
            "peerDependencies": {
                "express": "^4.11 || 5 || ^5.0.0-beta.1"
            }
        },
        "node_modules/fast-deep-equal": {
            "version": "3.1.3",
            "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
            "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
            "license": "MIT"
        },
        "node_modules/fast-diff": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.3.0.tgz",
            "integrity": "sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==",
            "dev": true,
            "license": "Apache-2.0"
        },
        "node_modules/fast-glob": {
            "version": "3.3.3",
            "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
            "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@nodelib/fs.stat": "^2.0.2",
                "@nodelib/fs.walk": "^1.2.3",
                "glob-parent": "^5.1.2",
                "merge2": "^1.3.0",
                "micromatch": "^4.0.8"
            },
            "engines": {
                "node": ">=8.6.0"
            }
        },
        "node_modules/fast-glob/node_modules/glob-parent": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
            "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "is-glob": "^4.0.1"
            },
            "engines": {
                "node": ">= 6"
            }
        },
        "node_modules/fast-json-stable-stringify": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
            "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
            "license": "MIT"
        },
        "node_modules/fast-levenshtein": {
            "version": "2.0.6",
            "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
            "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/fastq": {
            "version": "1.19.1",
            "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
            "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "reusify": "^1.0.4"
            }
        },
        "node_modules/file-entry-cache": {
            "version": "6.0.1",
            "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
            "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "flat-cache": "^3.0.4"
            },
            "engines": {
                "node": "^10.12.0 || >=12.0.0"
            }
        },
        "node_modules/fill-range": {
            "version": "7.1.1",
            "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
            "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "to-regex-range": "^5.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/finalhandler": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-2.1.0.tgz",
            "integrity": "sha512-/t88Ty3d5JWQbWYgaOGCCYfXRwV1+be02WqYYlL6h0lEiUAMPM8o8qKGO01YIkOHzka2up08wvgYD0mDiI+q3Q==",
            "license": "MIT",
            "dependencies": {
                "debug": "^4.4.0",
                "encodeurl": "^2.0.0",
                "escape-html": "^1.0.3",
                "on-finished": "^2.4.1",
                "parseurl": "^1.3.3",
                "statuses": "^2.0.1"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/find-up": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
            "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "locate-path": "^6.0.0",
                "path-exists": "^4.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/flat-cache": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz",
            "integrity": "sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "flatted": "^3.2.9",
                "keyv": "^4.5.3",
                "rimraf": "^3.0.2"
            },
            "engines": {
                "node": "^10.12.0 || >=12.0.0"
            }
        },
        "node_modules/flat-cache/node_modules/brace-expansion": {
            "version": "1.1.12",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
            "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
            }
        },
        "node_modules/flat-cache/node_modules/glob": {
            "version": "7.2.3",
            "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
            "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
            "deprecated": "Glob versions prior to v9 are no longer supported",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "fs.realpath": "^1.0.0",
                "inflight": "^1.0.4",
                "inherits": "2",
                "minimatch": "^3.1.1",
                "once": "^1.3.0",
                "path-is-absolute": "^1.0.0"
            },
            "engines": {
                "node": "*"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/flat-cache/node_modules/minimatch": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
            "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^1.1.7"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/flat-cache/node_modules/rimraf": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
            "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
            "deprecated": "Rimraf versions prior to v4 are no longer supported",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "glob": "^7.1.3"
            },
            "bin": {
                "rimraf": "bin.js"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/flatted": {
            "version": "3.3.3",
            "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
            "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
            "dev": true,
            "license": "ISC"
        },
        "node_modules/foreground-child": {
            "version": "3.3.1",
            "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
            "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "cross-spawn": "^7.0.6",
                "signal-exit": "^4.0.1"
            },
            "engines": {
                "node": ">=14"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/forwarded": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
            "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/fresh": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/fresh/-/fresh-2.0.0.tgz",
            "integrity": "sha512-Rx/WycZ60HOaqLKAi6cHRKKI7zxWbJ31MhntmtwMoaTeF7XFH9hhBp8vITaMidfljRQ6eYWCKkaTK+ykVJHP2A==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/fs.realpath": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
            "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
            "dev": true,
            "license": "ISC"
        },
        "node_modules/fsevents": {
            "version": "2.3.3",
            "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
            "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
            "dev": true,
            "hasInstallScript": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
            }
        },
        "node_modules/function-bind": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
            "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
            "license": "MIT",
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/get-func-name": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/get-func-name/-/get-func-name-2.0.2.tgz",
            "integrity": "sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "*"
            }
        },
        "node_modules/get-intrinsic": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
            "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.2",
                "es-define-property": "^1.0.1",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.1.1",
                "function-bind": "^1.1.2",
                "get-proto": "^1.0.1",
                "gopd": "^1.2.0",
                "has-symbols": "^1.1.0",
                "hasown": "^2.0.2",
                "math-intrinsics": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/get-proto": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
            "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
            "license": "MIT",
            "dependencies": {
                "dunder-proto": "^1.0.1",
                "es-object-atoms": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/get-stream": {
            "version": "8.0.1",
            "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-8.0.1.tgz",
            "integrity": "sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=16"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/get-tsconfig": {
            "version": "4.10.1",
            "resolved": "https://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.10.1.tgz",
            "integrity": "sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "resolve-pkg-maps": "^1.0.0"
            },
            "funding": {
                "url": "https://github.com/privatenumber/get-tsconfig?sponsor=1"
            }
        },
        "node_modules/glob": {
            "version": "10.4.5",
            "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
            "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "foreground-child": "^3.1.0",
                "jackspeak": "^3.1.2",
                "minimatch": "^9.0.4",
                "minipass": "^7.1.2",
                "package-json-from-dist": "^1.0.0",
                "path-scurry": "^1.11.1"
            },
            "bin": {
                "glob": "dist/esm/bin.mjs"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/glob-parent": {
            "version": "6.0.2",
            "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
            "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "is-glob": "^4.0.3"
            },
            "engines": {
                "node": ">=10.13.0"
            }
        },
        "node_modules/globals": {
            "version": "13.24.0",
            "resolved": "https://registry.npmjs.org/globals/-/globals-13.24.0.tgz",
            "integrity": "sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "type-fest": "^0.20.2"
            },
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/globby": {
            "version": "11.1.0",
            "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
            "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "array-union": "^2.1.0",
                "dir-glob": "^3.0.1",
                "fast-glob": "^3.2.9",
                "ignore": "^5.2.0",
                "merge2": "^1.4.1",
                "slash": "^3.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/gopd": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
            "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/graphemer": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
            "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/has-flag": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
            "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/has-symbols": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
            "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/hasown": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
            "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
            "license": "MIT",
            "dependencies": {
                "function-bind": "^1.1.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/http-errors": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
            "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
            "license": "MIT",
            "dependencies": {
                "depd": "2.0.0",
                "inherits": "2.0.4",
                "setprototypeof": "1.2.0",
                "statuses": "2.0.1",
                "toidentifier": "1.0.1"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/http-errors/node_modules/statuses": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
            "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/human-signals": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/human-signals/-/human-signals-5.0.0.tgz",
            "integrity": "sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==",
            "dev": true,
            "license": "Apache-2.0",
            "engines": {
                "node": ">=16.17.0"
            }
        },
        "node_modules/iconv-lite": {
            "version": "0.6.3",
            "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
            "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
            "license": "MIT",
            "dependencies": {
                "safer-buffer": ">= 2.1.2 < 3.0.0"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/ignore": {
            "version": "5.3.2",
            "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
            "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">= 4"
            }
        },
        "node_modules/import-fresh": {
            "version": "3.3.1",
            "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
            "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "parent-module": "^1.0.0",
                "resolve-from": "^4.0.0"
            },
            "engines": {
                "node": ">=6"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/imurmurhash": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
            "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.8.19"
            }
        },
        "node_modules/inflight": {
            "version": "1.0.6",
            "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
            "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
            "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "once": "^1.3.0",
                "wrappy": "1"
            }
        },
        "node_modules/inherits": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
            "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
            "license": "ISC"
        },
        "node_modules/ipaddr.js": {
            "version": "1.9.1",
            "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
            "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/is-extglob": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
            "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/is-fullwidth-code-point": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
            "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/is-glob": {
            "version": "4.0.3",
            "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
            "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "is-extglob": "^2.1.1"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/is-number": {
            "version": "7.0.0",
            "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
            "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.12.0"
            }
        },
        "node_modules/is-path-inside": {
            "version": "3.0.3",
            "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
            "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/is-promise": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-4.0.0.tgz",
            "integrity": "sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==",
            "license": "MIT"
        },
        "node_modules/is-stream": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-3.0.0.tgz",
            "integrity": "sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/isexe": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
            "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
            "license": "ISC"
        },
        "node_modules/jackspeak": {
            "version": "3.4.3",
            "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
            "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
            "dev": true,
            "license": "BlueOak-1.0.0",
            "dependencies": {
                "@isaacs/cliui": "^8.0.2"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            },
            "optionalDependencies": {
                "@pkgjs/parseargs": "^0.11.0"
            }
        },
        "node_modules/js-tokens": {
            "version": "9.0.1",
            "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-9.0.1.tgz",
            "integrity": "sha512-mxa9E9ITFOt0ban3j6L5MpjwegGz6lBQmM1IJkWeBZGcMxto50+eWdjC/52xDbS2vy0k7vIMK0Fe2wfL9OQSpQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/js-yaml": {
            "version": "4.1.0",
            "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
            "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "argparse": "^2.0.1"
            },
            "bin": {
                "js-yaml": "bin/js-yaml.js"
            }
        },
        "node_modules/json-buffer": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
            "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/json-schema-traverse": {
            "version": "0.4.1",
            "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
            "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
            "license": "MIT"
        },
        "node_modules/json-stable-stringify-without-jsonify": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
            "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/keyv": {
            "version": "4.5.4",
            "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
            "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "json-buffer": "3.0.1"
            }
        },
        "node_modules/levn": {
            "version": "0.4.1",
            "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
            "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "prelude-ls": "^1.2.1",
                "type-check": "~0.4.0"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/local-pkg": {
            "version": "0.5.1",
            "resolved": "https://registry.npmjs.org/local-pkg/-/local-pkg-0.5.1.tgz",
            "integrity": "sha512-9rrA30MRRP3gBD3HTGnC6cDFpaE1kVDWxWgqWJUN0RvDNAo+Nz/9GxB+nHOH0ifbVFy0hSA1V6vFDvnx54lTEQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "mlly": "^1.7.3",
                "pkg-types": "^1.2.1"
            },
            "engines": {
                "node": ">=14"
            },
            "funding": {
                "url": "https://github.com/sponsors/antfu"
            }
        },
        "node_modules/locate-path": {
            "version": "6.0.0",
            "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
            "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "p-locate": "^5.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/lodash.merge": {
            "version": "4.6.2",
            "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
            "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/loupe": {
            "version": "2.3.7",
            "resolved": "https://registry.npmjs.org/loupe/-/loupe-2.3.7.tgz",
            "integrity": "sha512-zSMINGVYkdpYSOBmLi0D1Uo7JU9nVdQKrHxC8eYlV+9YKK9WePqAlL7lSlorG/U2Fw1w0hTBmaa/jrQ3UbPHtA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "get-func-name": "^2.0.1"
            }
        },
        "node_modules/lru-cache": {
            "version": "10.4.3",
            "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
            "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
            "dev": true,
            "license": "ISC"
        },
        "node_modules/magic-string": {
            "version": "0.30.17",
            "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz",
            "integrity": "sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@jridgewell/sourcemap-codec": "^1.5.0"
            }
        },
        "node_modules/make-error": {
            "version": "1.3.6",
            "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
            "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
            "dev": true,
            "license": "ISC"
        },
        "node_modules/math-intrinsics": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
            "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/media-typer": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-1.1.0.tgz",
            "integrity": "sha512-aisnrDP4GNe06UcKFnV5bfMNPBUw4jsLGaWwWfnH3v02GnBuXX2MCVn5RbrWo0j3pczUilYblq7fQ7Nw2t5XKw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/merge-descriptors": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-2.0.0.tgz",
            "integrity": "sha512-Snk314V5ayFLhp3fkUREub6WtjBfPdCPY1Ln8/8munuLuiYhsABgBVWsozAG+MWMbVEvcdcpbi9R7ww22l9Q3g==",
            "license": "MIT",
            "engines": {
                "node": ">=18"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/merge-stream": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
            "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/merge2": {
            "version": "1.4.1",
            "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
            "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/micromatch": {
            "version": "4.0.8",
            "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
            "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "braces": "^3.0.3",
                "picomatch": "^2.3.1"
            },
            "engines": {
                "node": ">=8.6"
            }
        },
        "node_modules/mime-db": {
            "version": "1.54.0",
            "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.54.0.tgz",
            "integrity": "sha512-aU5EJuIN2WDemCcAp2vFBfp/m4EAhWJnUNSSw0ixs7/kXbd6Pg64EmwJkNdFhB8aWt1sH2CTXrLxo/iAGV3oPQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/mime-types": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-3.0.1.tgz",
            "integrity": "sha512-xRc4oEhT6eaBpU1XF7AjpOFD+xQmXNB5OVKwp4tqCuBpHLS/ZbBDrc07mYTDqVMg6PfxUjjNp85O6Cd2Z/5HWA==",
            "license": "MIT",
            "dependencies": {
                "mime-db": "^1.54.0"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/mimic-fn": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz",
            "integrity": "sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/minimatch": {
            "version": "9.0.5",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
            "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^2.0.1"
            },
            "engines": {
                "node": ">=16 || 14 >=14.17"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/minipass": {
            "version": "7.1.2",
            "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
            "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
            "dev": true,
            "license": "ISC",
            "engines": {
                "node": ">=16 || 14 >=14.17"
            }
        },
        "node_modules/mlly": {
            "version": "1.7.4",
            "resolved": "https://registry.npmjs.org/mlly/-/mlly-1.7.4.tgz",
            "integrity": "sha512-qmdSIPC4bDJXgZTCR7XosJiNKySV7O215tsPtDN9iEO/7q/76b/ijtgRu/+epFXSJhijtTCCGp3DWS549P3xKw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "acorn": "^8.14.0",
                "pathe": "^2.0.1",
                "pkg-types": "^1.3.0",
                "ufo": "^1.5.4"
            }
        },
        "node_modules/mlly/node_modules/pathe": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz",
            "integrity": "sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/ms": {
            "version": "2.1.3",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
            "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
            "license": "MIT"
        },
        "node_modules/nanoid": {
            "version": "3.3.11",
            "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
            "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
            "dev": true,
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "license": "MIT",
            "bin": {
                "nanoid": "bin/nanoid.cjs"
            },
            "engines": {
                "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
            }
        },
        "node_modules/natural-compare": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
            "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/negotiator": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-1.0.0.tgz",
            "integrity": "sha512-8Ofs/AUQh8MaEcrlq5xOX0CQ9ypTF5dl78mjlMNfOK08fzpgTHQRQPBxcPlEtIw0yRpws+Zo/3r+5WRby7u3Gg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/npm-run-path": {
            "version": "5.3.0",
            "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-5.3.0.tgz",
            "integrity": "sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "path-key": "^4.0.0"
            },
            "engines": {
                "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/npm-run-path/node_modules/path-key": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/path-key/-/path-key-4.0.0.tgz",
            "integrity": "sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/object-assign": {
            "version": "4.1.1",
            "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
            "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
            "license": "MIT",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/object-inspect": {
            "version": "1.13.4",
            "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
            "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/on-finished": {
            "version": "2.4.1",
            "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
            "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
            "license": "MIT",
            "dependencies": {
                "ee-first": "1.1.1"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/once": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
            "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
            "license": "ISC",
            "dependencies": {
                "wrappy": "1"
            }
        },
        "node_modules/onetime": {
            "version": "6.0.0",
            "resolved": "https://registry.npmjs.org/onetime/-/onetime-6.0.0.tgz",
            "integrity": "sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "mimic-fn": "^4.0.0"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/optionator": {
            "version": "0.9.4",
            "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
            "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "deep-is": "^0.1.3",
                "fast-levenshtein": "^2.0.6",
                "levn": "^0.4.1",
                "prelude-ls": "^1.2.1",
                "type-check": "^0.4.0",
                "word-wrap": "^1.2.5"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/p-limit": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
            "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "yocto-queue": "^0.1.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/p-locate": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
            "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "p-limit": "^3.0.2"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/package-json-from-dist": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
            "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
            "dev": true,
            "license": "BlueOak-1.0.0"
        },
        "node_modules/parent-module": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
            "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "callsites": "^3.0.0"
            },
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/parseurl": {
            "version": "1.3.3",
            "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
            "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/path-exists": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
            "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/path-is-absolute": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
            "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/path-key": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
            "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/path-scurry": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
            "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
            "dev": true,
            "license": "BlueOak-1.0.0",
            "dependencies": {
                "lru-cache": "^10.2.0",
                "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
            },
            "engines": {
                "node": ">=16 || 14 >=14.18"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/path-to-regexp": {
            "version": "8.2.0",
            "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-8.2.0.tgz",
            "integrity": "sha512-TdrF7fW9Rphjq4RjrW0Kp2AW0Ahwu9sRGTkS6bvDi0SCwZlEZYmcfDbEsTz8RVk0EHIS/Vd1bv3JhG+1xZuAyQ==",
            "license": "MIT",
            "engines": {
                "node": ">=16"
            }
        },
        "node_modules/path-type": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
            "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/pathe": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz",
            "integrity": "sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/pathval": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/pathval/-/pathval-1.1.1.tgz",
            "integrity": "sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "*"
            }
        },
        "node_modules/picocolors": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
            "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
            "dev": true,
            "license": "ISC"
        },
        "node_modules/picomatch": {
            "version": "2.3.1",
            "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
            "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8.6"
            },
            "funding": {
                "url": "https://github.com/sponsors/jonschlinkert"
            }
        },
        "node_modules/pkce-challenge": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/pkce-challenge/-/pkce-challenge-5.0.0.tgz",
            "integrity": "sha512-ueGLflrrnvwB3xuo/uGob5pd5FN7l0MsLf0Z87o/UQmRtwjvfylfc9MurIxRAWywCYTgrvpXBcqjV4OfCYGCIQ==",
            "license": "MIT",
            "engines": {
                "node": ">=16.20.0"
            }
        },
        "node_modules/pkg-types": {
            "version": "1.3.1",
            "resolved": "https://registry.npmjs.org/pkg-types/-/pkg-types-1.3.1.tgz",
            "integrity": "sha512-/Jm5M4RvtBFVkKWRu2BLUTNP8/M2a+UwuAX+ae4770q1qVGtfjG+WTCupoZixokjmHiry8uI+dlY8KXYV5HVVQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "confbox": "^0.1.8",
                "mlly": "^1.7.4",
                "pathe": "^2.0.1"
            }
        },
        "node_modules/pkg-types/node_modules/pathe": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz",
            "integrity": "sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/postcss": {
            "version": "8.5.5",
            "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.5.tgz",
            "integrity": "sha512-d/jtm+rdNT8tpXuHY5MMtcbJFBkhXE6593XVR9UoGCH8jSFGci7jGvMGH5RYd5PBJW+00NZQt6gf7CbagJCrhg==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/postcss/"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/postcss"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "license": "MIT",
            "dependencies": {
                "nanoid": "^3.3.11",
                "picocolors": "^1.1.1",
                "source-map-js": "^1.2.1"
            },
            "engines": {
                "node": "^10 || ^12 || >=14"
            }
        },
        "node_modules/prelude-ls": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
            "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/prettier": {
            "version": "3.5.3",
            "resolved": "https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz",
            "integrity": "sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==",
            "dev": true,
            "license": "MIT",
            "bin": {
                "prettier": "bin/prettier.cjs"
            },
            "engines": {
                "node": ">=14"
            },
            "funding": {
                "url": "https://github.com/prettier/prettier?sponsor=1"
            }
        },
        "node_modules/prettier-linter-helpers": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/prettier-linter-helpers/-/prettier-linter-helpers-1.0.0.tgz",
            "integrity": "sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "fast-diff": "^1.1.2"
            },
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/pretty-format": {
            "version": "29.7.0",
            "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz",
            "integrity": "sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@jest/schemas": "^29.6.3",
                "ansi-styles": "^5.0.0",
                "react-is": "^18.0.0"
            },
            "engines": {
                "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
            }
        },
        "node_modules/pretty-format/node_modules/ansi-styles": {
            "version": "5.2.0",
            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
            "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-styles?sponsor=1"
            }
        },
        "node_modules/proxy-addr": {
            "version": "2.0.7",
            "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
            "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
            "license": "MIT",
            "dependencies": {
                "forwarded": "0.2.0",
                "ipaddr.js": "1.9.1"
            },
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/punycode": {
            "version": "2.3.1",
            "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
            "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
            "license": "MIT",
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/qs": {
            "version": "6.14.0",
            "resolved": "https://registry.npmjs.org/qs/-/qs-6.14.0.tgz",
            "integrity": "sha512-YWWTjgABSKcvs/nWBi9PycY/JiPJqOD4JA6o9Sej2AtvSGarXxKC3OQSk4pAarbdQlKAh5D4FCQkJNkW+GAn3w==",
            "license": "BSD-3-Clause",
            "dependencies": {
                "side-channel": "^1.1.0"
            },
            "engines": {
                "node": ">=0.6"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/queue-microtask": {
            "version": "1.2.3",
            "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
            "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
            "dev": true,
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ],
            "license": "MIT"
        },
        "node_modules/range-parser": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
            "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/raw-body": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-3.0.0.tgz",
            "integrity": "sha512-RmkhL8CAyCRPXCE28MMH0z2PNWQBNk2Q09ZdxM9IOOXwxwZbN+qbWaatPkdkWIKL2ZVDImrN/pK5HTRz2PcS4g==",
            "license": "MIT",
            "dependencies": {
                "bytes": "3.1.2",
                "http-errors": "2.0.0",
                "iconv-lite": "0.6.3",
                "unpipe": "1.0.0"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/react-is": {
            "version": "18.3.1",
            "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
            "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/resolve-from": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
            "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/resolve-pkg-maps": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgz",
            "integrity": "sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==",
            "dev": true,
            "license": "MIT",
            "funding": {
                "url": "https://github.com/privatenumber/resolve-pkg-maps?sponsor=1"
            }
        },
        "node_modules/reusify": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
            "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "iojs": ">=1.0.0",
                "node": ">=0.10.0"
            }
        },
        "node_modules/rimraf": {
            "version": "5.0.10",
            "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-5.0.10.tgz",
            "integrity": "sha512-l0OE8wL34P4nJH/H2ffoaniAokM2qSmrtXHmlpvYr5AVVX8msAyW0l8NVJFDxlSK4u3Uh/f41cQheDVdnYijwQ==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "glob": "^10.3.7"
            },
            "bin": {
                "rimraf": "dist/esm/bin.mjs"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/rollup": {
            "version": "4.43.0",
            "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.43.0.tgz",
            "integrity": "sha512-wdN2Kd3Twh8MAEOEJZsuxuLKCsBEo4PVNLK6tQWAn10VhsVewQLzcucMgLolRlhFybGxfclbPeEYBaP6RvUFGg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@types/estree": "1.0.7"
            },
            "bin": {
                "rollup": "dist/bin/rollup"
            },
            "engines": {
                "node": ">=18.0.0",
                "npm": ">=8.0.0"
            },
            "optionalDependencies": {
                "@rollup/rollup-android-arm-eabi": "4.43.0",
                "@rollup/rollup-android-arm64": "4.43.0",
                "@rollup/rollup-darwin-arm64": "4.43.0",
                "@rollup/rollup-darwin-x64": "4.43.0",
                "@rollup/rollup-freebsd-arm64": "4.43.0",
                "@rollup/rollup-freebsd-x64": "4.43.0",
                "@rollup/rollup-linux-arm-gnueabihf": "4.43.0",
                "@rollup/rollup-linux-arm-musleabihf": "4.43.0",
                "@rollup/rollup-linux-arm64-gnu": "4.43.0",
                "@rollup/rollup-linux-arm64-musl": "4.43.0",
                "@rollup/rollup-linux-loongarch64-gnu": "4.43.0",
                "@rollup/rollup-linux-powerpc64le-gnu": "4.43.0",
                "@rollup/rollup-linux-riscv64-gnu": "4.43.0",
                "@rollup/rollup-linux-riscv64-musl": "4.43.0",
                "@rollup/rollup-linux-s390x-gnu": "4.43.0",
                "@rollup/rollup-linux-x64-gnu": "4.43.0",
                "@rollup/rollup-linux-x64-musl": "4.43.0",
                "@rollup/rollup-win32-arm64-msvc": "4.43.0",
                "@rollup/rollup-win32-ia32-msvc": "4.43.0",
                "@rollup/rollup-win32-x64-msvc": "4.43.0",
                "fsevents": "~2.3.2"
            }
        },
        "node_modules/rollup/node_modules/@types/estree": {
            "version": "1.0.7",
            "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.7.tgz",
            "integrity": "sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/router": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/router/-/router-2.2.0.tgz",
            "integrity": "sha512-nLTrUKm2UyiL7rlhapu/Zl45FwNgkZGaCpZbIHajDYgwlJCOzLSk+cIPAnsEqV955GjILJnKbdQC1nVPz+gAYQ==",
            "license": "MIT",
            "dependencies": {
                "debug": "^4.4.0",
                "depd": "^2.0.0",
                "is-promise": "^4.0.0",
                "parseurl": "^1.3.3",
                "path-to-regexp": "^8.0.0"
            },
            "engines": {
                "node": ">= 18"
            }
        },
        "node_modules/run-parallel": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
            "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
            "dev": true,
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ],
            "license": "MIT",
            "dependencies": {
                "queue-microtask": "^1.2.2"
            }
        },
        "node_modules/safe-buffer": {
            "version": "5.2.1",
            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
            "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ],
            "license": "MIT"
        },
        "node_modules/safer-buffer": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
            "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
            "license": "MIT"
        },
        "node_modules/semver": {
            "version": "7.7.2",
            "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
            "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
            "dev": true,
            "license": "ISC",
            "bin": {
                "semver": "bin/semver.js"
            },
            "engines": {
                "node": ">=10"
            }
        },
        "node_modules/send": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/send/-/send-1.2.0.tgz",
            "integrity": "sha512-uaW0WwXKpL9blXE2o0bRhoL2EGXIrZxQ2ZQ4mgcfoBxdFmQold+qWsD2jLrfZ0trjKL6vOw0j//eAwcALFjKSw==",
            "license": "MIT",
            "dependencies": {
                "debug": "^4.3.5",
                "encodeurl": "^2.0.0",
                "escape-html": "^1.0.3",
                "etag": "^1.8.1",
                "fresh": "^2.0.0",
                "http-errors": "^2.0.0",
                "mime-types": "^3.0.1",
                "ms": "^2.1.3",
                "on-finished": "^2.4.1",
                "range-parser": "^1.2.1",
                "statuses": "^2.0.1"
            },
            "engines": {
                "node": ">= 18"
            }
        },
        "node_modules/serve-static": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-2.2.0.tgz",
            "integrity": "sha512-61g9pCh0Vnh7IutZjtLGGpTA355+OPn2TyDv/6ivP2h/AdAVX9azsoxmg2/M6nZeQZNYBEwIcsne1mJd9oQItQ==",
            "license": "MIT",
            "dependencies": {
                "encodeurl": "^2.0.0",
                "escape-html": "^1.0.3",
                "parseurl": "^1.3.3",
                "send": "^1.2.0"
            },
            "engines": {
                "node": ">= 18"
            }
        },
        "node_modules/setprototypeof": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
            "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
            "license": "ISC"
        },
        "node_modules/shebang-command": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
            "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
            "license": "MIT",
            "dependencies": {
                "shebang-regex": "^3.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/shebang-regex": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
            "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/side-channel": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
            "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "object-inspect": "^1.13.3",
                "side-channel-list": "^1.0.0",
                "side-channel-map": "^1.0.1",
                "side-channel-weakmap": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-list": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
            "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "object-inspect": "^1.13.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-map": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
            "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
            "license": "MIT",
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.5",
                "object-inspect": "^1.13.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-weakmap": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
            "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
            "license": "MIT",
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.5",
                "object-inspect": "^1.13.3",
                "side-channel-map": "^1.0.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/siginfo": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/siginfo/-/siginfo-2.0.0.tgz",
            "integrity": "sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==",
            "dev": true,
            "license": "ISC"
        },
        "node_modules/signal-exit": {
            "version": "4.1.0",
            "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
            "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
            "dev": true,
            "license": "ISC",
            "engines": {
                "node": ">=14"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/slash": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
            "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/source-map-js": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
            "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
            "dev": true,
            "license": "BSD-3-Clause",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/stackback": {
            "version": "0.0.2",
            "resolved": "https://registry.npmjs.org/stackback/-/stackback-0.0.2.tgz",
            "integrity": "sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/statuses": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.2.tgz",
            "integrity": "sha512-DvEy55V3DB7uknRo+4iOGT5fP1slR8wQohVdknigZPMpMstaKJQWhwiYBACJE3Ul2pTnATihhBYnRhZQHGBiRw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/std-env": {
            "version": "3.9.0",
            "resolved": "https://registry.npmjs.org/std-env/-/std-env-3.9.0.tgz",
            "integrity": "sha512-UGvjygr6F6tpH7o2qyqR6QYpwraIjKSdtzyBdyytFOHmPZY917kwdwLG0RbOjWOnKmnm3PeHjaoLLMie7kPLQw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/string-width": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
            "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "eastasianwidth": "^0.2.0",
                "emoji-regex": "^9.2.2",
                "strip-ansi": "^7.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/string-width-cjs": {
            "name": "string-width",
            "version": "4.2.3",
            "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
            "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "emoji-regex": "^8.0.0",
                "is-fullwidth-code-point": "^3.0.0",
                "strip-ansi": "^6.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/string-width-cjs/node_modules/emoji-regex": {
            "version": "8.0.0",
            "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
            "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/string-width/node_modules/ansi-regex": {
            "version": "6.1.0",
            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
            "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-regex?sponsor=1"
            }
        },
        "node_modules/string-width/node_modules/strip-ansi": {
            "version": "7.1.0",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
            "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ansi-regex": "^6.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/strip-ansi?sponsor=1"
            }
        },
        "node_modules/strip-ansi": {
            "version": "6.0.1",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
            "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ansi-regex": "^5.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/strip-ansi-cjs": {
            "name": "strip-ansi",
            "version": "6.0.1",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
            "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ansi-regex": "^5.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/strip-final-newline": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-3.0.0.tgz",
            "integrity": "sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/strip-json-comments": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
            "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/strip-literal": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/strip-literal/-/strip-literal-2.1.1.tgz",
            "integrity": "sha512-631UJ6O00eNGfMiWG78ck80dfBab8X6IVFB51jZK5Icd7XAs60Z5y7QdSd/wGIklnWvRbUNloVzhOKKmutxQ6Q==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "js-tokens": "^9.0.1"
            },
            "funding": {
                "url": "https://github.com/sponsors/antfu"
            }
        },
        "node_modules/supports-color": {
            "version": "7.2.0",
            "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
            "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "has-flag": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/synckit": {
            "version": "0.11.8",
            "resolved": "https://registry.npmjs.org/synckit/-/synckit-0.11.8.tgz",
            "integrity": "sha512-+XZ+r1XGIJGeQk3VvXhT6xx/VpbHsRzsTkGgF6E5RX9TTXD0118l87puaEBZ566FhqblC6U0d4XnubznJDm30A==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@pkgr/core": "^0.2.4"
            },
            "engines": {
                "node": "^14.18.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/synckit"
            }
        },
        "node_modules/text-table": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
            "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/tinybench": {
            "version": "2.9.0",
            "resolved": "https://registry.npmjs.org/tinybench/-/tinybench-2.9.0.tgz",
            "integrity": "sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/tinypool": {
            "version": "0.8.4",
            "resolved": "https://registry.npmjs.org/tinypool/-/tinypool-0.8.4.tgz",
            "integrity": "sha512-i11VH5gS6IFeLY3gMBQ00/MmLncVP7JLXOw1vlgkytLmJK7QnEr7NXf0LBdxfmNPAeyetukOk0bOYrJrFGjYJQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=14.0.0"
            }
        },
        "node_modules/tinyspy": {
            "version": "2.2.1",
            "resolved": "https://registry.npmjs.org/tinyspy/-/tinyspy-2.2.1.tgz",
            "integrity": "sha512-KYad6Vy5VDWV4GH3fjpseMQ/XU2BhIYP7Vzd0LG44qRWm/Yt2WCOTicFdvmgo6gWaqooMQCawTtILVQJupKu7A==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=14.0.0"
            }
        },
        "node_modules/to-regex-range": {
            "version": "5.0.1",
            "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
            "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "is-number": "^7.0.0"
            },
            "engines": {
                "node": ">=8.0"
            }
        },
        "node_modules/toidentifier": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
            "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
            "license": "MIT",
            "engines": {
                "node": ">=0.6"
            }
        },
        "node_modules/ts-api-utils": {
            "version": "1.4.3",
            "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.3.tgz",
            "integrity": "sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=16"
            },
            "peerDependencies": {
                "typescript": ">=4.2.0"
            }
        },
        "node_modules/ts-node": {
            "version": "10.9.2",
            "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.9.2.tgz",
            "integrity": "sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@cspotcode/source-map-support": "^0.8.0",
                "@tsconfig/node10": "^1.0.7",
                "@tsconfig/node12": "^1.0.7",
                "@tsconfig/node14": "^1.0.0",
                "@tsconfig/node16": "^1.0.2",
                "acorn": "^8.4.1",
                "acorn-walk": "^8.1.1",
                "arg": "^4.1.0",
                "create-require": "^1.1.0",
                "diff": "^4.0.1",
                "make-error": "^1.1.1",
                "v8-compile-cache-lib": "^3.0.1",
                "yn": "3.1.1"
            },
            "bin": {
                "ts-node": "dist/bin.js",
                "ts-node-cwd": "dist/bin-cwd.js",
                "ts-node-esm": "dist/bin-esm.js",
                "ts-node-script": "dist/bin-script.js",
                "ts-node-transpile-only": "dist/bin-transpile.js",
                "ts-script": "dist/bin-script-deprecated.js"
            },
            "peerDependencies": {
                "@swc/core": ">=1.2.50",
                "@swc/wasm": ">=1.2.50",
                "@types/node": "*",
                "typescript": ">=2.7"
            },
            "peerDependenciesMeta": {
                "@swc/core": {
                    "optional": true
                },
                "@swc/wasm": {
                    "optional": true
                }
            }
        },
        "node_modules/tsx": {
            "version": "4.20.3",
            "resolved": "https://registry.npmjs.org/tsx/-/tsx-4.20.3.tgz",
            "integrity": "sha512-qjbnuR9Tr+FJOMBqJCW5ehvIo/buZq7vH7qD7JziU98h6l3qGy0a/yPFjwO+y0/T7GFpNgNAvEcPPVfyT8rrPQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "esbuild": "~0.25.0",
                "get-tsconfig": "^4.7.5"
            },
            "bin": {
                "tsx": "dist/cli.mjs"
            },
            "engines": {
                "node": ">=18.0.0"
            },
            "optionalDependencies": {
                "fsevents": "~2.3.3"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/aix-ppc64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.5.tgz",
            "integrity": "sha512-9o3TMmpmftaCMepOdA5k/yDw8SfInyzWWTjYTFCX3kPSDJMROQTb8jg+h9Cnwnmm1vOzvxN7gIfB5V2ewpjtGA==",
            "cpu": [
                "ppc64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "aix"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/android-arm": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.5.tgz",
            "integrity": "sha512-AdJKSPeEHgi7/ZhuIPtcQKr5RQdo6OO2IL87JkianiMYMPbCtot9fxPbrMiBADOWWm3T2si9stAiVsGbTQFkbA==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "android"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/android-arm64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.5.tgz",
            "integrity": "sha512-VGzGhj4lJO+TVGV1v8ntCZWJktV7SGCs3Pn1GRWI1SBFtRALoomm8k5E9Pmwg3HOAal2VDc2F9+PM/rEY6oIDg==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "android"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/android-x64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.5.tgz",
            "integrity": "sha512-D2GyJT1kjvO//drbRT3Hib9XPwQeWd9vZoBJn+bu/lVsOZ13cqNdDeqIF/xQ5/VmWvMduP6AmXvylO/PIc2isw==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "android"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/darwin-arm64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.5.tgz",
            "integrity": "sha512-GtaBgammVvdF7aPIgH2jxMDdivezgFu6iKpmT+48+F8Hhg5J/sfnDieg0aeG/jfSvkYQU2/pceFPDKlqZzwnfQ==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/darwin-x64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.5.tgz",
            "integrity": "sha512-1iT4FVL0dJ76/q1wd7XDsXrSW+oLoquptvh4CLR4kITDtqi2e/xwXwdCVH8hVHU43wgJdsq7Gxuzcs6Iq/7bxQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/freebsd-arm64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.5.tgz",
            "integrity": "sha512-nk4tGP3JThz4La38Uy/gzyXtpkPW8zSAmoUhK9xKKXdBCzKODMc2adkB2+8om9BDYugz+uGV7sLmpTYzvmz6Sw==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "freebsd"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/freebsd-x64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.5.tgz",
            "integrity": "sha512-PrikaNjiXdR2laW6OIjlbeuCPrPaAl0IwPIaRv+SMV8CiM8i2LqVUHFC1+8eORgWyY7yhQY+2U2fA55mBzReaw==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "freebsd"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/linux-arm": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.5.tgz",
            "integrity": "sha512-cPzojwW2okgh7ZlRpcBEtsX7WBuqbLrNXqLU89GxWbNt6uIg78ET82qifUy3W6OVww6ZWobWub5oqZOVtwolfw==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/linux-arm64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.5.tgz",
            "integrity": "sha512-Z9kfb1v6ZlGbWj8EJk9T6czVEjjq2ntSYLY2cw6pAZl4oKtfgQuS4HOq41M/BcoLPzrUbNd+R4BXFyH//nHxVg==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/linux-ia32": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.5.tgz",
            "integrity": "sha512-sQ7l00M8bSv36GLV95BVAdhJ2QsIbCuCjh/uYrWiMQSUuV+LpXwIqhgJDcvMTj+VsQmqAHL2yYaasENvJ7CDKA==",
            "cpu": [
                "ia32"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/linux-loong64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.5.tgz",
            "integrity": "sha512-0ur7ae16hDUC4OL5iEnDb0tZHDxYmuQyhKhsPBV8f99f6Z9KQM02g33f93rNH5A30agMS46u2HP6qTdEt6Q1kg==",
            "cpu": [
                "loong64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/linux-mips64el": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.5.tgz",
            "integrity": "sha512-kB/66P1OsHO5zLz0i6X0RxlQ+3cu0mkxS3TKFvkb5lin6uwZ/ttOkP3Z8lfR9mJOBk14ZwZ9182SIIWFGNmqmg==",
            "cpu": [
                "mips64el"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/linux-ppc64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.5.tgz",
            "integrity": "sha512-UZCmJ7r9X2fe2D6jBmkLBMQetXPXIsZjQJCjgwpVDz+YMcS6oFR27alkgGv3Oqkv07bxdvw7fyB71/olceJhkQ==",
            "cpu": [
                "ppc64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/linux-riscv64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.5.tgz",
            "integrity": "sha512-kTxwu4mLyeOlsVIFPfQo+fQJAV9mh24xL+y+Bm6ej067sYANjyEw1dNHmvoqxJUCMnkBdKpvOn0Ahql6+4VyeA==",
            "cpu": [
                "riscv64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/linux-s390x": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.5.tgz",
            "integrity": "sha512-K2dSKTKfmdh78uJ3NcWFiqyRrimfdinS5ErLSn3vluHNeHVnBAFWC8a4X5N+7FgVE1EjXS1QDZbpqZBjfrqMTQ==",
            "cpu": [
                "s390x"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/linux-x64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.5.tgz",
            "integrity": "sha512-uhj8N2obKTE6pSZ+aMUbqq+1nXxNjZIIjCjGLfsWvVpy7gKCOL6rsY1MhRh9zLtUtAI7vpgLMK6DxjO8Qm9lJw==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/netbsd-x64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.5.tgz",
            "integrity": "sha512-WOb5fKrvVTRMfWFNCroYWWklbnXH0Q5rZppjq0vQIdlsQKuw6mdSihwSo4RV/YdQ5UCKKvBy7/0ZZYLBZKIbwQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "netbsd"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/openbsd-x64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.5.tgz",
            "integrity": "sha512-G4hE405ErTWraiZ8UiSoesH8DaCsMm0Cay4fsFWOOUcz8b8rC6uCvnagr+gnioEjWn0wC+o1/TAHt+It+MpIMg==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "openbsd"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/sunos-x64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.5.tgz",
            "integrity": "sha512-l+azKShMy7FxzY0Rj4RCt5VD/q8mG/e+mDivgspo+yL8zW7qEwctQ6YqKX34DTEleFAvCIUviCFX1SDZRSyMQA==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "sunos"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/win32-arm64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.5.tgz",
            "integrity": "sha512-O2S7SNZzdcFG7eFKgvwUEZ2VG9D/sn/eIiz8XRZ1Q/DO5a3s76Xv0mdBzVM5j5R639lXQmPmSo0iRpHqUUrsxw==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/win32-ia32": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.5.tgz",
            "integrity": "sha512-onOJ02pqs9h1iMJ1PQphR+VZv8qBMQ77Klcsqv9CNW2w6yLqoURLcgERAIurY6QE63bbLuqgP9ATqajFLK5AMQ==",
            "cpu": [
                "ia32"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/@esbuild/win32-x64": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.5.tgz",
            "integrity": "sha512-TXv6YnJ8ZMVdX+SXWVBo/0p8LTcrUYngpWjvm91TMjjBQii7Oz11Lw5lbDV5Y0TzuhSJHwiH4hEtC1I42mMS0g==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "license": "MIT",
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/tsx/node_modules/esbuild": {
            "version": "0.25.5",
            "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.5.tgz",
            "integrity": "sha512-P8OtKZRv/5J5hhz0cUAdu/cLuPIKXpQl1R9pZtvmHWQvrAUVd0UNIPT4IB4W3rNOqVO0rlqHmCIbSwxh/c9yUQ==",
            "dev": true,
            "hasInstallScript": true,
            "license": "MIT",
            "bin": {
                "esbuild": "bin/esbuild"
            },
            "engines": {
                "node": ">=18"
            },
            "optionalDependencies": {
                "@esbuild/aix-ppc64": "0.25.5",
                "@esbuild/android-arm": "0.25.5",
                "@esbuild/android-arm64": "0.25.5",
                "@esbuild/android-x64": "0.25.5",
                "@esbuild/darwin-arm64": "0.25.5",
                "@esbuild/darwin-x64": "0.25.5",
                "@esbuild/freebsd-arm64": "0.25.5",
                "@esbuild/freebsd-x64": "0.25.5",
                "@esbuild/linux-arm": "0.25.5",
                "@esbuild/linux-arm64": "0.25.5",
                "@esbuild/linux-ia32": "0.25.5",
                "@esbuild/linux-loong64": "0.25.5",
                "@esbuild/linux-mips64el": "0.25.5",
                "@esbuild/linux-ppc64": "0.25.5",
                "@esbuild/linux-riscv64": "0.25.5",
                "@esbuild/linux-s390x": "0.25.5",
                "@esbuild/linux-x64": "0.25.5",
                "@esbuild/netbsd-arm64": "0.25.5",
                "@esbuild/netbsd-x64": "0.25.5",
                "@esbuild/openbsd-arm64": "0.25.5",
                "@esbuild/openbsd-x64": "0.25.5",
                "@esbuild/sunos-x64": "0.25.5",
                "@esbuild/win32-arm64": "0.25.5",
                "@esbuild/win32-ia32": "0.25.5",
                "@esbuild/win32-x64": "0.25.5"
            }
        },
        "node_modules/type-check": {
            "version": "0.4.0",
            "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
            "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "prelude-ls": "^1.2.1"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/type-detect": {
            "version": "4.1.0",
            "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.1.0.tgz",
            "integrity": "sha512-Acylog8/luQ8L7il+geoSxhEkazvkslg7PSNKOX59mbB9cOveP5aq9h74Y7YU8yDpJwetzQQrfIwtf4Wp4LKcw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/type-fest": {
            "version": "0.20.2",
            "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
            "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
            "dev": true,
            "license": "(MIT OR CC0-1.0)",
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/type-is": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/type-is/-/type-is-2.0.1.tgz",
            "integrity": "sha512-OZs6gsjF4vMp32qrCbiVSkrFmXtG/AZhY3t0iAMrMBiAZyV9oALtXO8hsrHbMXF9x6L3grlFuwW2oAz7cav+Gw==",
            "license": "MIT",
            "dependencies": {
                "content-type": "^1.0.5",
                "media-typer": "^1.1.0",
                "mime-types": "^3.0.0"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/typescript": {
            "version": "5.8.3",
            "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
            "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
            "dev": true,
            "license": "Apache-2.0",
            "bin": {
                "tsc": "bin/tsc",
                "tsserver": "bin/tsserver"
            },
            "engines": {
                "node": ">=14.17"
            }
        },
        "node_modules/ufo": {
            "version": "1.6.1",
            "resolved": "https://registry.npmjs.org/ufo/-/ufo-1.6.1.tgz",
            "integrity": "sha512-9a4/uxlTWJ4+a5i0ooc1rU7C7YOw3wT+UGqdeNNHWnOF9qcMBgLRS+4IYUqbczewFx4mLEig6gawh7X6mFlEkA==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/undici-types": {
            "version": "6.21.0",
            "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
            "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/unpipe": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
            "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/uri-js": {
            "version": "4.4.1",
            "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
            "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
            "license": "BSD-2-Clause",
            "dependencies": {
                "punycode": "^2.1.0"
            }
        },
        "node_modules/v8-compile-cache-lib": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/v8-compile-cache-lib/-/v8-compile-cache-lib-3.0.1.tgz",
            "integrity": "sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/vary": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
            "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/vite": {
            "version": "5.4.19",
            "resolved": "https://registry.npmjs.org/vite/-/vite-5.4.19.tgz",
            "integrity": "sha512-qO3aKv3HoQC8QKiNSTuUM1l9o/XX3+c+VTgLHbJWHZGeTPVAg2XwazI9UWzoxjIJCGCV2zU60uqMzjeLZuULqA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "esbuild": "^0.21.3",
                "postcss": "^8.4.43",
                "rollup": "^4.20.0"
            },
            "bin": {
                "vite": "bin/vite.js"
            },
            "engines": {
                "node": "^18.0.0 || >=20.0.0"
            },
            "funding": {
                "url": "https://github.com/vitejs/vite?sponsor=1"
            },
            "optionalDependencies": {
                "fsevents": "~2.3.3"
            },
            "peerDependencies": {
                "@types/node": "^18.0.0 || >=20.0.0",
                "less": "*",
                "lightningcss": "^1.21.0",
                "sass": "*",
                "sass-embedded": "*",
                "stylus": "*",
                "sugarss": "*",
                "terser": "^5.4.0"
            },
            "peerDependenciesMeta": {
                "@types/node": {
                    "optional": true
                },
                "less": {
                    "optional": true
                },
                "lightningcss": {
                    "optional": true
                },
                "sass": {
                    "optional": true
                },
                "sass-embedded": {
                    "optional": true
                },
                "stylus": {
                    "optional": true
                },
                "sugarss": {
                    "optional": true
                },
                "terser": {
                    "optional": true
                }
            }
        },
        "node_modules/vite-node": {
            "version": "1.6.1",
            "resolved": "https://registry.npmjs.org/vite-node/-/vite-node-1.6.1.tgz",
            "integrity": "sha512-YAXkfvGtuTzwWbDSACdJSg4A4DZiAqckWe90Zapc/sEX3XvHcw1NdurM/6od8J207tSDqNbSsgdCacBgvJKFuA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "cac": "^6.7.14",
                "debug": "^4.3.4",
                "pathe": "^1.1.1",
                "picocolors": "^1.0.0",
                "vite": "^5.0.0"
            },
            "bin": {
                "vite-node": "vite-node.mjs"
            },
            "engines": {
                "node": "^18.0.0 || >=20.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/vitest"
            }
        },
        "node_modules/vitest": {
            "version": "1.6.1",
            "resolved": "https://registry.npmjs.org/vitest/-/vitest-1.6.1.tgz",
            "integrity": "sha512-Ljb1cnSJSivGN0LqXd/zmDbWEM0RNNg2t1QW/XUhYl/qPqyu7CsqeWtqQXHVaJsecLPuDoak2oJcZN2QoRIOag==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@vitest/expect": "1.6.1",
                "@vitest/runner": "1.6.1",
                "@vitest/snapshot": "1.6.1",
                "@vitest/spy": "1.6.1",
                "@vitest/utils": "1.6.1",
                "acorn-walk": "^8.3.2",
                "chai": "^4.3.10",
                "debug": "^4.3.4",
                "execa": "^8.0.1",
                "local-pkg": "^0.5.0",
                "magic-string": "^0.30.5",
                "pathe": "^1.1.1",
                "picocolors": "^1.0.0",
                "std-env": "^3.5.0",
                "strip-literal": "^2.0.0",
                "tinybench": "^2.5.1",
                "tinypool": "^0.8.3",
                "vite": "^5.0.0",
                "vite-node": "1.6.1",
                "why-is-node-running": "^2.2.2"
            },
            "bin": {
                "vitest": "vitest.mjs"
            },
            "engines": {
                "node": "^18.0.0 || >=20.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/vitest"
            },
            "peerDependencies": {
                "@edge-runtime/vm": "*",
                "@types/node": "^18.0.0 || >=20.0.0",
                "@vitest/browser": "1.6.1",
                "@vitest/ui": "1.6.1",
                "happy-dom": "*",
                "jsdom": "*"
            },
            "peerDependenciesMeta": {
                "@edge-runtime/vm": {
                    "optional": true
                },
                "@types/node": {
                    "optional": true
                },
                "@vitest/browser": {
                    "optional": true
                },
                "@vitest/ui": {
                    "optional": true
                },
                "happy-dom": {
                    "optional": true
                },
                "jsdom": {
                    "optional": true
                }
            }
        },
        "node_modules/which": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
            "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
            "license": "ISC",
            "dependencies": {
                "isexe": "^2.0.0"
            },
            "bin": {
                "node-which": "bin/node-which"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/why-is-node-running": {
            "version": "2.3.0",
            "resolved": "https://registry.npmjs.org/why-is-node-running/-/why-is-node-running-2.3.0.tgz",
            "integrity": "sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "siginfo": "^2.0.0",
                "stackback": "0.0.2"
            },
            "bin": {
                "why-is-node-running": "cli.js"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/word-wrap": {
            "version": "1.2.5",
            "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
            "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/wrap-ansi": {
            "version": "8.1.0",
            "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
            "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ansi-styles": "^6.1.0",
                "string-width": "^5.0.1",
                "strip-ansi": "^7.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
            }
        },
        "node_modules/wrap-ansi-cjs": {
            "name": "wrap-ansi",
            "version": "7.0.0",
            "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
            "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ansi-styles": "^4.0.0",
                "string-width": "^4.1.0",
                "strip-ansi": "^6.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
            }
        },
        "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
            "version": "8.0.0",
            "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
            "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/wrap-ansi-cjs/node_modules/string-width": {
            "version": "4.2.3",
            "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
            "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "emoji-regex": "^8.0.0",
                "is-fullwidth-code-point": "^3.0.0",
                "strip-ansi": "^6.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/wrap-ansi/node_modules/ansi-regex": {
            "version": "6.1.0",
            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
            "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-regex?sponsor=1"
            }
        },
        "node_modules/wrap-ansi/node_modules/ansi-styles": {
            "version": "6.2.1",
            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
            "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-styles?sponsor=1"
            }
        },
        "node_modules/wrap-ansi/node_modules/strip-ansi": {
            "version": "7.1.0",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
            "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ansi-regex": "^6.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/strip-ansi?sponsor=1"
            }
        },
        "node_modules/wrappy": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
            "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
            "license": "ISC"
        },
        "node_modules/yn": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
            "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/yocto-queue": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
            "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/zod": {
            "version": "3.25.64",
            "resolved": "https://registry.npmjs.org/zod/-/zod-3.25.64.tgz",
            "integrity": "sha512-hbP9FpSZf7pkS7hRVUrOjhwKJNyampPgtXKc3AN6DsWtoHsg2Sb4SQaS4Tcay380zSwd2VPo9G9180emBACp5g==",
            "license": "MIT",
            "funding": {
                "url": "https://github.com/sponsors/colinhacks"
            }
        },
        "node_modules/zod-to-json-schema": {
            "version": "3.24.5",
            "resolved": "https://registry.npmjs.org/zod-to-json-schema/-/zod-to-json-schema-3.24.5.tgz",
            "integrity": "sha512-/AuWwMP+YqiPbsJx5D6TfgRTc4kTLjsh5SOcd4bLsfUg2RcEXrFMJl1DGgdHy2aCfsIA/cr/1JM0xcB2GZji8g==",
            "license": "ISC",
            "peerDependencies": {
                "zod": "^3.24.1"
            }
        }
    }
}



---


- フォルダ名: ./mcp-client-typescript
- ファイル名: package.json
- 内容:
{
    "name": "mcp-client-typescript",
    "version": "0.1.0",
    "description": "A TypeScript client for interacting with MCP servers, initially tailored for scraping-mcp-server.",
    "main": "dist/cjs/index.js",
    "module": "dist/esm/index.js",
    "types": "dist/esm/index.d.ts",
    "type": "module",
    "scripts": {
        "build": "npm run clean && npm run build:esm && npm run build:cjs",
        "build:esm": "tsc -p tsconfig.json",
        "build:cjs": "tsc -p tsconfig.cjs.json",
        "clean": "rimraf dist",
        "lint": "eslint src/**/*.ts examples/**/*.ts tests/**/*.ts",
        "format": "prettier --write \"src/**/*.ts\" \"examples/**/*.ts\" \"tests/**/*.ts\"",
        "test": "vitest run",
        "example": "node --loader ts-node/esm examples/simpleUsage.ts",
        "prepublishOnly": "npm run build"
    },
    "keywords": [
        "mcp",
        "model-context-protocol",
        "client",
        "typescript"
    ],
    "author": "Taro (and AI-chan)",
    "license": "MIT",
    "dependencies": {
        "@modelcontextprotocol/sdk": "^1.12.3",
        "zod": "^3.23.8"
    },
    "devDependencies": {
        "@types/node": "^20.14.2",
        "@typescript-eslint/eslint-plugin": "^7.13.0",
        "@typescript-eslint/parser": "^7.13.0",
        "eslint": "^8.57.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-prettier": "^5.1.3",
        "prettier": "^3.3.2",
        "rimraf": "^5.0.7",
        "ts-node": "^10.9.2",
        "tsx": "^4.20.3",
        "typescript": "^5.4.5",
        "vitest": "^1.6.0"
    },
    "files": [
        "dist",
        "README.md",
        "LICENSE"
    ],
    "repository": {
        "type": "git",
        "url": "git+https://github.com/your-username/mcp-client-typescript.git"
    },
    "bugs": {
        "url": "https://github.com/your-username/mcp-client-typescript/issues"
    },
    "homepage": "https://github.com/your-username/mcp-client-typescript#readme",
    "engines": {
        "node": ">=18.0.0"
    }
}



---


- フォルダ名: ./mcp-client-typescript
- ファイル名: tsconfig.cjs.json
- 内容:
{
    "extends": "./tsconfig.json", // 基本設定を継承
    "compilerOptions": {
      "module": "CommonJS",
      "outDir": "./dist/cjs",
      "moduleResolution": "Node" // CommonJS 用
    }
  }


---


- フォルダ名: ./mcp-client-typescript
- ファイル名: tsconfig.json
- 内容:
{
  "compilerOptions": {
    "target": "ES2022",
    "module": "ESNext",
    "moduleResolution": "node", // NodeNext から node に変更済み
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "skipLibCheck": true,
    "declaration": true,
    "outDir": "./dist/esm",
    "rootDir": "./src",
    "sourceMap": true,
    "lib": ["ES2022", "DOM"]
  },
  "include": ["src/**/*.ts"],
  "exclude": ["node_modules", "dist", "tests", "examples"],
  "ts-node": { // ts-node 用の設定を追加
    "esm": true,
    "experimentalSpecifierResolution": "node" // 必要に応じて
    // "compilerOptions": { // ts-node実行時のみ上書きするオプション
    //   "module": "CommonJS" // もしESMでどうしても動かない場合の最終手段 (非推奨)
    // }
  }
}


---


- フォルダ名: ./mcp-client-typescript/examples
- ファイル名: callCrawlWebsiteTest.ts
- 内容:
// examples/callCrawlWebsiteTest.ts
import {
  McpClient,
  McpClientOptions,
  CrawlWebsiteArgs,
  CrawlWebsiteResult,
  McpClientRequestOptions,
  McpToolExecutionError,
  McpResponseParseError
} from '../src/index';

const SERVER_URL = 'http://localhost:3001/mcp';

async function main() {
  console.log('MCP Client Call Tool Test (crawl_website)');
  console.log(`Connecting to server: ${SERVER_URL}`);

  const clientOptions: McpClientOptions = {
    serverUrl: SERVER_URL,
    clientName: 'mcp-test-client-crawl',
    clientVersion: '1.0.3',
    defaultTimeout: 60000, // ★ defaultTimeoutMs から defaultTimeout に変更
  };

  const client = new McpClient(clientOptions);

  try {
    console.log('\nAttempting to connect...');
    await client.connect(); // connect時のタイムアウトは clientOptions.defaultTimeout が使われる
    console.log('Successfully connected!');

    if (client.isConnected) {
      console.log('\n--- Calling crawl_website tool ---');

      const toolArgs: CrawlWebsiteArgs = {
        url: 'file:///C:/Users/sinzy/interceptor01/generated_links02.html',
        selector: 'a', // サーバーのスキーマでは必須
        max_depth: 1,
        headless_mode: false,
        apply_stealth: false,
        no_samedomain: true, 
        main_content_only: true,
        // ★ 直接実行時の --no-samedomain に合わせる
        // 他の引数も必要に応じて設定 (サーバーのスキーマとexeのヘルプを参照)
      };

      const callOptions: McpClientRequestOptions = {
        timeout: 90000, // このツール呼び出し専用のタイムアウト (ミリ秒)
        // 他の SdkRequestOptions プロパティも設定可能
      };

      console.log(`Args: ${JSON.stringify(toolArgs)}`);
      console.log('Calling tool, please wait (this might take a while)...');

      const result: CrawlWebsiteResult = await client.crawlWebsite(toolArgs, callOptions);

      console.log('\n--- Tool Result (Crawl Website) ---');
      // ★★★ CrawlWebsiteResult の型定義に合わせて結果を表示 ★★★
      console.log('Crawl Summary:', result.crawl_summary);
      console.log('All Crawled URLs:', result.all_crawled_urls_unique);
      console.log('All Unique Emails:', result.all_unique_emails_found);
      console.log('All Unique Phones:', result.all_unique_phones_found);
      if (result.results_by_domain) {
          console.log('Results by Domain (first domain, first entry):', Object.values(result.results_by_domain)[0]?.[0]);
      }
      console.log('----------------------------------');

    } else {
      console.error('Failed to connect or client is not marked as connected.');
    }

  } catch (error: any) {
    console.error('\n--- ERROR ---');
    if (error instanceof McpToolExecutionError) {
      console.error('Tool Execution Error:', error.message);
      if (error.toolResult) console.error('  Tool Result:', JSON.stringify(error.toolResult, null, 2));
      if (error.toolOutputContent) console.error('  Tool Output Content:', JSON.stringify(error.toolOutputContent, null, 2));
    } else if (error instanceof McpResponseParseError) {
      console.error('Response Parse Error:', error.message);
      console.error('  Raw Response:', error.rawResponse);
    } else {
      console.error('Test failed:', error.message);
    }

    if (error.originalError) {
      console.error('Original error:', error.originalError);
    }
    if (error.stack) {
      console.error('Stack trace:\n', error.stack);
    }
    console.error('-------------');
  } finally {
    if (client.isConnected) {
      try {
        console.log('\nAttempting to close connection...');
        await client.close();
        console.log('Connection closed successfully.');
      } catch (closeError: any) {
        console.error('\n--- ERROR during close ---');
        console.error('Failed to close connection:', closeError.message);
      }
    } else {
      console.log('\nClient was not connected or already closed, no need to explicitly close again.');
    }
  }

  console.log('\nCall crawl_website tool test finished.');
}

main().catch(e => {
  console.error("Unhandled error in main:", e);
});


---


- フォルダ名: ./mcp-client-typescript/examples
- ファイル名: callGoogleAiSummaryTest.ts
- 内容:
// examples/callGoogleAiSummaryTest.ts
import {
    McpClient,
    McpClientOptions,
    GetGoogleAiSummaryArgs,
    GetGoogleAiSummaryResult,
    AiSummaryResultItem,
    McpClientRequestOptions,
    McpToolExecutionError,
    McpResponseParseError
  } from '../src/index';
  
  const SERVER_URL = 'http://localhost:3001/mcp';
  
  async function main() {
    console.log('MCP Client Call Tool Test (get_google_ai_summary)');
    console.log(`Connecting to server: ${SERVER_URL}`);
  
    const clientOptions: McpClientOptions = {
      serverUrl: SERVER_URL,
      clientName: 'mcp-test-client-googleai',
      clientVersion: '1.0.4',
      defaultTimeout: 60000,
    };
  
    const client = new McpClient(clientOptions);
  
    try {
      console.log('\nAttempting to connect...');
      await client.connect();
      console.log('Successfully connected!');
  
      if (client.isConnected) {
        console.log('\n--- Calling get_google_ai_summary tool ---');
  
        const toolArgs: GetGoogleAiSummaryArgs = {
          query: 'AIとは何か', // テストしたい検索クエリ
        };
  
        const callOptions: McpClientRequestOptions = {
          timeout: 90000,
        };
  
        console.log(`Args: ${JSON.stringify(toolArgs)}`);
        console.log('Calling tool, please wait...');
  
        const result: GetGoogleAiSummaryResult = await client.getGoogleAiSummary(toolArgs, callOptions);
  
        console.log('\n--- Tool Result (Get Google AI Summary) ---');
        console.log('Query:', result.query);
        if(result.execution_datetime) console.log('Execution Datetime:', result.execution_datetime);
  
        console.log('\nAI Summary Results Count:', result.ai_summary_results_count ?? 'N/A');
        console.log('AI Summary Source List:');
        if (result.ai_summary_results && result.ai_summary_results.length > 0) {
          result.ai_summary_results.forEach((item, index) => {
            console.log(`  AI Source #${index + 1}:`);
            console.log(`    Title: ${item.title}`);
            console.log(`    URL: ${item.url}`);
            console.log(`    Source Type: ${item.source_type}`);
          });
        } else {
          console.log('  No AI summary sources found.');
        }
  
        console.log('\nGoogle Search Results Count:', result.google_search_results_count ?? 'N/A');
        console.log('Google Search Results List:');
        if (result.google_search_results && result.google_search_results.length > 0) {
          result.google_search_results.forEach((item, index) => {
            console.log(`  Search Result #${index + 1}:`);
            console.log(`    Title: ${item.title}`);
            console.log(`    URL: ${item.url}`);
            console.log(`    Source Type: ${item.source_type}`);
          });
        } else {
          console.log('  No Google search results found.');
        }
        console.log('-------------------------------------------');
  
      } else {
        console.error('Failed to connect or client is not marked as connected.');
      }
  
    } catch (error: any) {
      console.error('\n--- ERROR ---');
      if (error instanceof McpToolExecutionError) {
        console.error('Tool Execution Error:', error.message);
        if (error.toolResult) console.error('  Tool Result:', JSON.stringify(error.toolResult, null, 2));
        if (error.toolOutputContent) console.error('  Tool Output Content:', JSON.stringify(error.toolOutputContent, null, 2));
      } else if (error instanceof McpResponseParseError) {
        console.error('Response Parse Error:', error.message);
        console.error('  Raw Response:', error.rawResponse);
      } else {
        console.error('Test failed:', error.message);
      }
  
      if (error.originalError) {
        console.error('Original error:', error.originalError);
      }
      if (error.stack) {
        console.error('Stack trace:\n', error.stack);
      }
      console.error('-------------');
    } finally {
      if (client.isConnected) {
        try {
          console.log('\nAttempting to close connection...');
          await client.close();
          console.log('Connection closed successfully.');
        } catch (closeError: any) {
          console.error('\n--- ERROR during close ---');
          console.error('Failed to close connection:', closeError.message);
        }
      } else {
        console.log('\nClient was not connected or already closed, no need to explicitly close again.');
      }
    }
  
    console.log('\nCall get_google_ai_summary tool test finished.');
  }
  
  main().catch(e => {
    console.error("Unhandled error in main:", e);
  });


---


- フォルダ名: ./mcp-client-typescript/examples
- ファイル名: callGoogleSearchTest.ts
- 内容:
// examples/callGoogleSearchTest.ts
import {
    McpClient,
    McpClientOptions,
    // ★★★ インポートする型を新しいファイルからに変更 ★★★
    GoogleSearchArgs,
    GoogleSearchResult,
    // ★★★ ここまで ★★★
    McpClientRequestOptions,
    McpToolExecutionError,
    McpResponseParseError
  } from '../src/index';
  
  // サーバーのURLは同じ
  const SERVER_URL = 'http://localhost:3001/mcp';
  
  async function main() {
    console.log('MCP Client Call Tool Test (google_search)');
    console.log(`Connecting to server: ${SERVER_URL}`);
  
    const clientOptions: McpClientOptions = {
      serverUrl: SERVER_URL,
      clientName: 'mcp-test-client-googlesearch',
      clientVersion: '1.0.1', // バージョンアップ
      defaultTimeout: 60000,
    };
  
    const client = new McpClient(clientOptions);
  
    try {
      console.log('\nAttempting to connect...');
      await client.connect();
      console.log('Successfully connected!');
  
      if (client.isConnected) {
        console.log('\n--- Calling google_search tool ---');
  
        const toolArgs: GoogleSearchArgs = {
          query: 'Playwrightとは',
          search_pages: 2,
        };
  
        const callOptions: McpClientRequestOptions = {
          timeout: 300000, // 5分
        };
  
        console.log(`Args: ${JSON.stringify(toolArgs)}`);
        console.log('Calling tool, please wait...');
  
        // ★★★ 呼び出し部分は変更なし ★★★
        const result: GoogleSearchResult = await client.googleSearch(toolArgs, callOptions);
  
        // ★★★ 結果表示部分も変更なし ★★★
        console.log('\n--- Tool Result (Google Search) ---');
        
        if (result.metadata) {
            console.log('Metadata:');
            console.log(`  Query Used: ${result.metadata.query_used}`);
            console.log(`  Timestamp: ${result.metadata.timestamp}`);
            console.log(`  Total URLs Processed: ${result.metadata.total_urls_processed}`);
            console.log(`  Valid Results Count: ${result.metadata.valid_results_count}`);
        }
  
        console.log('\nSearch Results:');
        if (result.search_results && result.search_results.length > 0) {
          result.search_results.forEach((item, index) => {
            console.log(`\n  Result #${index + 1}:`);
            console.log(`    Title: ${item.title}`);
            console.log(`    URL: ${item.url}`);
            console.log(`    Source Category: ${item.source_category}`);
            console.log(`    Emails: ${item.emails.length > 0 ? item.emails.join(', ') : 'N/A'}`);
            console.log(`    Phones: ${item.phones.length > 0 ? item.phones.join(', ') : 'N/A'}`);
            console.log(`    Content Preview: ${item.content_preview?.substring(0, 100) || '(No content)'}...`);
            if (item.error_details) {
              console.log(`    ERROR: ${item.error_details}`);
            }
          });
        } else {
          console.log('  No search results found or processed.');
        }
        console.log('-------------------------------------------');
  
      } else {
        console.error('Failed to connect or client is not marked as connected.');
      }
  
    } catch (error: any) {
      // エラーハンドリング部分は変更なし
      console.error('\n--- ERROR ---');
      if (error instanceof McpToolExecutionError) {
        console.error('Tool Execution Error:', error.message);
        if (error.toolResult) console.error('  Tool Result:', JSON.stringify(error.toolResult, null, 2));
        if (error.toolOutputContent) console.error('  Tool Output Content:', JSON.stringify(error.toolOutputContent, null, 2));
      } else if (error instanceof McpResponseParseError) {
        console.error('Response Parse Error:', error.message);
        console.error('  Raw Response:', error.rawResponse);
      } else {
        console.error('Test failed:', error.message);
      }
  
      if (error.originalError) {
        console.error('Original error:', error.originalError);
      }
      if (error.stack) {
        console.error('Stack trace:\n', error.stack);
      }
      console.error('-------------');
    } finally {
      // 接続終了処理も変更なし
      if (client.isConnected) {
        try {
          console.log('\nAttempting to close connection...');
          await client.close();
          console.log('Connection closed successfully.');
        } catch (closeError: any) {
          console.error('\n--- ERROR during close ---');
          console.error('Failed to close connection:', closeError.message);
        }
      } else {
        console.log('\nClient was not connected or already closed, no need to explicitly close again.');
      }
    }
    
    console.log('\nCall google_search tool test finished.');
  }
  
  main().catch(e => {
    console.error("Unhandled error in main:", e);
  });


---


- フォルダ名: ./mcp-client-typescript/examples
- ファイル名: callScrapeLawPageTest.ts
- 内容:
// examples/callScrapeLawPageTest.ts
import {
    McpClient,
    McpClientOptions,
    ScrapeLawPageArgs,
    ScrapeLawPageResult,
    LawPageContextEntry, // 結果のアイテム型もインポート
    McpClientRequestOptions,
    McpToolExecutionError,
    McpResponseParseError
  } from '../src/index';
  
  // --- 設定項目 (ご自身の環境に合わせて変更してください) ---
  const SERVER_URL = 'http://localhost:3001/mcp'; // 実際のMCPサーバーのURL
  // ----------------------------------------------------
  
  async function main() {
    console.log('MCP Client Call Tool Test (scrape_law_page)');
    console.log(`Connecting to server: ${SERVER_URL}`);
  
    const clientOptions: McpClientOptions = {
      serverUrl: SERVER_URL,
      clientName: 'mcp-test-client-lawscraper',
      clientVersion: '1.0.5',
      defaultTimeout: 60000, // デフォルトタイムアウトを60秒に設定
    };
  
    const client = new McpClient(clientOptions);
  
    try {
      // 1. 接続
      console.log('\nAttempting to connect...');
      await client.connect();
      console.log('Successfully connected!');
  
      if (client.isConnected) {
        console.log('\n--- Calling scrape_law_page tool ---');
  
        // ツールに渡す引数を準備
        const toolArgs: ScrapeLawPageArgs = {
          url: 'https://laws.e-gov.go.jp/law/325AC0000000201', // ★ テストしたい法令ページのURLに変更してください (例: 著作権法)
          keyword: '階段', // ★ テストしたいキーワードに変更してください
          headless_mode: false, // オプショナル
          // wait_selector: '#elaws_content', // オプショナル: ページ読み込み後に待機するセレクタ
          // timeout: 30000, // オプショナル: ページごとのタイムアウト
          // browser_type: 'chromium', // オプショナル
          // context_window: 150, // オプショナル
          // merge_threshold: 70, // オプショナル
        };
  
        // ツール呼び出し時のオプション (必要であれば)
        const callOptions: McpClientRequestOptions = {
          timeout: 90000, // このツール呼び出し専用のタイムアウト (90秒)
        };
  
        console.log(`Args: ${JSON.stringify(toolArgs)}`);
        console.log('Calling tool, please wait (this might take some time)...');
  
        // 専用メソッドを使ってツールを呼び出す
        const result: ScrapeLawPageResult = await client.scrapeLawPage(toolArgs, callOptions);
  
        console.log('\n--- Tool Result (Scrape Law Page) ---');
        console.log('Source URL:', result.source_url);
        console.log('Search Keyword:', result.search_keyword);
        console.log('Total Keyword Occurrences in Snippets:', result.total_keyword_occurrences_in_snippets);
        console.log('Total Context Entries:', result.total_context_entries);
  
        console.log('\nResults:');
        if (result.results && result.results.length > 0) {
          result.results.slice(0, 5).forEach((entry: LawPageContextEntry, index: number) => { // 最初の5件まで表示
            console.log(`  Entry #${index + 1}:`);
            console.log(`    ID: ${entry.id}`);
            console.log(`    Hierarchy:`);
            if (entry.hierarchy) {
              if (entry.hierarchy.chapter) console.log(`      Chapter: ${entry.hierarchy.chapter}`);
              if (entry.hierarchy.section) console.log(`      Section: ${entry.hierarchy.section}`);
              if (entry.hierarchy.subsection) console.log(`      Subsection: ${entry.hierarchy.subsection}`);
              if (entry.hierarchy.article_title) console.log(`      Article Title: ${entry.hierarchy.article_title}`);
              if (entry.hierarchy.article_number) console.log(`      Article Number: ${entry.hierarchy.article_number}`);
              if (entry.hierarchy.paragraph_number) console.log(`      Paragraph Number: ${entry.hierarchy.paragraph_number}`);
              if (entry.hierarchy.item_number) console.log(`      Item Number: ${entry.hierarchy.item_number}`);
            }
            console.log(`    Keyword for this snippet: ${entry.keyword_for_this_snippet}`);
            console.log(`    Occurrence in snippet: ${entry.keyword_occurrence_in_snippet}`);
            console.log(`    Context Snippet: "${entry.context_snippet.substring(0, 150)}..."`); // 先頭150文字
            // console.log(`    Full Sentence/Block: "${entry.full_sentence_or_block}"`); // 全文表示は長くなる可能性
          });
          if (result.results.length > 5) {
              console.log('  ... and more entries.');
          }
        } else {
          console.log('  No context entries found.');
        }
        console.log('-------------------------------------');
  
      } else {
        console.error('Failed to connect or client is not marked as connected.');
      }
  
    } catch (error: any) {
      console.error('\n--- ERROR ---');
      if (error instanceof McpToolExecutionError) {
        console.error('Tool Execution Error:', error.message);
        if (error.toolResult) console.error('  Tool Result:', JSON.stringify(error.toolResult, null, 2));
        if (error.toolOutputContent) console.error('  Tool Output Content:', JSON.stringify(error.toolOutputContent, null, 2));
      } else if (error instanceof McpResponseParseError) {
        console.error('Response Parse Error:', error.message);
        console.error('  Raw Response:', error.rawResponse);
      } else {
        console.error('Test failed:', error.message);
      }
  
      if (error.originalError) {
        console.error('Original error:', error.originalError);
      }
      if (error.stack) {
        console.error('Stack trace:\n', error.stack);
      }
      console.error('-------------');
    } finally {
      if (client.isConnected) {
        try {
          console.log('\nAttempting to close connection...');
          await client.close();
          console.log('Connection closed successfully.');
        } catch (closeError: any) {
          console.error('\n--- ERROR during close ---');
          console.error('Failed to close connection:', closeError.message);
        }
      } else {
        console.log('\nClient was not connected or already closed, no need to explicitly close again.');
      }
    }
  
    console.log('\nCall scrape_law_page tool test finished.');
  }
  
  main().catch(e => {
    console.error("Unhandled error in main:", e);
  });


---


- フォルダ名: ./mcp-client-typescript/examples
- ファイル名: callToolTest.ts
- 内容:
// examples/callToolTest.ts
import {
    McpClient,
    McpClientOptions,
    GetGoogleAiSummaryArgs, // get_google_ai_summary ツールの引数型
    GetGoogleAiSummaryResult, // get_google_ai_summary ツールの結果型
    McpClientRequestOptions,
    McpToolExecutionError, // ツール実行エラーをキャッチするため
    McpResponseParseError // 結果パースエラーをキャッチするため
  } from '../src/index';
  
  // --- 設定項目 (ご自身の環境に合わせて変更してください) ---
  const SERVER_URL = 'http://localhost:3001/mcp'; // 実際のMCPサーバーのURL
  // ----------------------------------------------------
  
  async function main() {
    console.log('MCP Client Call Tool Test (get_google_ai_summary)');
    console.log(`Connecting to server: ${SERVER_URL}`);
  
    const clientOptions: McpClientOptions = {
      serverUrl: SERVER_URL,
      clientName: 'mcp-test-client-calltool',
      clientVersion: '1.0.2',
      defaultTimeoutMs: 30000, // デフォルトタイムアウトを30秒に設定 (検索とAI処理のため長め)
    };
  
    const client = new McpClient(clientOptions);
  
    try {
      // 1. 接続
      console.log('\nAttempting to connect...');
      await client.connect();
      console.log('Successfully connected!');
  
      if (client.isConnected) {
        console.log('\n--- Calling get_google_ai_summary tool ---');
  
        // ツールに渡す引数を準備
        const toolArgs: GetGoogleAiSummaryArgs = {
          query: 'aiとは', // ★ テストしたい検索クエリに変更してください
          // numResults: 5, // オプショナルな引数。必要に応じて設定
          // lang: 'ja',    // オプショナルな引数
        };
  
        // ツール呼び出し時のオプション (必要であれば)
        const callOptions: McpClientRequestOptions = {
          timeout: 45000, // このツール呼び出し専用のタイムアウト (45秒)
        };
  
        console.log(`Args: ${JSON.stringify(toolArgs)}`);
        console.log('Calling tool, please wait...');
  
        // 専用メソッドを使ってツールを呼び出す
        const result: GetGoogleAiSummaryResult = await client.getGoogleAiSummary(toolArgs, callOptions);
  
        console.log('\n--- Tool Result ---');
        console.log('AI Summary:', result.ai_summary_results || 'N/A');
        console.log('\nSearch Results:');
        if (result.google_search_results && result.google_search_results.length > 0) {
          result.google_search_results.forEach((item, index) => {
            console.log(`  #${index + 1}:`);
            console.log(`    Title: ${item.title}`);
            console.log(`    URL: ${item.url}`);
            if (item.content) {
              console.log(`    Snippet: ${item.content}`);
            }
          });
        } else {
          console.log('  No search results found.');
        }
        if (result.google_search_results) { // _meta があれば表示 (SDKの仕様による)
          console.log('\nMeta:', JSON.stringify(result.ai_summary_results));
        }
        console.log('-------------------');
  
      } else {
        console.error('Failed to connect or client is not marked as connected.');
      }
  
    } catch (error: any) {
      console.error('\n--- ERROR ---');
      if (error instanceof McpToolExecutionError) {
        console.error('Tool Execution Error:', error.message);
        console.error('  Tool Result (if available):', error.toolResult);
        console.error('  Tool Output Content (if available):', error.toolOutputContent);
      } else if (error instanceof McpResponseParseError) {
        console.error('Response Parse Error:', error.message);
        console.error('  Raw Response (if available):', error.rawResponse);
      } else {
        console.error('Test failed:', error.message);
      }
  
      if (error.originalError) {
        console.error('Original error:', error.originalError);
      }
      if (error.stack) {
        console.error('Stack trace:\n', error.stack);
      }
      console.error('-------------');
    } finally {
      // 3. 切断
      if (client.isConnected) {
        try {
          console.log('\nAttempting to close connection...');
          await client.close();
          console.log('Connection closed successfully.');
        } catch (closeError: any) {
          // ... (エラーハンドリング)
          console.error('\n--- ERROR during close ---');
          console.error('Failed to close connection:', closeError.message);
          if (closeError.originalError) {
            console.error('Original error:', closeError.originalError);
          }
          console.error('--------------------------');
        }
      } else {
        console.log('\nClient was not connected or already closed, no need to explicitly close again.');
      }
    }
  
    console.log('\nCall tool test finished.');
  }
  
  main().catch(e => {
    console.error("Unhandled error in main:", e);
  });


---


- フォルダ名: ./mcp-client-typescript/examples
- ファイル名: connectionTest.ts
- 内容:
// examples/connectionTest.ts
//import { McpClient, McpClientOptions, McpServerInformation } from '../src/index.js'; // ★ MCPクライアントライブラリのルートからインポート
import { McpClient, McpClientOptions, McpServerInformation } from '../src/index';
// --- 設定項目 (ご自身の環境に合わせて変更してください) ---
const SERVER_URL = 'http://localhost:3001/mcp'; // ★ 実際のMCPサーバーのURLに変更
// ----------------------------------------------------

async function main() {
  console.log('MCP Client Connection Test');
  console.log(`Connecting to server: ${SERVER_URL}`);

  const clientOptions: McpClientOptions = {
    serverUrl: SERVER_URL,
    clientName: 'mcp-test-client',
    clientVersion: '1.0.0',
    defaultTimeoutMs: 10000, // 10秒のタイムアウト
    // 必要に応じて protocolOptions や transportOptions を設定
    // protocolOptions: {
    //   enforceStrictCapabilities: true,
    // },
  };

  const client = new McpClient(clientOptions);
  let serverInfo: McpServerInformation | null = null;

  try {
    // 1. 接続テスト
    console.log('\nAttempting to connect...');
    serverInfo = await client.connect();
    console.log('Successfully connected!');

    // 2. サーバー情報の表示
    if (client.isConnected && serverInfo) {
      console.log('\n--- Server Information ---');
      console.log('Server Name:', serverInfo.serverInfo?.name);
      console.log('Server Version:', serverInfo.serverInfo?.version);
      console.log('Protocol Version:', serverInfo.protocolVersion || 'N/A');
      console.log('Instructions:', serverInfo.instructions || 'N/A');
      console.log('Capabilities:');
      if (serverInfo.serverCapabilities && Object.keys(serverInfo.serverCapabilities).length > 0) {
        for (const [key, value] of Object.entries(serverInfo.serverCapabilities)) {
          console.log(`  ${key}: ${JSON.stringify(value)}`);
        }
      } else {
        console.log('  (No capabilities reported or capabilities object is empty)');
      }
      console.log('--------------------------');
    } else {
      console.error('Connection established, but server information is not available or client is not marked as connected.');
    }

  } catch (error: any) {
    console.error('\n--- ERROR ---');
    console.error('Test failed:', error.message);
    if (error.originalError) {
      console.error('Original error:', error.originalError);
    }
    if (error.stack) {
      console.error('Stack trace:\n', error.stack);
    }
    console.error('-------------');
  } finally {
    // 3. 切断テスト
    if (client.isConnected) {
      try {
        console.log('\nAttempting to close connection...');
        await client.close();
        console.log('Connection closed successfully.');
      } catch (closeError: any) {
        console.error('\n--- ERROR during close ---');
        console.error('Failed to close connection:', closeError.message);
        if (closeError.originalError) {
          console.error('Original error:', closeError.originalError);
        }
        console.error('--------------------------');
      }
    } else {
      console.log('\nClient was not connected, no need to close.');
    }
  }

  console.log('\nConnection test finished.');
}

main().catch(e => {
  console.error("Unhandled error in main:", e);
});


---


- フォルダ名: ./mcp-client-typescript/examples
- ファイル名: listToolsTest.ts
- 内容:
// examples/listToolsTest.ts
import { McpClient, McpClientOptions, ToolDefinition, McpClientRequestOptions } from '../src/index'; // クライアントライブラリのルートからインポート

// --- 設定項目 (ご自身の環境に合わせて変更してください) ---
const SERVER_URL = 'http://localhost:3001/mcp'; // ★ 実際のMCPサーバーのURL (ポート3001に変更済み)
// ----------------------------------------------------

async function main() {
  console.log('MCP Client List Tools Test');
  console.log(`Connecting to server: ${SERVER_URL}`);

  const clientOptions: McpClientOptions = {
    serverUrl: SERVER_URL,
    clientName: 'mcp-test-client-listtools',
    clientVersion: '1.0.1',
    defaultTimeoutMs: 15000, // 15秒のタイムアウト
  };

  const client = new McpClient(clientOptions);

  try {
    // 1. 接続
    console.log('\nAttempting to connect...');
    await client.connect();
    console.log('Successfully connected!');

    if (client.isConnected) {
      console.log('\n--- Server Information (from listToolsTest) ---');
      const serverInfo = client.serverInformation; // 接続後に serverInformation を取得
      if (serverInfo) {
        console.log('Server Name:', serverInfo.serverInfo?.name);
        console.log('Server Version:', serverInfo.serverInfo?.version);
      } else {
        console.log('Could not retrieve server information after connect.');
      }
      console.log('-------------------------------------------');


      // 2. listTools の呼び出し
      console.log('\nAttempting to list tools...');
      // 必要に応じて listTools にオプションを渡す
      const listToolsOptions: McpClientRequestOptions = {
        timeout: 10000, // listTools 専用のタイムアウト (10秒)
      };
      const tools: ToolDefinition[] = await client.listTools(undefined, listToolsOptions); // 第一引数のparamsはundefined

      if (tools && tools.length > 0) {
        console.log(`\n--- Available Tools (${tools.length}) ---`);
        tools.forEach((tool, index) => {
          console.log(`\nTool #${index + 1}:`);
          console.log(`  Name: ${tool.name}`);
          console.log(`  Description: ${tool.description || 'N/A'}`);
          // スキーマが巨大な場合があるので、inputSchema と outputSchema の表示は任意で
          // console.log(`  Input Schema: ${JSON.stringify(tool.inputSchema, null, 2)}`);
          // console.log(`  Output Schema: ${JSON.stringify(tool.outputSchema, null, 2)}`);
          if (tool.capabilities) {
            console.log(`  Capabilities: ${JSON.stringify(tool.capabilities)}`);
          }
          console.log('  --------------------');
        });
      } else {
        console.log('No tools available from the server or an empty list was returned.');
      }

    } else {
      console.error('Failed to connect or client is not marked as connected.');
    }

  } catch (error: any) {
    console.error('\n--- ERROR ---');
    console.error('Test failed:', error.message);
    if (error.originalError) {
      console.error('Original error:', error.originalError);
    }
    if (error.stack) {
      console.error('Stack trace:\n', error.stack);
    }
    console.error('-------------');
  } finally {
    // 3. 切断
    if (client.isConnected) {
      try {
        console.log('\nAttempting to close connection...');
        await client.close();
        console.log('Connection closed successfully.');
      } catch (closeError: any) {
        console.error('\n--- ERROR during close ---');
        console.error('Failed to close connection:', closeError.message);
        if (closeError.originalError) {
          console.error('Original error:', closeError.originalError);
        }
        console.error('--------------------------');
      }
    } else {
      console.log('\nClient was not connected or already closed, no need to explicitly close again.');
    }
  }

  console.log('\nList tools test finished.');
}

main().catch(e => {
  console.error("Unhandled error in main:", e);
});


---


- フォルダ名: ./mcp-client-typescript/src
- ファイル名: client.ts
- 内容:
// src/client.ts
import { GoogleSearchArgs } from './interfaces/toolArgs/googleSearchArgs'; // ★★★ 追加
import { GoogleSearchResult } from './interfaces/toolResults/googleSearchResult'; // ★★★ 追加

import {
  Client as SdkClient,
} from '@modelcontextprotocol/sdk/client/index.js';
import {
  StreamableHTTPClientTransport,
  StreamableHTTPClientTransportOptions,
} from '@modelcontextprotocol/sdk/client/streamableHttp.js';
import type { Transport as SdkClientTransport } from '@modelcontextprotocol/sdk/shared/transport.js';

import {
  McpError,
  ErrorCode,
  CallToolResultSchema,
} from '@modelcontextprotocol/sdk/types.js';

import type {
  RequestOptions as SdkRequestOptions,
  ProtocolOptions as SdkProtocolOptions,
} from '@modelcontextprotocol/sdk/shared/protocol.js';

import type {
  CallToolResult as SdkCallToolResultType,
  Tool as SdkToolType,
  TextContent as SdkTextContentType,
  ServerCapabilities as SdkServerCapabilitiesType,
  Implementation as SdkImplementationType,
  ClientCapabilities as SdkClientCapabilitiesType,
  CallToolRequest,
  ListToolsRequest,
  TextContent, ImageContent, AudioContent, 
  //ResourceContent, // SDKのContent型
} from '@modelcontextprotocol/sdk/types.js';

import {
  McpClientError,
  McpConnectionError,
  McpToolExecutionError,
  McpResponseParseError,
} from './errors/mcpClientError.js';
import type {
  GetGoogleAiSummaryArgs,
  CrawlWebsiteArgs,
  ScrapeLawPageArgs,
} from './interfaces/toolArgs/index.js';
import type {
  GetGoogleAiSummaryResult,
  CrawlWebsiteResult,
  ScrapeLawPageResult,
} from './interfaces/toolResults/index.js';
import type {
  RetryOptions,
  McpClientRequestOptions,
  McpClientProtocolOptions,
  ToolDefinition,
  CallToolResult, // common.ts で SdkCallToolResultType を再エクスポート
  // TextContent, // TextContentはSDKのtypesから直接使うか、common.tsで再エクスポート
  ServerCapabilities,
  Implementation,
} from './interfaces/common.js';

type AnyContentItemForClient = TextContent | ImageContent | AudioContent ;//| ResourceContent;


export interface McpServerInformation {
  serverInfo?: Implementation;
  serverCapabilities?: ServerCapabilities;
  instructions?: string;
  protocolVersion?: string;
}

export interface McpClientOptions {
  serverUrl: string;
  clientName?: string;
  clientVersion?: string;
  clientCapabilities?: SdkClientCapabilitiesType;
  defaultTimeout?: number;
  defaultRetryOptions?: RetryOptions;
  transportOptions?: Partial<StreamableHTTPClientTransportOptions>;
  protocolOptions?: McpClientProtocolOptions;
}

const DEFAULT_CLIENT_NAME = 'mcp-client-typescript';
const DEFAULT_CLIENT_VERSION = '0.1.0';
const DEFAULT_TIMEOUT = 60000;
const DEFAULT_RETRY_ATTEMPTS = 3;
const DEFAULT_RETRY_DELAY_MS = 1000;

export class McpClient {
  private sdkClient: SdkClient;
  private serverUrl: URL;
  private options: Required<Omit<McpClientOptions, 'transportOptions' | 'clientCapabilities' | 'protocolOptions' | 'defaultTimeout'>> &
                   Pick<McpClientOptions, 'transportOptions' | 'clientCapabilities' | 'protocolOptions'> &
                   { defaultTimeout: number };

  private transport: SdkClientTransport | null = null;
  private _isConnected = false;

  constructor(options: McpClientOptions) {
    const clientImpl: SdkImplementationType = {
      name: options.clientName || DEFAULT_CLIENT_NAME,
      version: options.clientVersion || DEFAULT_CLIENT_VERSION,
    };

    this.options = {
      serverUrl: options.serverUrl,
      clientName: clientImpl.name,
      clientVersion: clientImpl.version,
      clientCapabilities: options.clientCapabilities || {},
      defaultTimeout: options.defaultTimeout || DEFAULT_TIMEOUT,
      defaultRetryOptions: options.defaultRetryOptions || {
        attempts: DEFAULT_RETRY_ATTEMPTS,
        delayMs: DEFAULT_RETRY_DELAY_MS,
      },
      transportOptions: options.transportOptions || {},
      protocolOptions: options.protocolOptions || {},
    };
    this.serverUrl = new URL(this.options.serverUrl);

    this.sdkClient = new SdkClient(
        clientImpl,
        this.options.protocolOptions
    );
  }

  public get isConnected(): boolean {
    return this._isConnected && this.transport !== null;
  }

  public get serverInformation(): McpServerInformation | null {
    if (!this.isConnected || !this.sdkClient) return null;
    const serverImpl = this.sdkClient.getServerVersion();
    const serverCaps = this.sdkClient.getServerCapabilities();
    const instructions = this.sdkClient.getInstructions();
    const protocolVersion = (this.transport as any)?.protocolVersion;

    return {
      serverInfo: serverImpl,
      serverCapabilities: serverCaps,
      instructions: instructions,
      protocolVersion: typeof protocolVersion === 'string' ? protocolVersion : undefined,
    };
  }

  async connect(transport?: SdkClientTransport): Promise<McpServerInformation> {
    if (this.isConnected) {
      console.warn('MCP Client is already connected.');
      const currentInfo = this.serverInformation;
      if (currentInfo) return currentInfo;
      throw new McpClientError("Already connected, but server information is unavailable.");
    }

    this.transport = transport || new StreamableHTTPClientTransport(
      this.serverUrl,
      this.options.transportOptions
    );

    try {
      const connectOptions: SdkRequestOptions = {
        timeout: this.options.defaultTimeout,
      };
      await this.sdkClient.connect(this.transport, connectOptions);

      this._isConnected = true;
      console.log(`MCP Client connected to: ${this.serverUrl.toString()}`);
      const info = this.serverInformation;
      if (!info || !info.serverInfo || !info.serverCapabilities) {
          this._isConnected = false;
          await this.safelyCloseTransport();
          throw new McpConnectionError("Connected, but failed to retrieve essential server information from SDK client.");
      }
      return info;

    } catch (e: unknown) {
      this._isConnected = false;
      await this.safelyCloseTransport();
      const error = e instanceof Error ? e : new Error(String(e));
      if (error instanceof McpError && error.code === ErrorCode.ConnectionClosed && error.message.includes("Server's protocol version is not supported")) {
          throw new McpConnectionError(`Protocol version mismatch or other initialization failure: ${error.message}`, error);
      }
      if (error instanceof McpError && error.code === ErrorCode.RequestTimeout) {
        throw this.handleError(error, `Connection to ${this.serverUrl.toString()} failed (Timeout: ${ (error.data as any)?.timeout || this.options.defaultTimeout })`);
      }
      throw this.handleError(error, `Connection to ${this.serverUrl.toString()} failed`);
    }
  }

  private async safelyCloseTransport() {
    if (this.transport && typeof (this.transport as any).close === 'function') {
      try {
        await (this.transport as any).close();
      } catch (closeError: unknown) {
        const err = closeError instanceof Error ? closeError : new Error(String(closeError));
        console.warn("MCP Client: Failed to close transport after an error:", err.message);
      }
    }
    this.transport = null;
  }

  async close(): Promise<void> {
    if (!this.isConnected && !this.transport) {
      console.warn('MCP Client is not connected or already closed.');
      return;
    }
    try {
      if (this.sdkClient) {
        await this.sdkClient.close();
      }
    } catch (sdkCloseError: unknown) {
        const error = sdkCloseError instanceof Error ? sdkCloseError : new Error(String(sdkCloseError));
        console.warn("MCP Client: Error during sdkClient.close():", error.message);
    } finally {
        if (this.transport && typeof (this.transport as any).close === 'function') {
            await this.safelyCloseTransport();
        }
        this._isConnected = false;
        console.log(`MCP Client disconnected from: ${this.serverUrl.toString()}`);
    }
  }

  private ensureConnected(): void {
    if (!this.isConnected) {
      throw new McpConnectionError('Client is not connected. Call connect() first.');
    }
  }

  async listTools(params?: ListToolsRequest["params"], options?: McpClientRequestOptions): Promise<ToolDefinition[]> {
    this.ensureConnected();
    try {
      const requestParams: ListToolsRequest['params'] = params || {};
      const sdkOptions: SdkRequestOptions = {
        timeout: this.options.defaultTimeout,
        ...(options || {}),
      };
      if (options?.timeout !== undefined) {
        sdkOptions.timeout = options.timeout;
      }

      const result = await this.sdkClient.listTools(requestParams, sdkOptions);
      return result.tools as ToolDefinition[];
    } catch (error: unknown) {
      throw this.handleError(error, 'Failed to list tools');
    }
  }

  protected async callToolRaw(
    toolName: string,
    args: Record<string, any>,
    retryOptions?: RetryOptions,
    requestOptionsParam?: McpClientRequestOptions
  ): Promise<CallToolResult> {
    this.ensureConnected();
    const R_OPTIONS = retryOptions || this.options.defaultRetryOptions;
    let attempts = 0;
    let lastError: unknown;

    while (true) {
      attempts++;
      try {
        const callParams: CallToolRequest['params'] = { name: toolName, arguments: args };
        const sdkOptions: SdkRequestOptions = {
            timeout: this.options.defaultTimeout,
            ...(requestOptionsParam || {}),
        };
        if (requestOptionsParam?.timeout !== undefined) {
            sdkOptions.timeout = requestOptionsParam.timeout;
        }

        const resultFromSdk = await this.sdkClient.callTool(callParams, CallToolResultSchema, sdkOptions);

        if (!resultFromSdk || typeof resultFromSdk.content === 'undefined') {
            throw new McpResponseParseError(`Tool '${toolName}' response is missing 'content' property after Zod parsing.`, resultFromSdk as any);
        }
        const result: SdkCallToolResultType = resultFromSdk as SdkCallToolResultType;

        if (result.isError) {
          console.warn(`[MCP Client] Tool '${toolName}' execution returned isError: true from server.`);
          throw new McpToolExecutionError(
            `Tool '${toolName}' reported an execution error via isError flag.`,
            result.content as AnyContentItemForClient[],
            result
          );
        }
        return result;
      } catch (e: unknown) {
        lastError = e;
        const error = e instanceof Error ? e : new Error(String(e));

        if (error instanceof McpError && error.code === ErrorCode.InvalidParams) {
            throw new McpClientError(`Invalid parameters for tool '${toolName}': ${error.message}`, error.data || error);
        }

        const errorMessage = error.message;
        console.warn(`MCP Client: Attempt ${attempts} for tool '${toolName}' failed: ${errorMessage}`);

        if (attempts >= R_OPTIONS.attempts) {
          break;
        }
        if (this.isRetryableError(e)) {
          const delay = R_OPTIONS.delayMs * Math.pow(2, attempts - 1);
          console.log(`MCP Client: Retrying tool '${toolName}' in ${delay}ms...`);
          await new Promise(resolve => setTimeout(resolve, delay));
        } else {
          break;
        }
      }
    }
    if (lastError instanceof McpError && lastError.data && (lastError.data as SdkCallToolResultType).isError) {
        const toolResultFromError = lastError.data as SdkCallToolResultType;
        throw new McpToolExecutionError(
            `Tool '${toolName}' reported an execution error after ${attempts} attempts (from McpError.data).`,
            toolResultFromError.content as AnyContentItemForClient[],
            toolResultFromError
        );
    }
    throw this.handleError(lastError, `Failed to call tool '${toolName}' after ${attempts} attempts`);
  }

  private isRetryableError(error: unknown): boolean {
    if (error instanceof McpError) {
      // ★ SDKのErrorCodeを確認し、適切なサーバーエラーコードを使用する
      // 例: ErrorCode.InternalError, ErrorCode.ServiceUnavailable など
      // ここでは仮に ErrorCode.InternalError を使用。実際のSDKの定義に合わせてください。
      const retryableSdkCodes = [ErrorCode.RequestTimeout, ErrorCode.ConnectionClosed, ErrorCode.InternalError];
      return retryableSdkCodes.includes(error.code);
    }
    if (error instanceof Error) {
        if (error.name === 'TypeError' && error.message.toLowerCase().includes('failed to fetch')) {
            return true;
        }
    }
    const errorMessage = String(error).toLowerCase();
    return errorMessage.includes('network error') ||
           errorMessage.includes('connection refused') ||
           errorMessage.includes('econnreset') ||
           errorMessage.includes('econnaborted');
  }

  async getGoogleAiSummary(args: GetGoogleAiSummaryArgs, requestOptions?: McpClientRequestOptions): Promise<GetGoogleAiSummaryResult> {
    const result = await this.callToolRaw('get_google_ai_summary', args as unknown as Record<string, any>, undefined, requestOptions);
    return this.parseToolResult<GetGoogleAiSummaryResult>(result, 'get_google_ai_summary');
  }

  async crawlWebsite(args: CrawlWebsiteArgs, requestOptions?: McpClientRequestOptions): Promise<CrawlWebsiteResult> {
    const result = await this.callToolRaw('crawl_website', args as unknown as Record<string, any>, undefined, requestOptions);
    return this.parseToolResult<CrawlWebsiteResult>(result, 'crawl_website');
  }

  async scrapeLawPage(args: ScrapeLawPageArgs, requestOptions?: McpClientRequestOptions): Promise<ScrapeLawPageResult> {
    const result = await this.callToolRaw('scrape_law_page', args as unknown as Record<string, any>, undefined, requestOptions);
    return this.parseToolResult<ScrapeLawPageResult>(result, 'scrape_law_page');
  }

  async googleSearch(args: GoogleSearchArgs,requestOptions?: McpClientRequestOptions): Promise<GoogleSearchResult> {
    const result = await this.callToolRaw('google_search', args as unknown as Record<string, any>, undefined, requestOptions);
    return this.parseToolResult<GoogleSearchResult>(result, 'google_search');
  }

  private parseToolResult<T>(result: CallToolResult, toolName: string): T {
    if (result.isError) {
        console.warn(`[MCP Client] parseToolResult received a result with isError: true for tool '${toolName}'. This should ideally be caught before parseToolResult.`);
        throw new McpToolExecutionError(
            `Tool '${toolName}' reported an execution error (parsed in parseToolResult).`,
            result.content as AnyContentItemForClient[],
            result
        );
    }
    if (!result.content || result.content.length === 0) {
      throw new McpResponseParseError(`No content found in successful result for tool '${toolName}'.`, result);
    }
    const textContentItem = result.content.find(
        (c): c is SdkTextContentType => c.type === 'text'
    );
    if (!textContentItem || typeof textContentItem.text !== 'string') {
      throw new McpResponseParseError(`No text content found in successful result for tool '${toolName}'.`, result);
    }
    try {
      return JSON.parse(textContentItem.text) as T;
    } catch (e: unknown) {
      const error = e instanceof Error ? e : new Error(String(e));
      throw new McpResponseParseError(
        `Failed to parse JSON result for tool '${toolName}': ${error.message}`,
        textContentItem.text,
        error
      );
    }
  }

  private handleError(error: unknown, contextMessage: string): McpClientError {
    if (error instanceof McpClientError) {
      return error;
    }
    if (error instanceof McpError) {
      let message = `${contextMessage}: SDK Error code ${error.code} - ${error.message}`;
      if (error.data && typeof error.data === 'object') {
        if ('timeout' in error.data && typeof (error.data as any).timeout === 'number') {
          message += ` (Timeout: ${(error.data as any).timeout})`;
        }
      }
      return new McpClientError(message, error.data || error);
    }
    const message = error instanceof Error ? error.message : String(error);
    if (
        message.toLowerCase().includes('failed to fetch') ||
        message.toLowerCase().includes('network error') ||
        message.toLowerCase().includes('connection refused') ||
        message.toLowerCase().includes('econnreset') ||
        message.toLowerCase().includes('econnaborted')
    ) {
        return new McpConnectionError(`${contextMessage}: ${message}`, error);
    }
    return new McpClientError(`${contextMessage}: ${message}`, error);
  }
}


---


- フォルダ名: ./mcp-client-typescript/src
- ファイル名: index.ts
- 内容:
// src/index.ts
export * from './client.js';
export * from './interfaces/toolArgs/index.js';
export * from './interfaces/toolResults/index.js';
export * from './interfaces/common.js';
export * from './errors/mcpClientError.js';


---


- フォルダ名: ./mcp-client-typescript/src
- ファイル名: run_tool.ts
- 内容:
// mcp-client-typescript/src/run_tool.ts (エラーハンドリング強化版)

import { McpClient, McpClientOptions, McpToolExecutionError } from './index';

const SERVER_URL = process.env.MCP_SERVER_URL || 'http://localhost:3001/mcp';
const DEFAULT_TIMEOUT = 300000;

function printSuccess(result: any): void {
  process.stdout.write(JSON.stringify(result));
}

function printError(message: string, details?: any): void {
  const errorResponse = {
    error: true,
    message: message,
    details: details instanceof Error ? { name: details.name, message: details.message, stack: details.stack } : details,
  };
  // エラーもstdoutに出力する。Python側は常にstdoutだけを見ればよい。
  process.stdout.write(JSON.stringify(errorResponse));
}

async function run(): Promise<void> {
  const args = process.argv.slice(2);
  if (args.length < 2) {
    console.error('Usage: tsx src/run_tool.ts <tool_name> \'<json_arguments>\'');
    process.exit(1);
  }

  const toolName = args[0];
  const jsonArgs = args[1];
  const parsedArgs = JSON.parse(jsonArgs);

  const client = new McpClient({ serverUrl: SERVER_URL, defaultTimeout: DEFAULT_TIMEOUT });

  try {
    await client.connect();

    // ▼▼▼▼▼ 変更点: clientの各メソッドを直接呼び出す ▼▼▼▼▼
    let result;
    switch (toolName) {
      case 'google_search':
        result = await client.googleSearch(parsedArgs);
        break;
      case 'crawl_website':
        result = await client.crawlWebsite(parsedArgs);
        break;
      case 'get_google_ai_summary':
        result = await client.getGoogleAiSummary(parsedArgs);
        break;
      case 'scrape_law_page':
        result = await client.scrapeLawPage(parsedArgs);
        break;
      default:
        throw new Error(`Unsupported tool name: ${toolName}`);
    }
    
    printSuccess(result);

  } catch (error: unknown) {
    // ▼▼▼▼▼ 変更点: McpToolExecutionErrorを特別扱いする ▼▼▼▼▼
    if (error instanceof McpToolExecutionError) {
      // ツール実行エラーの場合、サーバーから返された詳細なエラー内容を抽出する
      const content = error.toolOutputContent;
      let detailedMessage = "Tool execution failed on the server.";
      // contentがテキスト形式で、その中にJSONが含まれている場合がある
      if (content && content.length > 0 && content[0].type === 'text') {
        try {
            const parsedError = JSON.parse(content[0].text);
            detailedMessage = parsedError.message || content[0].text;
        } catch (e) {
            detailedMessage = content[0].text;
        }
      }
      printError(detailedMessage, { originalStack: (error as Error).stack });
    } else {
      // その他の一般的なエラー
      printError(`Error in run_tool.ts: ${(error as Error).message}`, error);
    }
    // ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
    
  } finally {
    if (client.isConnected) {
      await client.close();
    }
  }
}

run().catch(fatalError => {
  console.error(`A fatal, unhandled error occurred: ${(fatalError as Error).message}`);
  process.exit(1);
});


---


- フォルダ名: ./mcp-client-typescript/src/errors
- ファイル名: mcpClientError.ts
- 内容:
// src/errors/mcpClientError.ts
import type {
  CallToolResult as SdkCallToolResult,
  // SDK の types.d.ts を確認し、CallToolResult の content プロパティの要素の型を正確に把握する
  // 例: TextContent, ImageContent, AudioContent, ResourceContent など
  // これらをまとめた ContentItem のような型がエクスポートされていればそれを使う
  // エクスポートされていなければ、ここでユニオン型を定義するか、any[] にする（最終手段）
  TextContent, // 基本として
  ImageContent, // エラーメッセージにあったので追加
  AudioContent, // 追加の可能性
  //ResourceContent, // 追加の可能性
  // もしSDKが ContentItem[] のような型エイリアスを提供していればそれがベスト
} from '@modelcontextprotocol/sdk/types';

// SDKの content 配列の要素の型 (仮の定義、SDKの型定義に合わせて修正)
type AnyContentItem = TextContent | ImageContent | AudioContent ;//| ResourceContent; // 他にもあれば追加

// ベースとなるエラークラス
export class McpClientError extends Error {
public readonly originalError?: unknown;

constructor(message: string, originalError?: unknown) {
  super(message);
  this.name = this.constructor.name;
  this.originalError = originalError;
  Object.setPrototypeOf(this, McpClientError.prototype);
}
}

// 接続関連のエラー
export class McpConnectionError extends McpClientError {
constructor(message: string, originalError?: unknown) {
  super(message, originalError);
  this.name = 'McpConnectionError';
  Object.setPrototypeOf(this, McpConnectionError.prototype);
}
}

// ツール実行時のエラー (サーバー側でエラーが報告された場合)
export class McpToolExecutionError extends McpClientError {
public readonly toolResult?: SdkCallToolResult;
public readonly toolOutputContent?: AnyContentItem[]; // ★ 型を AnyContentItem[] に変更

constructor(message: string, content?: AnyContentItem[], toolResult?: SdkCallToolResult) { // ★ 型を変更
  super(message, toolResult);
  this.name = 'McpToolExecutionError';
  this.toolResult = toolResult;
  this.toolOutputContent = content;
  Object.setPrototypeOf(this, McpToolExecutionError.prototype);
}
}

// レスポンス解析時のエラー
export class McpResponseParseError extends McpClientError {
public readonly rawResponse?: string | SdkCallToolResult;

constructor(message: string, rawResponse?: string | SdkCallToolResult, originalError?: unknown) {
  super(message, originalError);
  this.name = 'McpResponseParseError';
  this.rawResponse = rawResponse;
  Object.setPrototypeOf(this, McpResponseParseError.prototype);
}
}


---


- フォルダ名: ./mcp-client-typescript/src/interfaces
- ファイル名: common.ts
- 内容:
// src/interfaces/common.ts
import type {
  CallToolResult as SdkCallToolResult,
  Tool as SdkTool,
  TextContent as SdkTextContent,
  ServerCapabilities as SdkServerCapabilities,
  Implementation as SdkImplementation,
  ClientCapabilities as SdkClientCapabilities,
} from '@modelcontextprotocol/sdk/types';

import type {
  RequestOptions as SdkRequestOptionsDefinition,
  ProtocolOptions as SdkProtocolOptionsDefinition,
} from '@modelcontextprotocol/sdk/shared/protocol'; // これが timeout を持つ

export interface RetryOptions {
  attempts: number;
  delayMs: number;
}

// クライアントライブラリがユーザーに提示するリクエストオプション
// SDKのRequestOptionsDefinitionをそのまま使うか、必要なら拡張する
export type McpClientRequestOptions = SdkRequestOptionsDefinition;

// クライアントライブラリがユーザーに提示するプロトコルオプション
export type McpClientProtocolOptions = SdkProtocolOptionsDefinition;

export type CallToolResult = SdkCallToolResult;
export type ToolDefinition = SdkTool;
export type TextContent = SdkTextContent;
export type ServerCapabilities = SdkServerCapabilities;
export type Implementation = SdkImplementation;
export type ClientCapabilities = SdkClientCapabilities;


---


- フォルダ名: ./mcp-client-typescript/src/interfaces/toolArgs
- ファイル名: crawlWebsiteArgs.ts
- 内容:
// src/interfaces/toolArgs/crawlWebsiteArgs.ts
export interface CrawlWebsiteArgs {
  url: string;
  selector: string;
  max_depth?: number;         // from Zod schema & exe help
  parallel?: number;          // from Zod schema & exe help
  timeout?: number;           // from Zod schema & exe help (operation timeout)
  apply_stealth?: boolean;    // from Zod schema (maps to --stealth or --no-stealth)
  headless_mode?: boolean;    // from Zod schema (maps to --headless or --no-headless)
  ignore_robots_txt?: boolean; // from Zod schema & exe help
  user_agent?: string;        // from Zod schema & exe help
  request_delay?: number;     // from Zod schema & exe help
  no_samedomain?: boolean;    // from Zod schema & exe help
  main_content_only?: boolean;    // from Zod schema & exe help
}


---


- フォルダ名: ./mcp-client-typescript/src/interfaces/toolArgs
- ファイル名: getGoogleAiSummaryArgs.ts
- 内容:
// src/interfaces/toolArgs/getGoogleAiSummaryArgs.ts
export interface GetGoogleAiSummaryArgs {
  query: string;
  headless_mode?: boolean; // from Zod schema (maps to --headless or --no-headless)
  wait_seconds?: number;   // from Zod schema (maps to --wait)
}


---


- フォルダ名: ./mcp-client-typescript/src/interfaces/toolArgs
- ファイル名: googleSearchArgs.ts
- 内容:
// src/interfaces/toolArgs/googleSearchArgs.ts

export interface GoogleSearchArgs {
    /**
     * The search query string for Google.
     */
    query: string;
  
    /**
     * Number of search result pages to process. Defaults to 1 if not provided.
     * @optional
     */
    search_pages?: number;
  
    /**
     * Maximum number of parallel browser tasks for scraping result pages.
     * @optional
     */
    parallel?: number;
  
    /**
     * Operation timeout in milliseconds for page loads/actions.
     * @optional
     */
    timeout?: number;
  
    /**
     * Whether to run the browser in headless mode.
     * @optional
     */
    headless_mode?: boolean;
  }


---


- フォルダ名: ./mcp-client-typescript/src/interfaces/toolArgs
- ファイル名: index.ts
- 内容:
// src/interfaces/toolArgs/index.ts
export * from './getGoogleAiSummaryArgs.js';
export * from './crawlWebsiteArgs.js';
export * from './scrapeLawPageArgs.js';
export * from './googleSearchArgs.js';



---


- フォルダ名: ./mcp-client-typescript/src/interfaces/toolArgs
- ファイル名: scrapeLawPageArgs.ts
- 内容:
// src/interfaces/toolArgs/scrapeLawPageArgs.ts
export interface ScrapeLawPageArgs {
  url: string;
  keyword: string;
  wait_selector?: string;    // from Zod schema & exe help
  headless_mode?: boolean;   // from Zod schema (maps to --headless or --no-headless)
  timeout?: number;          // from Zod schema & exe help (operation timeout)
  browser_type?: "chromium" | "firefox" | "webkit"; // from Zod schema & exe help
  context_window?: number;   // from Zod schema & exe help
  merge_threshold?: number;  // from Zod schema & exe help
}


---


- フォルダ名: ./mcp-client-typescript/src/interfaces/toolResults
- ファイル名: crawlWebsiteResult.ts
- 内容:
// src/interfaces/toolResults/crawlWebsiteResult.ts
// ★★★ この型定義は YourScrapingApp.exe の crawl タスクの実際の出力JSONに合わせてください ★★★
export interface CrawledPageInfo { // サーバーからの出力構造に合わせる必要あり
  url: string;
  title?: string;
  links?: string[];
  emails?: string[];
  phones?: string[];
  // その他、exeが出力する情報
}
export interface CrawlError {
  url: string;
  message: string;
}
export interface CrawlWebsiteResult {
  startUrl: string;         // exeの出力に合わせる
  timestamp: string;        // exeの出力に合わせる
  links?: string[];         // 収集された全ユニークリンクなど、exeの出力に合わせる
  emails?: string[];        // 収集された全ユニークEmailなど
  phoneNumbers?: string[];  // 収集された全ユニーク電話番号など
  crawledData?: CrawledPageInfo[]; // クロールされた各ページの情報
  errors?: CrawlError[];    // クロール中に発生したエラー
  summary?: string;         // クロールのサマリー
  _meta?: any;              // 必要であれば
  // ★ YourScrapingApp.exeの `crawl` タスクの出力JSONに合わせて、
  //    all_crawled_urls_unique や all_unique_emails_found など、
  //    正しいプロパティ名と型に修正してください。
  //    以前のログでは all_crawled_urls_unique: string[] のような形式でした。
  all_crawled_urls_unique?: string[];
  all_unique_emails_found?: string[];
  all_unique_phones_found?: string[];
  crawl_summary?: { // 以前のログにあった構造を参考に
      start_url: string;
      link_selector?: string; // exeの出力に含まれるか確認
      max_depth?: number;
      no_samedomain_check?: boolean;
      total_processed_entries_across_all_domains?: number;
      unique_base_urls_processed_or_disallowed?: number;
      user_agent_for_robots_check?: string;
  };
  results_by_domain?: Record<string, any[]>; // ドメインごとの結果
}


---


- フォルダ名: ./mcp-client-typescript/src/interfaces/toolResults
- ファイル名: getGoogleAiSummaryResult.ts
- 内容:
// src/interfaces/toolResults/getGoogleAiSummaryResult.ts
export interface AiSummaryResultItem {
  title: string;
  url: string;
  source_type: "ai_summary" | "organic_search"; // EXEの出力に合わせて
  // content?: string; // EXEの出力例には見当たらないため、オプショナルまたは削除検討
  // snippet?: string; // EXEの出力例には見当たらないため、オプショナルまたは削除検討
}

export interface GetGoogleAiSummaryResult {
  query: string;
  execution_datetime: string; // EXEの出力では必須
  ai_summary_results_count?: number; // EXEの出力に合わせて追加 (オプショナルか必須か)
  ai_summary_results?: AiSummaryResultItem[]; // EXEの出力に合わせて変更
  google_search_results_count?: number; // EXEの出力に合わせて追加 (オプショナルか必須か)
  google_search_results?: AiSummaryResultItem[]; // EXEの出力に合わせて変更
  // _meta はEXEの出力例には直接見当たらないため、一旦コメントアウトまたは削除。
  // もしサーバーが parseToolResult の結果として _meta を付与する場合は別途考慮。
  // _meta?: AiSummaryResultItem[];
}


---


- フォルダ名: ./mcp-client-typescript/src/interfaces/toolResults
- ファイル名: googleSearchResult.ts
- 内容:
// src/interfaces/toolResults/googleSearchResult.ts

/**
 * Represents a single scraped item from the Google search results.
 */
export interface GoogleSearchResultItem {
    url: string;
    title: string;
    content_preview: string | null;
    full_content_length: number;
    emails: string[];
    phones: string[];
    source_category: "ai_summary_source" | "organic_search_result";
    error_details?: string;
  }
  
  /**
   * Represents the overall result of the google_search tool execution.
   */
  export interface GoogleSearchResult {
    /**
     * Metadata about the search execution.
     */
    metadata: {
      source_type: string;
      query_used: string;
      description: string;
      timestamp: string;
      total_urls_processed: number;
      valid_results_count: number;
    };
  
    /**
     * An array of all processed search results.
     */
    search_results: GoogleSearchResultItem[];
  }


---


- フォルダ名: ./mcp-client-typescript/src/interfaces/toolResults
- ファイル名: index.ts
- 内容:
// src/interfaces/toolResults/index.ts
export * from './getGoogleAiSummaryResult.js';
export * from './crawlWebsiteResult.js';
export * from './scrapeLawPageResult.js';
export * from './googleSearchResult.js';



---


- フォルダ名: ./mcp-client-typescript/src/interfaces/toolResults
- ファイル名: scrapeLawPageResult.ts
- 内容:
// src/interfaces/toolResults/scrapeLawPageResult.ts
export interface LawPageHierarchy {
  chapter?: string;
  section?: string;
  subsection?: string;
  article_title?: string;
  article_number?: string;
  paragraph_number?: string;
  item_number?: string;
}
export interface LawPageContextEntry {
  id: string;
  source_url: string;
  hierarchy: LawPageHierarchy;
  context_snippet: string;
  keyword_for_this_snippet: string;
  keyword_occurrence_in_snippet: number;
  full_sentence_or_block: string;
}
export interface ScrapeLawPageResult {
  source_url: string;
  search_keyword: string;
  total_keyword_occurrences_in_snippets: number;
  total_context_entries: number;
  results: LawPageContextEntry[];
}


---


- フォルダ名: ./mcp-client-typescript/src/transports
- ファイル名: streamableHttp.ts
- 内容:



---


- フォルダ名: ./mcp-server-typescript
- ファイル名: package-lock.json
- 内容:
{
    "name": "scraping-mcp-server",
    "version": "1.0.0",
    "lockfileVersion": 3,
    "requires": true,
    "packages": {
        "": {
            "name": "scraping-mcp-server",
            "version": "1.0.0",
            "license": "MIT",
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.12.3",
                "dotenv": "^16.4.5",
                "express": "^4.19.2",
                "zod": "^3.23.8"
            },
            "devDependencies": {
                "@types/express": "^4.17.21",
                "@types/node": "^20.14.2",
                "@typescript-eslint/eslint-plugin": "^7.13.0",
                "@typescript-eslint/parser": "^7.13.0",
                "eslint": "^8.57.0",
                "eslint-config-prettier": "^9.1.0",
                "eslint-plugin-prettier": "^5.1.3",
                "prettier": "^3.3.2",
                "typescript": "^5.4.5"
            },
            "engines": {
                "node": ">=18.0.0"
            }
        },
        "node_modules/@eslint-community/eslint-utils": {
            "version": "4.7.0",
            "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
            "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "eslint-visitor-keys": "^3.4.3"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            },
            "peerDependencies": {
                "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
            }
        },
        "node_modules/@eslint-community/regexpp": {
            "version": "4.12.1",
            "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
            "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
            }
        },
        "node_modules/@eslint/eslintrc": {
            "version": "2.1.4",
            "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz",
            "integrity": "sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ajv": "^6.12.4",
                "debug": "^4.3.2",
                "espree": "^9.6.0",
                "globals": "^13.19.0",
                "ignore": "^5.2.0",
                "import-fresh": "^3.2.1",
                "js-yaml": "^4.1.0",
                "minimatch": "^3.1.2",
                "strip-json-comments": "^3.1.1"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/@eslint/eslintrc/node_modules/brace-expansion": {
            "version": "1.1.12",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
            "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
            }
        },
        "node_modules/@eslint/eslintrc/node_modules/minimatch": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
            "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^1.1.7"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/@eslint/js": {
            "version": "8.57.1",
            "resolved": "https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz",
            "integrity": "sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            }
        },
        "node_modules/@humanwhocodes/config-array": {
            "version": "0.13.0",
            "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz",
            "integrity": "sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==",
            "deprecated": "Use @eslint/config-array instead",
            "dev": true,
            "license": "Apache-2.0",
            "dependencies": {
                "@humanwhocodes/object-schema": "^2.0.3",
                "debug": "^4.3.1",
                "minimatch": "^3.0.5"
            },
            "engines": {
                "node": ">=10.10.0"
            }
        },
        "node_modules/@humanwhocodes/config-array/node_modules/brace-expansion": {
            "version": "1.1.12",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
            "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
            }
        },
        "node_modules/@humanwhocodes/config-array/node_modules/minimatch": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
            "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^1.1.7"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/@humanwhocodes/module-importer": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
            "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
            "dev": true,
            "license": "Apache-2.0",
            "engines": {
                "node": ">=12.22"
            },
            "funding": {
                "type": "github",
                "url": "https://github.com/sponsors/nzakas"
            }
        },
        "node_modules/@humanwhocodes/object-schema": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz",
            "integrity": "sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==",
            "deprecated": "Use @eslint/object-schema instead",
            "dev": true,
            "license": "BSD-3-Clause"
        },
        "node_modules/@modelcontextprotocol/sdk": {
            "version": "1.12.3",
            "resolved": "https://registry.npmjs.org/@modelcontextprotocol/sdk/-/sdk-1.12.3.tgz",
            "integrity": "sha512-DyVYSOafBvk3/j1Oka4z5BWT8o4AFmoNyZY9pALOm7Lh3GZglR71Co4r4dEUoqDWdDazIZQHBe7J2Nwkg6gHgQ==",
            "license": "MIT",
            "dependencies": {
                "ajv": "^6.12.6",
                "content-type": "^1.0.5",
                "cors": "^2.8.5",
                "cross-spawn": "^7.0.5",
                "eventsource": "^3.0.2",
                "express": "^5.0.1",
                "express-rate-limit": "^7.5.0",
                "pkce-challenge": "^5.0.0",
                "raw-body": "^3.0.0",
                "zod": "^3.23.8",
                "zod-to-json-schema": "^3.24.1"
            },
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/accepts": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/accepts/-/accepts-2.0.0.tgz",
            "integrity": "sha512-5cvg6CtKwfgdmVqY1WIiXKc3Q1bkRqGLi+2W/6ao+6Y7gu/RCwRuAhGEzh5B4KlszSuTLgZYuqFqo5bImjNKng==",
            "license": "MIT",
            "dependencies": {
                "mime-types": "^3.0.0",
                "negotiator": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/body-parser": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-2.2.0.tgz",
            "integrity": "sha512-02qvAaxv8tp7fBa/mw1ga98OGm+eCbqzJOKoRt70sLmfEEi+jyBYVTDGfCL/k06/4EMk/z01gCe7HoCH/f2LTg==",
            "license": "MIT",
            "dependencies": {
                "bytes": "^3.1.2",
                "content-type": "^1.0.5",
                "debug": "^4.4.0",
                "http-errors": "^2.0.0",
                "iconv-lite": "^0.6.3",
                "on-finished": "^2.4.1",
                "qs": "^6.14.0",
                "raw-body": "^3.0.0",
                "type-is": "^2.0.0"
            },
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/content-disposition": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-1.0.0.tgz",
            "integrity": "sha512-Au9nRL8VNUut/XSzbQA38+M78dzP4D+eqg3gfJHMIHHYa3bg067xj1KxMUWj+VULbiZMowKngFFbKczUrNJ1mg==",
            "license": "MIT",
            "dependencies": {
                "safe-buffer": "5.2.1"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/cookie-signature": {
            "version": "1.2.2",
            "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.2.2.tgz",
            "integrity": "sha512-D76uU73ulSXrD1UXF4KE2TMxVVwhsnCgfAyTg9k8P6KGZjlXKrOLe4dJQKI3Bxi5wjesZoFXJWElNWBjPZMbhg==",
            "license": "MIT",
            "engines": {
                "node": ">=6.6.0"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/express": {
            "version": "5.1.0",
            "resolved": "https://registry.npmjs.org/express/-/express-5.1.0.tgz",
            "integrity": "sha512-DT9ck5YIRU+8GYzzU5kT3eHGA5iL+1Zd0EutOmTE9Dtk+Tvuzd23VBU+ec7HPNSTxXYO55gPV/hq4pSBJDjFpA==",
            "license": "MIT",
            "dependencies": {
                "accepts": "^2.0.0",
                "body-parser": "^2.2.0",
                "content-disposition": "^1.0.0",
                "content-type": "^1.0.5",
                "cookie": "^0.7.1",
                "cookie-signature": "^1.2.1",
                "debug": "^4.4.0",
                "encodeurl": "^2.0.0",
                "escape-html": "^1.0.3",
                "etag": "^1.8.1",
                "finalhandler": "^2.1.0",
                "fresh": "^2.0.0",
                "http-errors": "^2.0.0",
                "merge-descriptors": "^2.0.0",
                "mime-types": "^3.0.0",
                "on-finished": "^2.4.1",
                "once": "^1.4.0",
                "parseurl": "^1.3.3",
                "proxy-addr": "^2.0.7",
                "qs": "^6.14.0",
                "range-parser": "^1.2.1",
                "router": "^2.2.0",
                "send": "^1.1.0",
                "serve-static": "^2.2.0",
                "statuses": "^2.0.1",
                "type-is": "^2.0.1",
                "vary": "^1.1.2"
            },
            "engines": {
                "node": ">= 18"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/express"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/finalhandler": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-2.1.0.tgz",
            "integrity": "sha512-/t88Ty3d5JWQbWYgaOGCCYfXRwV1+be02WqYYlL6h0lEiUAMPM8o8qKGO01YIkOHzka2up08wvgYD0mDiI+q3Q==",
            "license": "MIT",
            "dependencies": {
                "debug": "^4.4.0",
                "encodeurl": "^2.0.0",
                "escape-html": "^1.0.3",
                "on-finished": "^2.4.1",
                "parseurl": "^1.3.3",
                "statuses": "^2.0.1"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/fresh": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/fresh/-/fresh-2.0.0.tgz",
            "integrity": "sha512-Rx/WycZ60HOaqLKAi6cHRKKI7zxWbJ31MhntmtwMoaTeF7XFH9hhBp8vITaMidfljRQ6eYWCKkaTK+ykVJHP2A==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/iconv-lite": {
            "version": "0.6.3",
            "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
            "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
            "license": "MIT",
            "dependencies": {
                "safer-buffer": ">= 2.1.2 < 3.0.0"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/media-typer": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-1.1.0.tgz",
            "integrity": "sha512-aisnrDP4GNe06UcKFnV5bfMNPBUw4jsLGaWwWfnH3v02GnBuXX2MCVn5RbrWo0j3pczUilYblq7fQ7Nw2t5XKw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/merge-descriptors": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-2.0.0.tgz",
            "integrity": "sha512-Snk314V5ayFLhp3fkUREub6WtjBfPdCPY1Ln8/8munuLuiYhsABgBVWsozAG+MWMbVEvcdcpbi9R7ww22l9Q3g==",
            "license": "MIT",
            "engines": {
                "node": ">=18"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/mime-db": {
            "version": "1.54.0",
            "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.54.0.tgz",
            "integrity": "sha512-aU5EJuIN2WDemCcAp2vFBfp/m4EAhWJnUNSSw0ixs7/kXbd6Pg64EmwJkNdFhB8aWt1sH2CTXrLxo/iAGV3oPQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/mime-types": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-3.0.1.tgz",
            "integrity": "sha512-xRc4oEhT6eaBpU1XF7AjpOFD+xQmXNB5OVKwp4tqCuBpHLS/ZbBDrc07mYTDqVMg6PfxUjjNp85O6Cd2Z/5HWA==",
            "license": "MIT",
            "dependencies": {
                "mime-db": "^1.54.0"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/negotiator": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-1.0.0.tgz",
            "integrity": "sha512-8Ofs/AUQh8MaEcrlq5xOX0CQ9ypTF5dl78mjlMNfOK08fzpgTHQRQPBxcPlEtIw0yRpws+Zo/3r+5WRby7u3Gg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/qs": {
            "version": "6.14.0",
            "resolved": "https://registry.npmjs.org/qs/-/qs-6.14.0.tgz",
            "integrity": "sha512-YWWTjgABSKcvs/nWBi9PycY/JiPJqOD4JA6o9Sej2AtvSGarXxKC3OQSk4pAarbdQlKAh5D4FCQkJNkW+GAn3w==",
            "license": "BSD-3-Clause",
            "dependencies": {
                "side-channel": "^1.1.0"
            },
            "engines": {
                "node": ">=0.6"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/send": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/send/-/send-1.2.0.tgz",
            "integrity": "sha512-uaW0WwXKpL9blXE2o0bRhoL2EGXIrZxQ2ZQ4mgcfoBxdFmQold+qWsD2jLrfZ0trjKL6vOw0j//eAwcALFjKSw==",
            "license": "MIT",
            "dependencies": {
                "debug": "^4.3.5",
                "encodeurl": "^2.0.0",
                "escape-html": "^1.0.3",
                "etag": "^1.8.1",
                "fresh": "^2.0.0",
                "http-errors": "^2.0.0",
                "mime-types": "^3.0.1",
                "ms": "^2.1.3",
                "on-finished": "^2.4.1",
                "range-parser": "^1.2.1",
                "statuses": "^2.0.1"
            },
            "engines": {
                "node": ">= 18"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/serve-static": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-2.2.0.tgz",
            "integrity": "sha512-61g9pCh0Vnh7IutZjtLGGpTA355+OPn2TyDv/6ivP2h/AdAVX9azsoxmg2/M6nZeQZNYBEwIcsne1mJd9oQItQ==",
            "license": "MIT",
            "dependencies": {
                "encodeurl": "^2.0.0",
                "escape-html": "^1.0.3",
                "parseurl": "^1.3.3",
                "send": "^1.2.0"
            },
            "engines": {
                "node": ">= 18"
            }
        },
        "node_modules/@modelcontextprotocol/sdk/node_modules/type-is": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/type-is/-/type-is-2.0.1.tgz",
            "integrity": "sha512-OZs6gsjF4vMp32qrCbiVSkrFmXtG/AZhY3t0iAMrMBiAZyV9oALtXO8hsrHbMXF9x6L3grlFuwW2oAz7cav+Gw==",
            "license": "MIT",
            "dependencies": {
                "content-type": "^1.0.5",
                "media-typer": "^1.1.0",
                "mime-types": "^3.0.0"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/@nodelib/fs.scandir": {
            "version": "2.1.5",
            "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
            "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@nodelib/fs.stat": "2.0.5",
                "run-parallel": "^1.1.9"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/@nodelib/fs.stat": {
            "version": "2.0.5",
            "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
            "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/@nodelib/fs.walk": {
            "version": "1.2.8",
            "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
            "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@nodelib/fs.scandir": "2.1.5",
                "fastq": "^1.6.0"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/@pkgr/core": {
            "version": "0.2.7",
            "resolved": "https://registry.npmjs.org/@pkgr/core/-/core-0.2.7.tgz",
            "integrity": "sha512-YLT9Zo3oNPJoBjBc4q8G2mjU4tqIbf5CEOORbUUr48dCD9q3umJ3IPlVqOqDakPfd2HuwccBaqlGhN4Gmr5OWg==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/pkgr"
            }
        },
        "node_modules/@types/body-parser": {
            "version": "1.19.6",
            "resolved": "https://registry.npmjs.org/@types/body-parser/-/body-parser-1.19.6.tgz",
            "integrity": "sha512-HLFeCYgz89uk22N5Qg3dvGvsv46B8GLvKKo1zKG4NybA8U2DiEO3w9lqGg29t/tfLRJpJ6iQxnVw4OnB7MoM9g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@types/connect": "*",
                "@types/node": "*"
            }
        },
        "node_modules/@types/connect": {
            "version": "3.4.38",
            "resolved": "https://registry.npmjs.org/@types/connect/-/connect-3.4.38.tgz",
            "integrity": "sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@types/node": "*"
            }
        },
        "node_modules/@types/express": {
            "version": "4.17.23",
            "resolved": "https://registry.npmjs.org/@types/express/-/express-4.17.23.tgz",
            "integrity": "sha512-Crp6WY9aTYP3qPi2wGDo9iUe/rceX01UMhnF1jmwDcKCFM6cx7YhGP/Mpr3y9AASpfHixIG0E6azCcL5OcDHsQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@types/body-parser": "*",
                "@types/express-serve-static-core": "^4.17.33",
                "@types/qs": "*",
                "@types/serve-static": "*"
            }
        },
        "node_modules/@types/express-serve-static-core": {
            "version": "4.19.6",
            "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.19.6.tgz",
            "integrity": "sha512-N4LZ2xG7DatVqhCZzOGb1Yi5lMbXSZcmdLDe9EzSndPV2HpWYWzRbaerl2n27irrm94EPpprqa8KpskPT085+A==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@types/node": "*",
                "@types/qs": "*",
                "@types/range-parser": "*",
                "@types/send": "*"
            }
        },
        "node_modules/@types/http-errors": {
            "version": "2.0.5",
            "resolved": "https://registry.npmjs.org/@types/http-errors/-/http-errors-2.0.5.tgz",
            "integrity": "sha512-r8Tayk8HJnX0FztbZN7oVqGccWgw98T/0neJphO91KkmOzug1KkofZURD4UaD5uH8AqcFLfdPErnBod0u71/qg==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@types/mime": {
            "version": "1.3.5",
            "resolved": "https://registry.npmjs.org/@types/mime/-/mime-1.3.5.tgz",
            "integrity": "sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@types/node": {
            "version": "20.19.0",
            "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.0.tgz",
            "integrity": "sha512-hfrc+1tud1xcdVTABC2JiomZJEklMcXYNTVtZLAeqTVWD+qL5jkHKT+1lOtqDdGxt+mB53DTtiz673vfjU8D1Q==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "undici-types": "~6.21.0"
            }
        },
        "node_modules/@types/qs": {
            "version": "6.14.0",
            "resolved": "https://registry.npmjs.org/@types/qs/-/qs-6.14.0.tgz",
            "integrity": "sha512-eOunJqu0K1923aExK6y8p6fsihYEn/BYuQ4g0CxAAgFc4b/ZLN4CrsRZ55srTdqoiLzU2B2evC+apEIxprEzkQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@types/range-parser": {
            "version": "1.2.7",
            "resolved": "https://registry.npmjs.org/@types/range-parser/-/range-parser-1.2.7.tgz",
            "integrity": "sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/@types/send": {
            "version": "0.17.5",
            "resolved": "https://registry.npmjs.org/@types/send/-/send-0.17.5.tgz",
            "integrity": "sha512-z6F2D3cOStZvuk2SaP6YrwkNO65iTZcwA2ZkSABegdkAh/lf+Aa/YQndZVfmEXT5vgAp6zv06VQ3ejSVjAny4w==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@types/mime": "^1",
                "@types/node": "*"
            }
        },
        "node_modules/@types/serve-static": {
            "version": "1.15.8",
            "resolved": "https://registry.npmjs.org/@types/serve-static/-/serve-static-1.15.8.tgz",
            "integrity": "sha512-roei0UY3LhpOJvjbIP6ZZFngyLKl5dskOtDhxY5THRSpO+ZI+nzJ+m5yUMzGrp89YRa7lvknKkMYjqQFGwA7Sg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@types/http-errors": "*",
                "@types/node": "*",
                "@types/send": "*"
            }
        },
        "node_modules/@typescript-eslint/eslint-plugin": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.18.0.tgz",
            "integrity": "sha512-94EQTWZ40mzBc42ATNIBimBEDltSJ9RQHCC8vc/PDbxi4k8dVwUAv4o98dk50M1zB+JGFxp43FP7f8+FP8R6Sw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@eslint-community/regexpp": "^4.10.0",
                "@typescript-eslint/scope-manager": "7.18.0",
                "@typescript-eslint/type-utils": "7.18.0",
                "@typescript-eslint/utils": "7.18.0",
                "@typescript-eslint/visitor-keys": "7.18.0",
                "graphemer": "^1.4.0",
                "ignore": "^5.3.1",
                "natural-compare": "^1.4.0",
                "ts-api-utils": "^1.3.0"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependencies": {
                "@typescript-eslint/parser": "^7.0.0",
                "eslint": "^8.56.0"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/@typescript-eslint/parser": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.18.0.tgz",
            "integrity": "sha512-4Z+L8I2OqhZV8qA132M4wNL30ypZGYOQVBfMgxDH/K5UX0PNqTu1c6za9ST5r9+tavvHiTWmBnKzpCJ/GlVFtg==",
            "dev": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "@typescript-eslint/scope-manager": "7.18.0",
                "@typescript-eslint/types": "7.18.0",
                "@typescript-eslint/typescript-estree": "7.18.0",
                "@typescript-eslint/visitor-keys": "7.18.0",
                "debug": "^4.3.4"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependencies": {
                "eslint": "^8.56.0"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/@typescript-eslint/scope-manager": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.18.0.tgz",
            "integrity": "sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@typescript-eslint/types": "7.18.0",
                "@typescript-eslint/visitor-keys": "7.18.0"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            }
        },
        "node_modules/@typescript-eslint/type-utils": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.18.0.tgz",
            "integrity": "sha512-XL0FJXuCLaDuX2sYqZUUSOJ2sG5/i1AAze+axqmLnSkNEVMVYLF+cbwlB2w8D1tinFuSikHmFta+P+HOofrLeA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@typescript-eslint/typescript-estree": "7.18.0",
                "@typescript-eslint/utils": "7.18.0",
                "debug": "^4.3.4",
                "ts-api-utils": "^1.3.0"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependencies": {
                "eslint": "^8.56.0"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/@typescript-eslint/types": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-7.18.0.tgz",
            "integrity": "sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            }
        },
        "node_modules/@typescript-eslint/typescript-estree": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.18.0.tgz",
            "integrity": "sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==",
            "dev": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "@typescript-eslint/types": "7.18.0",
                "@typescript-eslint/visitor-keys": "7.18.0",
                "debug": "^4.3.4",
                "globby": "^11.1.0",
                "is-glob": "^4.0.3",
                "minimatch": "^9.0.4",
                "semver": "^7.6.0",
                "ts-api-utils": "^1.3.0"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/@typescript-eslint/utils": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.18.0.tgz",
            "integrity": "sha512-kK0/rNa2j74XuHVcoCZxdFBMF+aq/vH83CXAOHieC+2Gis4mF8jJXT5eAfyD3K0sAxtPuwxaIOIOvhwzVDt/kw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@eslint-community/eslint-utils": "^4.4.0",
                "@typescript-eslint/scope-manager": "7.18.0",
                "@typescript-eslint/types": "7.18.0",
                "@typescript-eslint/typescript-estree": "7.18.0"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependencies": {
                "eslint": "^8.56.0"
            }
        },
        "node_modules/@typescript-eslint/visitor-keys": {
            "version": "7.18.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.18.0.tgz",
            "integrity": "sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@typescript-eslint/types": "7.18.0",
                "eslint-visitor-keys": "^3.4.3"
            },
            "engines": {
                "node": "^18.18.0 || >=20.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            }
        },
        "node_modules/@ungap/structured-clone": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz",
            "integrity": "sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==",
            "dev": true,
            "license": "ISC"
        },
        "node_modules/accepts": {
            "version": "1.3.8",
            "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
            "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
            "license": "MIT",
            "dependencies": {
                "mime-types": "~2.1.34",
                "negotiator": "0.6.3"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/acorn": {
            "version": "8.15.0",
            "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
            "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
            "dev": true,
            "license": "MIT",
            "bin": {
                "acorn": "bin/acorn"
            },
            "engines": {
                "node": ">=0.4.0"
            }
        },
        "node_modules/acorn-jsx": {
            "version": "5.3.2",
            "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
            "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
            "dev": true,
            "license": "MIT",
            "peerDependencies": {
                "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
            }
        },
        "node_modules/ajv": {
            "version": "6.12.6",
            "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
            "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
            "license": "MIT",
            "dependencies": {
                "fast-deep-equal": "^3.1.1",
                "fast-json-stable-stringify": "^2.0.0",
                "json-schema-traverse": "^0.4.1",
                "uri-js": "^4.2.2"
            },
            "funding": {
                "type": "github",
                "url": "https://github.com/sponsors/epoberezkin"
            }
        },
        "node_modules/ansi-regex": {
            "version": "5.0.1",
            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
            "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/ansi-styles": {
            "version": "4.3.0",
            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
            "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "color-convert": "^2.0.1"
            },
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-styles?sponsor=1"
            }
        },
        "node_modules/argparse": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
            "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
            "dev": true,
            "license": "Python-2.0"
        },
        "node_modules/array-flatten": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
            "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
            "license": "MIT"
        },
        "node_modules/array-union": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
            "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/balanced-match": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
            "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/body-parser": {
            "version": "1.20.3",
            "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
            "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
            "license": "MIT",
            "dependencies": {
                "bytes": "3.1.2",
                "content-type": "~1.0.5",
                "debug": "2.6.9",
                "depd": "2.0.0",
                "destroy": "1.2.0",
                "http-errors": "2.0.0",
                "iconv-lite": "0.4.24",
                "on-finished": "2.4.1",
                "qs": "6.13.0",
                "raw-body": "2.5.2",
                "type-is": "~1.6.18",
                "unpipe": "1.0.0"
            },
            "engines": {
                "node": ">= 0.8",
                "npm": "1.2.8000 || >= 1.4.16"
            }
        },
        "node_modules/body-parser/node_modules/debug": {
            "version": "2.6.9",
            "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
            "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
            "license": "MIT",
            "dependencies": {
                "ms": "2.0.0"
            }
        },
        "node_modules/body-parser/node_modules/ms": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
            "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
            "license": "MIT"
        },
        "node_modules/body-parser/node_modules/raw-body": {
            "version": "2.5.2",
            "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
            "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
            "license": "MIT",
            "dependencies": {
                "bytes": "3.1.2",
                "http-errors": "2.0.0",
                "iconv-lite": "0.4.24",
                "unpipe": "1.0.0"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/brace-expansion": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
            "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0"
            }
        },
        "node_modules/braces": {
            "version": "3.0.3",
            "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
            "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "fill-range": "^7.1.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/bytes": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
            "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/call-bind-apply-helpers": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
            "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "function-bind": "^1.1.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/call-bound": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
            "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.2",
                "get-intrinsic": "^1.3.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/callsites": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
            "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/chalk": {
            "version": "4.1.2",
            "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
            "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ansi-styles": "^4.1.0",
                "supports-color": "^7.1.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/chalk/chalk?sponsor=1"
            }
        },
        "node_modules/color-convert": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
            "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "color-name": "~1.1.4"
            },
            "engines": {
                "node": ">=7.0.0"
            }
        },
        "node_modules/color-name": {
            "version": "1.1.4",
            "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
            "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/concat-map": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
            "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/content-disposition": {
            "version": "0.5.4",
            "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
            "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
            "license": "MIT",
            "dependencies": {
                "safe-buffer": "5.2.1"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/content-type": {
            "version": "1.0.5",
            "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
            "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/cookie": {
            "version": "0.7.1",
            "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
            "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/cookie-signature": {
            "version": "1.0.6",
            "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
            "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
            "license": "MIT"
        },
        "node_modules/cors": {
            "version": "2.8.5",
            "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
            "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
            "license": "MIT",
            "dependencies": {
                "object-assign": "^4",
                "vary": "^1"
            },
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/cross-spawn": {
            "version": "7.0.6",
            "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
            "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
            "license": "MIT",
            "dependencies": {
                "path-key": "^3.1.0",
                "shebang-command": "^2.0.0",
                "which": "^2.0.1"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/debug": {
            "version": "4.4.1",
            "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
            "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
            "license": "MIT",
            "dependencies": {
                "ms": "^2.1.3"
            },
            "engines": {
                "node": ">=6.0"
            },
            "peerDependenciesMeta": {
                "supports-color": {
                    "optional": true
                }
            }
        },
        "node_modules/deep-is": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
            "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/depd": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
            "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/destroy": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
            "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8",
                "npm": "1.2.8000 || >= 1.4.16"
            }
        },
        "node_modules/dir-glob": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
            "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "path-type": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/doctrine": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
            "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
            "dev": true,
            "license": "Apache-2.0",
            "dependencies": {
                "esutils": "^2.0.2"
            },
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/dotenv": {
            "version": "16.5.0",
            "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.5.0.tgz",
            "integrity": "sha512-m/C+AwOAr9/W1UOIZUo232ejMNnJAJtYQjUbHoNTBNTJSvqzzDh7vnrei3o3r3m9blf6ZoDkvcw0VmozNRFJxg==",
            "license": "BSD-2-Clause",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://dotenvx.com"
            }
        },
        "node_modules/dunder-proto": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
            "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.1",
                "es-errors": "^1.3.0",
                "gopd": "^1.2.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/ee-first": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
            "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
            "license": "MIT"
        },
        "node_modules/encodeurl": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
            "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/es-define-property": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
            "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-errors": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
            "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-object-atoms": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
            "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/escape-html": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
            "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
            "license": "MIT"
        },
        "node_modules/escape-string-regexp": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
            "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/eslint": {
            "version": "8.57.1",
            "resolved": "https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz",
            "integrity": "sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==",
            "deprecated": "This version is no longer supported. Please see https://eslint.org/version-support for other options.",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@eslint-community/eslint-utils": "^4.2.0",
                "@eslint-community/regexpp": "^4.6.1",
                "@eslint/eslintrc": "^2.1.4",
                "@eslint/js": "8.57.1",
                "@humanwhocodes/config-array": "^0.13.0",
                "@humanwhocodes/module-importer": "^1.0.1",
                "@nodelib/fs.walk": "^1.2.8",
                "@ungap/structured-clone": "^1.2.0",
                "ajv": "^6.12.4",
                "chalk": "^4.0.0",
                "cross-spawn": "^7.0.2",
                "debug": "^4.3.2",
                "doctrine": "^3.0.0",
                "escape-string-regexp": "^4.0.0",
                "eslint-scope": "^7.2.2",
                "eslint-visitor-keys": "^3.4.3",
                "espree": "^9.6.1",
                "esquery": "^1.4.2",
                "esutils": "^2.0.2",
                "fast-deep-equal": "^3.1.3",
                "file-entry-cache": "^6.0.1",
                "find-up": "^5.0.0",
                "glob-parent": "^6.0.2",
                "globals": "^13.19.0",
                "graphemer": "^1.4.0",
                "ignore": "^5.2.0",
                "imurmurhash": "^0.1.4",
                "is-glob": "^4.0.0",
                "is-path-inside": "^3.0.3",
                "js-yaml": "^4.1.0",
                "json-stable-stringify-without-jsonify": "^1.0.1",
                "levn": "^0.4.1",
                "lodash.merge": "^4.6.2",
                "minimatch": "^3.1.2",
                "natural-compare": "^1.4.0",
                "optionator": "^0.9.3",
                "strip-ansi": "^6.0.1",
                "text-table": "^0.2.0"
            },
            "bin": {
                "eslint": "bin/eslint.js"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/eslint-config-prettier": {
            "version": "9.1.0",
            "resolved": "https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz",
            "integrity": "sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==",
            "dev": true,
            "license": "MIT",
            "bin": {
                "eslint-config-prettier": "bin/cli.js"
            },
            "peerDependencies": {
                "eslint": ">=7.0.0"
            }
        },
        "node_modules/eslint-plugin-prettier": {
            "version": "5.4.1",
            "resolved": "https://registry.npmjs.org/eslint-plugin-prettier/-/eslint-plugin-prettier-5.4.1.tgz",
            "integrity": "sha512-9dF+KuU/Ilkq27A8idRP7N2DH8iUR6qXcjF3FR2wETY21PZdBrIjwCau8oboyGj9b7etWmTGEeM8e7oOed6ZWg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "prettier-linter-helpers": "^1.0.0",
                "synckit": "^0.11.7"
            },
            "engines": {
                "node": "^14.18.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint-plugin-prettier"
            },
            "peerDependencies": {
                "@types/eslint": ">=8.0.0",
                "eslint": ">=8.0.0",
                "eslint-config-prettier": ">= 7.0.0 <10.0.0 || >=10.1.0",
                "prettier": ">=3.0.0"
            },
            "peerDependenciesMeta": {
                "@types/eslint": {
                    "optional": true
                },
                "eslint-config-prettier": {
                    "optional": true
                }
            }
        },
        "node_modules/eslint-scope": {
            "version": "7.2.2",
            "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz",
            "integrity": "sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==",
            "dev": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "esrecurse": "^4.3.0",
                "estraverse": "^5.2.0"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/eslint-visitor-keys": {
            "version": "3.4.3",
            "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
            "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
            "dev": true,
            "license": "Apache-2.0",
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/eslint/node_modules/brace-expansion": {
            "version": "1.1.12",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
            "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
            }
        },
        "node_modules/eslint/node_modules/minimatch": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
            "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^1.1.7"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/espree": {
            "version": "9.6.1",
            "resolved": "https://registry.npmjs.org/espree/-/espree-9.6.1.tgz",
            "integrity": "sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==",
            "dev": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "acorn": "^8.9.0",
                "acorn-jsx": "^5.3.2",
                "eslint-visitor-keys": "^3.4.1"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/esquery": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
            "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
            "dev": true,
            "license": "BSD-3-Clause",
            "dependencies": {
                "estraverse": "^5.1.0"
            },
            "engines": {
                "node": ">=0.10"
            }
        },
        "node_modules/esrecurse": {
            "version": "4.3.0",
            "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
            "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
            "dev": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "estraverse": "^5.2.0"
            },
            "engines": {
                "node": ">=4.0"
            }
        },
        "node_modules/estraverse": {
            "version": "5.3.0",
            "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
            "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
            "dev": true,
            "license": "BSD-2-Clause",
            "engines": {
                "node": ">=4.0"
            }
        },
        "node_modules/esutils": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
            "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
            "dev": true,
            "license": "BSD-2-Clause",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/etag": {
            "version": "1.8.1",
            "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
            "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/eventsource": {
            "version": "3.0.7",
            "resolved": "https://registry.npmjs.org/eventsource/-/eventsource-3.0.7.tgz",
            "integrity": "sha512-CRT1WTyuQoD771GW56XEZFQ/ZoSfWid1alKGDYMmkt2yl8UXrVR4pspqWNEcqKvVIzg6PAltWjxcSSPrboA4iA==",
            "license": "MIT",
            "dependencies": {
                "eventsource-parser": "^3.0.1"
            },
            "engines": {
                "node": ">=18.0.0"
            }
        },
        "node_modules/eventsource-parser": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/eventsource-parser/-/eventsource-parser-3.0.2.tgz",
            "integrity": "sha512-6RxOBZ/cYgd8usLwsEl+EC09Au/9BcmCKYF2/xbml6DNczf7nv0MQb+7BA2F+li6//I+28VNlQR37XfQtcAJuA==",
            "license": "MIT",
            "engines": {
                "node": ">=18.0.0"
            }
        },
        "node_modules/express": {
            "version": "4.21.2",
            "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
            "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
            "license": "MIT",
            "dependencies": {
                "accepts": "~1.3.8",
                "array-flatten": "1.1.1",
                "body-parser": "1.20.3",
                "content-disposition": "0.5.4",
                "content-type": "~1.0.4",
                "cookie": "0.7.1",
                "cookie-signature": "1.0.6",
                "debug": "2.6.9",
                "depd": "2.0.0",
                "encodeurl": "~2.0.0",
                "escape-html": "~1.0.3",
                "etag": "~1.8.1",
                "finalhandler": "1.3.1",
                "fresh": "0.5.2",
                "http-errors": "2.0.0",
                "merge-descriptors": "1.0.3",
                "methods": "~1.1.2",
                "on-finished": "2.4.1",
                "parseurl": "~1.3.3",
                "path-to-regexp": "0.1.12",
                "proxy-addr": "~2.0.7",
                "qs": "6.13.0",
                "range-parser": "~1.2.1",
                "safe-buffer": "5.2.1",
                "send": "0.19.0",
                "serve-static": "1.16.2",
                "setprototypeof": "1.2.0",
                "statuses": "2.0.1",
                "type-is": "~1.6.18",
                "utils-merge": "1.0.1",
                "vary": "~1.1.2"
            },
            "engines": {
                "node": ">= 0.10.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/express"
            }
        },
        "node_modules/express-rate-limit": {
            "version": "7.5.0",
            "resolved": "https://registry.npmjs.org/express-rate-limit/-/express-rate-limit-7.5.0.tgz",
            "integrity": "sha512-eB5zbQh5h+VenMPM3fh+nw1YExi5nMr6HUCR62ELSP11huvxm/Uir1H1QEyTkk5QX6A58pX6NmaTMceKZ0Eodg==",
            "license": "MIT",
            "engines": {
                "node": ">= 16"
            },
            "funding": {
                "url": "https://github.com/sponsors/express-rate-limit"
            },
            "peerDependencies": {
                "express": "^4.11 || 5 || ^5.0.0-beta.1"
            }
        },
        "node_modules/express/node_modules/debug": {
            "version": "2.6.9",
            "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
            "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
            "license": "MIT",
            "dependencies": {
                "ms": "2.0.0"
            }
        },
        "node_modules/express/node_modules/ms": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
            "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
            "license": "MIT"
        },
        "node_modules/fast-deep-equal": {
            "version": "3.1.3",
            "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
            "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
            "license": "MIT"
        },
        "node_modules/fast-diff": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.3.0.tgz",
            "integrity": "sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==",
            "dev": true,
            "license": "Apache-2.0"
        },
        "node_modules/fast-glob": {
            "version": "3.3.3",
            "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
            "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@nodelib/fs.stat": "^2.0.2",
                "@nodelib/fs.walk": "^1.2.3",
                "glob-parent": "^5.1.2",
                "merge2": "^1.3.0",
                "micromatch": "^4.0.8"
            },
            "engines": {
                "node": ">=8.6.0"
            }
        },
        "node_modules/fast-glob/node_modules/glob-parent": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
            "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "is-glob": "^4.0.1"
            },
            "engines": {
                "node": ">= 6"
            }
        },
        "node_modules/fast-json-stable-stringify": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
            "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
            "license": "MIT"
        },
        "node_modules/fast-levenshtein": {
            "version": "2.0.6",
            "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
            "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/fastq": {
            "version": "1.19.1",
            "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
            "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "reusify": "^1.0.4"
            }
        },
        "node_modules/file-entry-cache": {
            "version": "6.0.1",
            "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
            "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "flat-cache": "^3.0.4"
            },
            "engines": {
                "node": "^10.12.0 || >=12.0.0"
            }
        },
        "node_modules/fill-range": {
            "version": "7.1.1",
            "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
            "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "to-regex-range": "^5.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/finalhandler": {
            "version": "1.3.1",
            "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
            "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
            "license": "MIT",
            "dependencies": {
                "debug": "2.6.9",
                "encodeurl": "~2.0.0",
                "escape-html": "~1.0.3",
                "on-finished": "2.4.1",
                "parseurl": "~1.3.3",
                "statuses": "2.0.1",
                "unpipe": "~1.0.0"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/finalhandler/node_modules/debug": {
            "version": "2.6.9",
            "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
            "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
            "license": "MIT",
            "dependencies": {
                "ms": "2.0.0"
            }
        },
        "node_modules/finalhandler/node_modules/ms": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
            "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
            "license": "MIT"
        },
        "node_modules/find-up": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
            "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "locate-path": "^6.0.0",
                "path-exists": "^4.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/flat-cache": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz",
            "integrity": "sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "flatted": "^3.2.9",
                "keyv": "^4.5.3",
                "rimraf": "^3.0.2"
            },
            "engines": {
                "node": "^10.12.0 || >=12.0.0"
            }
        },
        "node_modules/flatted": {
            "version": "3.3.3",
            "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
            "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
            "dev": true,
            "license": "ISC"
        },
        "node_modules/forwarded": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
            "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/fresh": {
            "version": "0.5.2",
            "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
            "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/fs.realpath": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
            "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
            "dev": true,
            "license": "ISC"
        },
        "node_modules/function-bind": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
            "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
            "license": "MIT",
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/get-intrinsic": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
            "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
            "license": "MIT",
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.2",
                "es-define-property": "^1.0.1",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.1.1",
                "function-bind": "^1.1.2",
                "get-proto": "^1.0.1",
                "gopd": "^1.2.0",
                "has-symbols": "^1.1.0",
                "hasown": "^2.0.2",
                "math-intrinsics": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/get-proto": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
            "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
            "license": "MIT",
            "dependencies": {
                "dunder-proto": "^1.0.1",
                "es-object-atoms": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/glob": {
            "version": "7.2.3",
            "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
            "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
            "deprecated": "Glob versions prior to v9 are no longer supported",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "fs.realpath": "^1.0.0",
                "inflight": "^1.0.4",
                "inherits": "2",
                "minimatch": "^3.1.1",
                "once": "^1.3.0",
                "path-is-absolute": "^1.0.0"
            },
            "engines": {
                "node": "*"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/glob-parent": {
            "version": "6.0.2",
            "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
            "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "is-glob": "^4.0.3"
            },
            "engines": {
                "node": ">=10.13.0"
            }
        },
        "node_modules/glob/node_modules/brace-expansion": {
            "version": "1.1.12",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
            "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
            }
        },
        "node_modules/glob/node_modules/minimatch": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
            "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^1.1.7"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/globals": {
            "version": "13.24.0",
            "resolved": "https://registry.npmjs.org/globals/-/globals-13.24.0.tgz",
            "integrity": "sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "type-fest": "^0.20.2"
            },
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/globby": {
            "version": "11.1.0",
            "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
            "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "array-union": "^2.1.0",
                "dir-glob": "^3.0.1",
                "fast-glob": "^3.2.9",
                "ignore": "^5.2.0",
                "merge2": "^1.4.1",
                "slash": "^3.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/gopd": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
            "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/graphemer": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
            "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/has-flag": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
            "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/has-symbols": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
            "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/hasown": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
            "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
            "license": "MIT",
            "dependencies": {
                "function-bind": "^1.1.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/http-errors": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
            "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
            "license": "MIT",
            "dependencies": {
                "depd": "2.0.0",
                "inherits": "2.0.4",
                "setprototypeof": "1.2.0",
                "statuses": "2.0.1",
                "toidentifier": "1.0.1"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/iconv-lite": {
            "version": "0.4.24",
            "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
            "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
            "license": "MIT",
            "dependencies": {
                "safer-buffer": ">= 2.1.2 < 3"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/ignore": {
            "version": "5.3.2",
            "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
            "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">= 4"
            }
        },
        "node_modules/import-fresh": {
            "version": "3.3.1",
            "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
            "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "parent-module": "^1.0.0",
                "resolve-from": "^4.0.0"
            },
            "engines": {
                "node": ">=6"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/imurmurhash": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
            "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.8.19"
            }
        },
        "node_modules/inflight": {
            "version": "1.0.6",
            "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
            "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
            "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "once": "^1.3.0",
                "wrappy": "1"
            }
        },
        "node_modules/inherits": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
            "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
            "license": "ISC"
        },
        "node_modules/ipaddr.js": {
            "version": "1.9.1",
            "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
            "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/is-extglob": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
            "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/is-glob": {
            "version": "4.0.3",
            "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
            "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "is-extglob": "^2.1.1"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/is-number": {
            "version": "7.0.0",
            "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
            "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.12.0"
            }
        },
        "node_modules/is-path-inside": {
            "version": "3.0.3",
            "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
            "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/is-promise": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-4.0.0.tgz",
            "integrity": "sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==",
            "license": "MIT"
        },
        "node_modules/isexe": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
            "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
            "license": "ISC"
        },
        "node_modules/js-yaml": {
            "version": "4.1.0",
            "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
            "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "argparse": "^2.0.1"
            },
            "bin": {
                "js-yaml": "bin/js-yaml.js"
            }
        },
        "node_modules/json-buffer": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
            "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/json-schema-traverse": {
            "version": "0.4.1",
            "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
            "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
            "license": "MIT"
        },
        "node_modules/json-stable-stringify-without-jsonify": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
            "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/keyv": {
            "version": "4.5.4",
            "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
            "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "json-buffer": "3.0.1"
            }
        },
        "node_modules/levn": {
            "version": "0.4.1",
            "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
            "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "prelude-ls": "^1.2.1",
                "type-check": "~0.4.0"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/locate-path": {
            "version": "6.0.0",
            "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
            "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "p-locate": "^5.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/lodash.merge": {
            "version": "4.6.2",
            "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
            "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/math-intrinsics": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
            "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/media-typer": {
            "version": "0.3.0",
            "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
            "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/merge-descriptors": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
            "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
            "license": "MIT",
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/merge2": {
            "version": "1.4.1",
            "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
            "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/methods": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
            "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/micromatch": {
            "version": "4.0.8",
            "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
            "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "braces": "^3.0.3",
                "picomatch": "^2.3.1"
            },
            "engines": {
                "node": ">=8.6"
            }
        },
        "node_modules/mime": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
            "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
            "license": "MIT",
            "bin": {
                "mime": "cli.js"
            },
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/mime-db": {
            "version": "1.52.0",
            "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
            "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/mime-types": {
            "version": "2.1.35",
            "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
            "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
            "license": "MIT",
            "dependencies": {
                "mime-db": "1.52.0"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/minimatch": {
            "version": "9.0.5",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
            "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^2.0.1"
            },
            "engines": {
                "node": ">=16 || 14 >=14.17"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/ms": {
            "version": "2.1.3",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
            "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
            "license": "MIT"
        },
        "node_modules/natural-compare": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
            "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/negotiator": {
            "version": "0.6.3",
            "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
            "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/object-assign": {
            "version": "4.1.1",
            "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
            "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
            "license": "MIT",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/object-inspect": {
            "version": "1.13.4",
            "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
            "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/on-finished": {
            "version": "2.4.1",
            "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
            "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
            "license": "MIT",
            "dependencies": {
                "ee-first": "1.1.1"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/once": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
            "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
            "license": "ISC",
            "dependencies": {
                "wrappy": "1"
            }
        },
        "node_modules/optionator": {
            "version": "0.9.4",
            "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
            "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "deep-is": "^0.1.3",
                "fast-levenshtein": "^2.0.6",
                "levn": "^0.4.1",
                "prelude-ls": "^1.2.1",
                "type-check": "^0.4.0",
                "word-wrap": "^1.2.5"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/p-limit": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
            "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "yocto-queue": "^0.1.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/p-locate": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
            "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "p-limit": "^3.0.2"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/parent-module": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
            "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "callsites": "^3.0.0"
            },
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/parseurl": {
            "version": "1.3.3",
            "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
            "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/path-exists": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
            "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/path-is-absolute": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
            "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/path-key": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
            "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/path-to-regexp": {
            "version": "0.1.12",
            "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
            "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
            "license": "MIT"
        },
        "node_modules/path-type": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
            "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/picomatch": {
            "version": "2.3.1",
            "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
            "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8.6"
            },
            "funding": {
                "url": "https://github.com/sponsors/jonschlinkert"
            }
        },
        "node_modules/pkce-challenge": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/pkce-challenge/-/pkce-challenge-5.0.0.tgz",
            "integrity": "sha512-ueGLflrrnvwB3xuo/uGob5pd5FN7l0MsLf0Z87o/UQmRtwjvfylfc9MurIxRAWywCYTgrvpXBcqjV4OfCYGCIQ==",
            "license": "MIT",
            "engines": {
                "node": ">=16.20.0"
            }
        },
        "node_modules/prelude-ls": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
            "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/prettier": {
            "version": "3.5.3",
            "resolved": "https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz",
            "integrity": "sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==",
            "dev": true,
            "license": "MIT",
            "bin": {
                "prettier": "bin/prettier.cjs"
            },
            "engines": {
                "node": ">=14"
            },
            "funding": {
                "url": "https://github.com/prettier/prettier?sponsor=1"
            }
        },
        "node_modules/prettier-linter-helpers": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/prettier-linter-helpers/-/prettier-linter-helpers-1.0.0.tgz",
            "integrity": "sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "fast-diff": "^1.1.2"
            },
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/proxy-addr": {
            "version": "2.0.7",
            "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
            "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
            "license": "MIT",
            "dependencies": {
                "forwarded": "0.2.0",
                "ipaddr.js": "1.9.1"
            },
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/punycode": {
            "version": "2.3.1",
            "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
            "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
            "license": "MIT",
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/qs": {
            "version": "6.13.0",
            "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
            "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
            "license": "BSD-3-Clause",
            "dependencies": {
                "side-channel": "^1.0.6"
            },
            "engines": {
                "node": ">=0.6"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/queue-microtask": {
            "version": "1.2.3",
            "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
            "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
            "dev": true,
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ],
            "license": "MIT"
        },
        "node_modules/range-parser": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
            "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/raw-body": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-3.0.0.tgz",
            "integrity": "sha512-RmkhL8CAyCRPXCE28MMH0z2PNWQBNk2Q09ZdxM9IOOXwxwZbN+qbWaatPkdkWIKL2ZVDImrN/pK5HTRz2PcS4g==",
            "license": "MIT",
            "dependencies": {
                "bytes": "3.1.2",
                "http-errors": "2.0.0",
                "iconv-lite": "0.6.3",
                "unpipe": "1.0.0"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/raw-body/node_modules/iconv-lite": {
            "version": "0.6.3",
            "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
            "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
            "license": "MIT",
            "dependencies": {
                "safer-buffer": ">= 2.1.2 < 3.0.0"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/resolve-from": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
            "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/reusify": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
            "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "iojs": ">=1.0.0",
                "node": ">=0.10.0"
            }
        },
        "node_modules/rimraf": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
            "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
            "deprecated": "Rimraf versions prior to v4 are no longer supported",
            "dev": true,
            "license": "ISC",
            "dependencies": {
                "glob": "^7.1.3"
            },
            "bin": {
                "rimraf": "bin.js"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/router": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/router/-/router-2.2.0.tgz",
            "integrity": "sha512-nLTrUKm2UyiL7rlhapu/Zl45FwNgkZGaCpZbIHajDYgwlJCOzLSk+cIPAnsEqV955GjILJnKbdQC1nVPz+gAYQ==",
            "license": "MIT",
            "dependencies": {
                "debug": "^4.4.0",
                "depd": "^2.0.0",
                "is-promise": "^4.0.0",
                "parseurl": "^1.3.3",
                "path-to-regexp": "^8.0.0"
            },
            "engines": {
                "node": ">= 18"
            }
        },
        "node_modules/router/node_modules/path-to-regexp": {
            "version": "8.2.0",
            "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-8.2.0.tgz",
            "integrity": "sha512-TdrF7fW9Rphjq4RjrW0Kp2AW0Ahwu9sRGTkS6bvDi0SCwZlEZYmcfDbEsTz8RVk0EHIS/Vd1bv3JhG+1xZuAyQ==",
            "license": "MIT",
            "engines": {
                "node": ">=16"
            }
        },
        "node_modules/run-parallel": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
            "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
            "dev": true,
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ],
            "license": "MIT",
            "dependencies": {
                "queue-microtask": "^1.2.2"
            }
        },
        "node_modules/safe-buffer": {
            "version": "5.2.1",
            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
            "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ],
            "license": "MIT"
        },
        "node_modules/safer-buffer": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
            "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
            "license": "MIT"
        },
        "node_modules/semver": {
            "version": "7.7.2",
            "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
            "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
            "dev": true,
            "license": "ISC",
            "bin": {
                "semver": "bin/semver.js"
            },
            "engines": {
                "node": ">=10"
            }
        },
        "node_modules/send": {
            "version": "0.19.0",
            "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
            "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
            "license": "MIT",
            "dependencies": {
                "debug": "2.6.9",
                "depd": "2.0.0",
                "destroy": "1.2.0",
                "encodeurl": "~1.0.2",
                "escape-html": "~1.0.3",
                "etag": "~1.8.1",
                "fresh": "0.5.2",
                "http-errors": "2.0.0",
                "mime": "1.6.0",
                "ms": "2.1.3",
                "on-finished": "2.4.1",
                "range-parser": "~1.2.1",
                "statuses": "2.0.1"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/send/node_modules/debug": {
            "version": "2.6.9",
            "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
            "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
            "license": "MIT",
            "dependencies": {
                "ms": "2.0.0"
            }
        },
        "node_modules/send/node_modules/debug/node_modules/ms": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
            "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
            "license": "MIT"
        },
        "node_modules/send/node_modules/encodeurl": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
            "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/serve-static": {
            "version": "1.16.2",
            "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
            "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
            "license": "MIT",
            "dependencies": {
                "encodeurl": "~2.0.0",
                "escape-html": "~1.0.3",
                "parseurl": "~1.3.3",
                "send": "0.19.0"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/setprototypeof": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
            "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
            "license": "ISC"
        },
        "node_modules/shebang-command": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
            "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
            "license": "MIT",
            "dependencies": {
                "shebang-regex": "^3.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/shebang-regex": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
            "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/side-channel": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
            "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "object-inspect": "^1.13.3",
                "side-channel-list": "^1.0.0",
                "side-channel-map": "^1.0.1",
                "side-channel-weakmap": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-list": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
            "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
            "license": "MIT",
            "dependencies": {
                "es-errors": "^1.3.0",
                "object-inspect": "^1.13.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-map": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
            "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
            "license": "MIT",
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.5",
                "object-inspect": "^1.13.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-weakmap": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
            "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
            "license": "MIT",
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.5",
                "object-inspect": "^1.13.3",
                "side-channel-map": "^1.0.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/slash": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
            "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/statuses": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
            "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/strip-ansi": {
            "version": "6.0.1",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
            "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "ansi-regex": "^5.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/strip-json-comments": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
            "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/supports-color": {
            "version": "7.2.0",
            "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
            "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "has-flag": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/synckit": {
            "version": "0.11.8",
            "resolved": "https://registry.npmjs.org/synckit/-/synckit-0.11.8.tgz",
            "integrity": "sha512-+XZ+r1XGIJGeQk3VvXhT6xx/VpbHsRzsTkGgF6E5RX9TTXD0118l87puaEBZ566FhqblC6U0d4XnubznJDm30A==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "@pkgr/core": "^0.2.4"
            },
            "engines": {
                "node": "^14.18.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/synckit"
            }
        },
        "node_modules/text-table": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
            "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/to-regex-range": {
            "version": "5.0.1",
            "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
            "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "is-number": "^7.0.0"
            },
            "engines": {
                "node": ">=8.0"
            }
        },
        "node_modules/toidentifier": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
            "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
            "license": "MIT",
            "engines": {
                "node": ">=0.6"
            }
        },
        "node_modules/ts-api-utils": {
            "version": "1.4.3",
            "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.3.tgz",
            "integrity": "sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=16"
            },
            "peerDependencies": {
                "typescript": ">=4.2.0"
            }
        },
        "node_modules/type-check": {
            "version": "0.4.0",
            "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
            "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
            "dev": true,
            "license": "MIT",
            "dependencies": {
                "prelude-ls": "^1.2.1"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/type-fest": {
            "version": "0.20.2",
            "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
            "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
            "dev": true,
            "license": "(MIT OR CC0-1.0)",
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/type-is": {
            "version": "1.6.18",
            "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
            "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
            "license": "MIT",
            "dependencies": {
                "media-typer": "0.3.0",
                "mime-types": "~2.1.24"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/typescript": {
            "version": "5.8.3",
            "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
            "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
            "dev": true,
            "license": "Apache-2.0",
            "bin": {
                "tsc": "bin/tsc",
                "tsserver": "bin/tsserver"
            },
            "engines": {
                "node": ">=14.17"
            }
        },
        "node_modules/undici-types": {
            "version": "6.21.0",
            "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
            "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
            "dev": true,
            "license": "MIT"
        },
        "node_modules/unpipe": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
            "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/uri-js": {
            "version": "4.4.1",
            "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
            "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
            "license": "BSD-2-Clause",
            "dependencies": {
                "punycode": "^2.1.0"
            }
        },
        "node_modules/utils-merge": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
            "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.4.0"
            }
        },
        "node_modules/vary": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
            "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
            "license": "MIT",
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/which": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
            "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
            "license": "ISC",
            "dependencies": {
                "isexe": "^2.0.0"
            },
            "bin": {
                "node-which": "bin/node-which"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/word-wrap": {
            "version": "1.2.5",
            "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
            "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/wrappy": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
            "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
            "license": "ISC"
        },
        "node_modules/yocto-queue": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
            "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
            "dev": true,
            "license": "MIT",
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/zod": {
            "version": "3.25.64",
            "resolved": "https://registry.npmjs.org/zod/-/zod-3.25.64.tgz",
            "integrity": "sha512-hbP9FpSZf7pkS7hRVUrOjhwKJNyampPgtXKc3AN6DsWtoHsg2Sb4SQaS4Tcay380zSwd2VPo9G9180emBACp5g==",
            "license": "MIT",
            "funding": {
                "url": "https://github.com/sponsors/colinhacks"
            }
        },
        "node_modules/zod-to-json-schema": {
            "version": "3.24.5",
            "resolved": "https://registry.npmjs.org/zod-to-json-schema/-/zod-to-json-schema-3.24.5.tgz",
            "integrity": "sha512-/AuWwMP+YqiPbsJx5D6TfgRTc4kTLjsh5SOcd4bLsfUg2RcEXrFMJl1DGgdHy2aCfsIA/cr/1JM0xcB2GZji8g==",
            "license": "ISC",
            "peerDependencies": {
                "zod": "^3.24.1"
            }
        }
    }
}



---


- フォルダ名: ./mcp-server-typescript
- ファイル名: package.json
- 内容:
{
    "name": "scraping-mcp-server",
    "version": "1.0.0",
    "description": "MCP server that invokes YourScrapingApp.exe to perform various scraping tasks.",
    "main": "dist/server.js",
    "type": "module",
    "scripts": {
      "build": "tsc",
      "start": "node dist/server.js",
      "dev": "tsc & node dist/server.js",
      "lint": "eslint src/**/*.ts",
      "format": "prettier --write src/**/*.ts"
    },
    "keywords": [
      "mcp",
      "scraping",
      "typescript",
      "express"
    ],
    "author": "Taro.AI",
    "license": "MIT",
    "dependencies": {
      "@modelcontextprotocol/sdk": "^1.12.3",
      "express": "^4.19.2",
      "zod": "^3.23.8",
      "dotenv": "^16.4.5"
    },
    "devDependencies": {
      "@types/express": "^4.17.21",
      "@types/node": "^20.14.2",
      "@typescript-eslint/eslint-plugin": "^7.13.0",
      "@typescript-eslint/parser": "^7.13.0",
      "eslint": "^8.57.0",
      "eslint-config-prettier": "^9.1.0",
      "eslint-plugin-prettier": "^5.1.3",
      "prettier": "^3.3.2",
      "typescript": "^5.4.5"
    },
    "engines": {
      "node": ">=18.0.0"
    }
  }


---


- フォルダ名: ./mcp-server-typescript
- ファイル名: request_google.json
- 内容:
{
  "jsonrpc": "2.0",
  "method": "tools/call",
  "params": {
    "name": "get_google_ai_summary",
    "arguments": {
      "query": "AIとは何か",
      "headless_mode": false,
      "wait_seconds": 1
    }
  },
  "id": "test-request-002" 
}


---


- フォルダ名: ./mcp-server-typescript
- ファイル名: tsconfig.json
- 内容:
{
    "compilerOptions": {
      /* Language and Environment */
      "target": "ES2022", // 最新のECMAScript機能の多くをサポートするバージョン
      "module": "NodeNext", // Node.jsのESモジュールシステムに対応
      "moduleResolution": "NodeNext", // モジュール解決戦略
      "esModuleInterop": true, // CommonJSモジュールとESモジュールのより良い相互運用性のため
      "forceConsistentCasingInFileNames": true, // ファイル名の大文字・小文字を区別する
  
      /* Type Checking */
      "strict": true, // すべての厳格な型チェックオプションを有効化
      "noImplicitAny": true, // 暗黙的なany型を許可しない
      "strictNullChecks": true, // nullおよびundefinedをより厳密に扱う
      "strictFunctionTypes": true, // 関数のパラメータの型をより厳密にチェック
      "strictBindCallApply": true, // bind, call, applyの型をより厳密にチェック
      "strictPropertyInitialization": true, // クラスのプロパティがコンストラクタで初期化されることを保証
      "noImplicitThis": true, // 暗黙的なthisの型を許可しない
      "alwaysStrict": true, // 各ソースファイルで 'use strict' を出力
  
      /* Modules */
      "resolveJsonModule": true, // .jsonファイルのインポートを許可
      "isolatedModules": true, // 各ファイルを個別のモジュールとしてトランスパイル
  
      /* Emit */
      "outDir": "./dist", // コンパイルされたJavaScriptファイルの出力先ディレクトリ
      "rootDir": "./src", // TypeScriptソースファイルのルートディレクトリ
      "removeComments": true, // コンパイル時にコメントを削除
      "sourceMap": true, // デバッグ用にソースマップファイル(.js.map)を生成
  
      /* Interop Constraints */
      "allowSyntheticDefaultImports": true, // defaultエクスポートを持たないモジュールからのdefaultインポートを許可
  
      /* Completeness */
      "skipLibCheck": true // 依存ライブラリの型チェックをスキップ (ビルド高速化)
    },
    "include": [
      "src/**/*" // コンパイル対象はsrcディレクトリ以下のすべての.tsファイル
    ],
    "exclude": [
      "node_modules", // node_modulesディレクトリはコンパイル対象外
      "dist" // 出力先ディレクトリもコンパイル対象外
    ]
  }


---


- フォルダ名: ./mcp-server-typescript/src
- ファイル名: server copy.ts
- 内容:
// scraping-mcp-server/src/server.ts

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { StreamableHTTPServerTransport } from "@modelcontextprotocol/sdk/server/streamableHttp.js";
import { CallToolResult, TextContent } from "@modelcontextprotocol/sdk/types.js";
import express from 'express';
import type { Request, Response } from 'express';
import { z } from "zod";
import { execFile, ExecFileException } from "node:child_process";
import { promisify } from "node:util";
import path from 'node:path';
import { fileURLToPath } from 'node:url';
import http from 'node:http';
import dotenv from 'dotenv';
import fs from 'node:fs';

dotenv.config();
const execFileAsync = promisify(execFile);

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const projectRoot = path.resolve(__dirname, '..');
const DEFAULT_YOURSCRAPINGAPP_EXE_PATH = path.resolve(projectRoot, 'bin', 'YourScrapingApp.exe');
const YOURSCRAPINGAPP_EXE_PATH = process.env.YOURSCRAPINGAPP_EXE_PATH || DEFAULT_YOURSCRAPINGAPP_EXE_PATH;
console.log(`[MCP Server Config] Using YourScrapingApp.exe path: ${YOURSCRAPINGAPP_EXE_PATH}`);
const YOURSCRAPINGAPP_EXE_DIR = path.dirname(YOURSCRAPINGAPP_EXE_PATH);
console.log(`[MCP Server Config] Setting YourScrapingApp.exe working directory to: ${YOURSCRAPINGAPP_EXE_DIR}`);

if (fs.existsSync(YOURSCRAPINGAPP_EXE_PATH)) { console.log(`[MCP Server Debug] EXE Path EXISTS: ${YOURSCRAPINGAPP_EXE_PATH}`); }
else { console.error(`[MCP Server Debug] EXE Path DOES NOT EXIST: ${YOURSCRAPINGAPP_EXE_PATH}`); }
if (fs.existsSync(YOURSCRAPINGAPP_EXE_DIR)) {
    console.log(`[MCP Server Debug] EXE Dir EXISTS: ${YOURSCRAPINGAPP_EXE_DIR}`);
    try {
        const filesInExeDir = fs.readdirSync(YOURSCRAPINGAPP_EXE_DIR);
        console.log(`[MCP Server Debug] Files in EXE Dir (${YOURSCRAPINGAPP_EXE_DIR}):`, filesInExeDir.slice(0,10).concat(filesInExeDir.length > 10 ? ['...'] : []));
    } catch (e) { console.error(`[MCP Server Debug] Could not read EXE Dir: ${YOURSCRAPINGAPP_EXE_DIR}`, e); }
} else { console.error(`[MCP Server Debug] EXE Dir DOES NOT EXIST: ${YOURSCRAPINGAPP_EXE_DIR}`); }

const EXECUTION_TIMEOUT = 600000;
const MCP_SERVER_PORT = process.env.MCP_PORT ? parseInt(process.env.MCP_PORT, 10) : 3001;

// --- Zodスキーマ定義 ---
const crawlWebsiteInputSchema = z.object({
    url: z.string().url({ message: "Invalid URL format for starting crawl." }).describe("The starting URL for crawling (must be a valid URL)."),
    selector: z.string().min(1, { message: "CSS selector cannot be empty." }).describe("CSS selector for links to follow (e.g., 'a', '.content a')."),
    max_depth: z.number().int().positive().optional().describe("Maximum crawl depth from the start URL. If not provided, task default will be used."),
    parallel: z.number().int().positive().optional().describe("Maximum number of parallel browser tasks. If not provided, task default will be used."),
    timeout: z.number().int().positive().optional().describe("Operation timeout in milliseconds for page loads/actions. If not provided, task default will be used."),
    apply_stealth: z.boolean().optional().describe("Whether to apply playwright-stealth for evasion. If not provided, task default will be used."),
    headless_mode: z.boolean().optional().describe("Whether to run the browser in headless mode. If not specified, the task's default behavior is used."),
    ignore_robots_txt: z.boolean().optional().describe("Whether to ignore the website's robots.txt file. If not provided, task default will be used."),
    user_agent: z.string().optional().describe("Custom user agent string to use for crawling. If not provided, task default will be used."),
    request_delay: z.number().nonnegative().optional().describe("Delay in seconds between requests. If not provided, task default will be used."),
    no_samedomain: z.boolean().optional().describe("If true, allows crawling to external domains. If false or not provided, restricts to the same domain as the start URL.")
});

const getGoogleAiSummaryInputSchema = z.object({
    query: z.string().min(1, { message: "Search query cannot be empty." }).describe("The search query string for Google."),
    headless_mode: z.boolean().optional().describe("Whether to run the browser in headless mode. If not specified, the task's default behavior is used."),
    wait_seconds: z.number().int().positive().optional().describe("Time in seconds to wait and display results in headed mode. If not provided, task default will be used.")
});

const scrapeLawPageInputSchema = z.object({
    url: z.string().url({ message: "Invalid URL format for the law page." }).describe("The URL of the law page to scrape."),
    keyword: z.string().min(1, { message: "Search keyword cannot be empty." }).describe("The keyword to search for within the law text."),
    wait_selector: z.string().optional().describe("CSS selector to wait for before parsing. If not provided, task default will be used."),
    headless_mode: z.boolean().optional().describe("Whether to run the browser in headless mode. If not specified, the task's default behavior is used."),
    timeout: z.number().int().positive().optional().describe("Operation timeout in milliseconds for page loads/actions. If not provided, task default will be used."),
    browser_type: z.enum(["chromium", "firefox", "webkit"]).optional().describe("The type of browser to use for scraping. If not provided, task default (usually 'chromium') will be used."),
    context_window: z.number().int().positive().optional().describe("Number of characters before and after the keyword to include in the snippet. If not provided, task default will be used."),
    merge_threshold: z.number().int().positive().optional().describe("Threshold distance between keyword occurrences to merge snippets. If not provided, task default will be used.")
});

// ★★★ 新規追加: google_search ツールのスキーマ ★★★
const googleSearchInputSchema = z.object({
    query: z.string().min(1, { message: "Search query cannot be empty." }).describe("The search query string for Google."),
    search_pages: z.number().int().positive().optional().describe("Number of search result pages to process. Defaults to 1 if not provided."),
    parallel: z.number().int().positive().optional().describe("Maximum number of parallel browser tasks for scraping result pages. If not provided, task default will be used."),
    timeout: z.number().int().positive().optional().describe("Operation timeout in milliseconds for page loads/actions. If not provided, task default will be used."),
    headless_mode: z.boolean().optional().describe("Whether to run the browser in headless mode. If not specified, the task's default behavior is used."),
});
// ★★★ ここまで ★★★

async function runYourScrapingAppTool(
    taskName: string,
    params: Record<string, any>
): Promise<CallToolResult> {
    console.log(`[MCP Server Tool][${taskName}] Tool called with params:`, JSON.stringify(params, null, 2));
    const args: string[] = ["--task", taskName, "--output-stdout-json"];

    for (const [key, value] of Object.entries(params)) {
        if (value === undefined || value === null) continue;
        if (key === "output_stdout_json") continue;

        let argName = "";
        let argValue = String(value);
        let pushArgWithValue = true;

        // ★★★ 変更箇所: search_pages のマッピングを追加 ★★★
        switch (key) {
            // --- フラグ系の引数 (値を取らない、または --no- で反転) ---
            case "headless_mode":
                if (value === true) args.push("--headless");
                // `main_app.py`の`argparse`は`--headless`がない場合デフォルトでFalseになるため、
                // falseの場合に明示的に引数を送る必要はない
                pushArgWithValue = false;
                break;
            case "apply_stealth":
                if (value === true) args.push("--stealth");
                pushArgWithValue = false;
                break;
            case "no_samedomain":
                if (value === true) args.push("--no-samedomain");
                pushArgWithValue = false;
                break;
            case "ignore_robots_txt":
                if (value === true) args.push("--ignore_robots_txt");
                pushArgWithValue = false;
                break;

            // --- 値を取る引数 (exe のヘルプに合わせる) ---
            case "max_depth":         argName = "--max_depth"; break;
            case "request_delay":     argName = "--request_delay"; break;
            case "user_agent":        argName = "--user_agent"; break;
            case "wait_seconds":      argName = "--wait"; break;
            case "wait_selector":     argName = "--wait_selector"; break;
            case "browser_type":      argName = "--browser_type"; break;
            case "context_window":    argName = "--context_window"; break;
            case "merge_threshold":   argName = "--merge_threshold"; break;
            case "search_pages":      argName = "--search-pages"; break; // ★★★ 新規追加 ★★★

            // Zodのキー名とexeの引数名が一致しているもの
            case "url":
            case "selector":
            case "parallel":
            case "timeout":
            case "query":
            case "keyword":
                argName = `--${key}`;
                break;
            default:
                console.warn(`[MCP Server Tool][${taskName}] Unhandled key to argName conversion for: ${key}. Defaulting to --${key.replace(/_/g, '-')}`);
                argName = `--${key.replace(/_/g, '-')}`;
        }
        // ★★★ ここまで ★★★

        if (pushArgWithValue && argName) {
            args.push(argName, argValue);
        }
    }

    const absoluteExePath = path.resolve(YOURSCRAPINGAPP_EXE_PATH);
    const absoluteCwd = path.resolve(YOURSCRAPINGAPP_EXE_DIR);

    const commandToLog = `"${absoluteExePath}" ${args.map(arg => arg.includes(" ") ? `"${arg}"` : arg).join(' ')}`;
    console.log(`[MCP Server Tool][${taskName}] Executing: ${commandToLog}`);
    console.log(`[MCP Server Tool][${taskName}] CWD: "${absoluteCwd}"`);

    try {
        const { stdout, stderr } = await execFileAsync(absoluteExePath, args, {
            timeout: EXECUTION_TIMEOUT,
            encoding: 'buffer',
            cwd: absoluteCwd,
            windowsHide: true
        });

        const stdoutString = stdout.toString('utf-8').trim();
        const stderrString = stderr.toString('utf-8').trim();

        if (stderrString) {
            console.warn(`[MCP Server Tool][${taskName}] YourScrapingApp.exe stderr:\n--- STDERR ---\n${stderrString}\n------------`);
        }
        if (stdoutString) {
            console.log(`[MCP Server Tool][${taskName}] YourScrapingApp.exe stdout (decoded, length: ${stdoutString.length}):\n--- STDOUT (first 1000 chars) ---\n${stdoutString.substring(0, 1000)}${stdoutString.length > 1000 ? '...' : ''}\n------------`);
        } else {
            console.log(`[MCP Server Tool][${taskName}] YourScrapingApp.exe produced empty stdout after decoding and trimming.`);
        }

        if (!stdoutString) {
            const errorMsg = `Error: Task '${taskName}' process produced no output after decoding. Stderr (if any): ${stderrString || '(empty)'}`;
            console.error(`[MCP Server Tool][${taskName}] ${errorMsg}`);
            return { isError: true, content: [{ type: "text", text: errorMsg }] };
        }

        let resultData: any;
        try {
            resultData = JSON.parse(stdoutString);
            console.log(`[MCP Server Tool][${taskName}] Successfully parsed decoded stdout as JSON.`);
        } catch (parseError: any) {
            const errorMsg = `Error: Could not parse task '${taskName}' decoded output as JSON. Raw (first 500 chars of decoded):\n${stdoutString.substring(0, 500)}`;
            console.error(`[MCP Server Tool][${taskName}] JSON parsing error: ${parseError.message}. ${errorMsg}`, parseError);
            return { isError: true, content: [{ type: "text", text: errorMsg }] };
        }

        if (resultData && typeof resultData === 'object' && resultData !== null) {
            // main_app.pyが返すJSONの構造をチェック
            // 1. エラーを報告しているか (status != 'success')
            // 2. 成功を報告しているか (status == 'success')
            // 3. 上記statusフィールドがないか (直接データが出力されたとみなす)
            if ('status' in resultData && resultData.status !== "success") {
                const errorMessage = resultData.message || `Task '${taskName}' reported status: ${resultData.status}`;
                console.warn(`[MCP Server Tool][${taskName}] Task reported error via status field: ${errorMessage}`);
                return { isError: true, content: [{ type: "text", text: JSON.stringify(resultData) }] }; // エラー詳細を含めて返す
            } else if (resultData.status === "success") {
                 // 成功の場合、'task_output_data' を探す
                 const taskOutput = resultData.details?.task_output_data;
                 if (taskOutput) {
                    console.log(`[MCP Server Tool][${taskName}] Task successful, returning task_output_data.`);
                    return { content: [{ type: "text", text: JSON.stringify(taskOutput) }] };
                 } else {
                     console.warn(`[MCP Server Tool][${taskName}] Task reported status:success but no 'task_output_data' found. Returning full result.`);
                     return { content: [{ type: "text", text: JSON.stringify(resultData) }] };
                 }
            } else {
                // statusフィールドがない場合、全体を成功データとみなす
                console.log(`[MCP Server Tool][${taskName}] Task successful, received direct data output (no status field).`);
                return { content: [{ type: "text", text: JSON.stringify(resultData) }] };
            }
        } else {
            const unexpectedDataMsg = `Error: Task '${taskName}' output parsed to an unexpected value (not an object or null). Parsed as: ${typeof resultData}`;
            console.error(`[MCP Server Tool][${taskName}] ${unexpectedDataMsg} Data:`, resultData);
            return { isError: true, content: [{ type: "text", text: unexpectedDataMsg }] };
        }

    } catch (error: any) {
        console.error(`[MCP Server Tool][${taskName}] Error executing YourScrapingApp.exe:`, error);
        let detailedErrorMsg = `Failed to execute task '${taskName}'.`;
        if (error.message) detailedErrorMsg += ` Message: ${error.message}`;
        const execError = error as ExecFileException & { stdout?: string | Buffer, stderr?: string | Buffer };
        if (execError.code !== undefined) detailedErrorMsg += ` Exit code: ${execError.code}.`;
        if (execError.signal !== undefined) detailedErrorMsg += ` Signal: ${execError.signal}.`;
        if (execError.stdout) {
            let execStdout = Buffer.isBuffer(execError.stdout) ? execError.stdout.toString('utf-8') : execError.stdout;
            if (execStdout) detailedErrorMsg += `\n--- Process STDOUT (during error) ---\n${execStdout}`;
        }
        if (execError.stderr) {
            let execStderr = Buffer.isBuffer(execError.stderr) ? execError.stderr.toString('utf-8') : execError.stderr;
            if (execStderr) detailedErrorMsg += `\n--- Process STDERR (during error) ---\n${execStderr}`;
        }
        return { isError: true, content: [{ type: "text", text: detailedErrorMsg }] };
    }
}

function setupMcpServer(): McpServer {
    console.log("[MCP Server Init] Initializing Scraping MCP Server...");
    const server = new McpServer({ name: "ScrapingToolsServer", version: "1.0.0" });
    console.log("[MCP Server Init] Server instance created.");
    
    // 既存のツール
    server.tool("crawl_website", "指定されたURLからウェブサイトをクロールし、リンク、メールアドレス、電話番号などの情報を収集します。最大深度や同一ドメイン制限などのオプションを指定できます。", crawlWebsiteInputSchema.shape, async (params) => runYourScrapingAppTool("crawl", params));
    console.log("[MCP Server Tool] 'crawl_website' tool defined.");
    
    server.tool("get_google_ai_summary", "指定された検索クエリでGoogle検索を実行し、AIによる概要の参照元URLを全件取得します。SEO分析などに特化しています。", getGoogleAiSummaryInputSchema.shape, async (params) => runYourScrapingAppTool("google_ai", params));
    console.log("[MCP Server Tool] 'get_google_ai_summary' tool defined.");

    server.tool("scrape_law_page", "指定された法令ページのURLから特定のキーワードを検索し、キーワードが出現する条文や関連する階層情報（章、節など）を含む文脈を抽出します。", scrapeLawPageInputSchema.shape, async (params) => runYourScrapingAppTool("law_scraper", params));
    console.log("[MCP Server Tool] 'scrape_law_page' tool defined.");

    // ★★★ 新規追加: google_search ツール ★★★
    server.tool(
        "google_search",
        "指定された検索クエリでGoogle検索を実行し、AIによる概要と通常の検索結果の両方を取得します。さらに、それらの結果ページのURLにアクセスして、本文コンテンツ、メールアドレス、電話番号を収集します。",
        googleSearchInputSchema.shape,
        async (params) => runYourScrapingAppTool("google_search", params)
    );
    console.log("[MCP Server Tool] 'google_search' tool defined.");
    // ★★★ ここまで ★★★

    return server;
}

async function startHttpServer() {
    const app = express();
    app.use(express.json());
    console.log(`[HTTP Server] Setting up /mcp endpoint on port ${MCP_SERVER_PORT}...`);
    
    app.post('/mcp', async (req: Request, res: Response) => {
        console.log('[HTTP Server] Received POST /mcp request');
        console.debug(`[HTTP Server] Body: ${JSON.stringify(req.body, null, 2)}`);
        
        let transport: StreamableHTTPServerTransport | null = null;
        let mcpServerInstance: McpServer | null = null;
        try {
            mcpServerInstance = setupMcpServer();
            transport = new StreamableHTTPServerTransport({ sessionIdGenerator: undefined });
            res.on('close', () => { 
                console.log('[HTTP Server] Client connection closed. Cleaning up...'); 
                if (transport) transport.close(); 
                if (mcpServerInstance) mcpServerInstance.close(); 
            });
            await mcpServerInstance.connect(transport);
            console.log('[HTTP Server] McpServer connected to transport.');
            await transport.handleRequest(req, res, req.body);
            console.log('[HTTP Server] Handled POST /mcp request via transport.');
        } catch (error) {
            console.error('[HTTP Server] Error handling POST /mcp request:', error);
            const requestId = (typeof req.body === 'object' && req.body && 'id' in req.body) ? req.body.id : null;
            if (!res.headersSent) { res.status(500).json({ jsonrpc: '2.0', error: { code: -32603, message: 'Internal server error during MCP processing.' }, id: requestId }); }
            else { console.error("[HTTP Server] Headers already sent, cannot send 500 error response."); }
            if (transport) transport.close(); 
            if (mcpServerInstance) mcpServerInstance.close();
        }
    });

    app.get('/mcp', (req: Request, res: Response) => { 
        console.log('[HTTP Server] GET /mcp (Not Allowed for Stateless).'); 
        res.status(405).set('Allow', 'POST').json({ jsonrpc: "2.0", error: { code: -32601, message: "Method Not Allowed. Use POST." }, id: null });
    });

    const httpServer = http.createServer(app);
    httpServer.listen(MCP_SERVER_PORT, () => {
        console.log("==========================================================");
        console.log(` Scraping MCP Server is running (Stateless HTTP Mode) `);
        console.log(` Listening for POST requests on http://localhost:${MCP_SERVER_PORT}/mcp `);
        console.log(` -> Invoking YourScrapingApp.exe from: ${YOURSCRAPINGAPP_EXE_PATH}`);
        console.log("==========================================================");
        console.log("Waiting for client connections...");
    });

    const shutdown = (signal: string) => {
        console.log(`\n[System] ${signal} received. Shutting down...`);
        httpServer.close((err?: Error) => {
            if (err) { console.error("[System] HTTP server shutdown error:", err); process.exit(1); }
            else { console.log("[System] HTTP server closed."); process.exit(0); }
        });
        setTimeout(() => { console.error("[System] Graceful shutdown timeout. Forcefully exiting."); process.exit(1); }, 10000);
    };

    process.on('SIGINT', () => shutdown('SIGINT'));
    process.on('SIGTERM', () => shutdown('SIGTERM'));
}

startHttpServer().catch(error => {
    console.error("[System] Failed to start HTTP server:", error);
    process.exit(1);
});


---


- フォルダ名: ./mcp-server-typescript/src
- ファイル名: server.ts
- 内容:
// scraping-mcp-server/src/server.ts

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { StreamableHTTPServerTransport } from "@modelcontextprotocol/sdk/server/streamableHttp.js";
import { CallToolResult, TextContent } from "@modelcontextprotocol/sdk/types.js";
import express from 'express';
import type { Request, Response } from 'express';
import { z } from "zod";
import { execFile, ExecFileException } from "node:child_process";
import { promisify } from "node:util";
import path from 'node:path';
import { fileURLToPath } from 'node:url';
import http from 'node:http';
import dotenv from 'dotenv';
import fs from 'node:fs';

dotenv.config();
const execFileAsync = promisify(execFile);

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const projectRoot = path.resolve(__dirname, '..');
const DEFAULT_YOURSCRAPINGAPP_EXE_PATH = path.resolve(projectRoot, 'bin', 'YourScrapingApp.exe');
const YOURSCRAPINGAPP_EXE_PATH = process.env.YOURSCRAPINGAPP_EXE_PATH || DEFAULT_YOURSCRAPINGAPP_EXE_PATH;
console.log(`[MCP Server Config] Using YourScrapingApp.exe path: ${YOURSCRAPINGAPP_EXE_PATH}`);
const YOURSCRAPINGAPP_EXE_DIR = path.dirname(YOURSCRAPINGAPP_EXE_PATH);
console.log(`[MCP Server Config] Setting YourScrapingApp.exe working directory to: ${YOURSCRAPINGAPP_EXE_DIR}`);

if (fs.existsSync(YOURSCRAPINGAPP_EXE_PATH)) { console.log(`[MCP Server Debug] EXE Path EXISTS: ${YOURSCRAPINGAPP_EXE_PATH}`); }
else { console.error(`[MCP Server Debug] EXE Path DOES NOT EXIST: ${YOURSCRAPINGAPP_EXE_PATH}`); }
if (fs.existsSync(YOURSCRAPINGAPP_EXE_DIR)) {
    console.log(`[MCP Server Debug] EXE Dir EXISTS: ${YOURSCRAPINGAPP_EXE_DIR}`);
    try {
        const filesInExeDir = fs.readdirSync(YOURSCRAPINGAPP_EXE_DIR);
        console.log(`[MCP Server Debug] Files in EXE Dir (${YOURSCRAPINGAPP_EXE_DIR}):`, filesInExeDir.slice(0,10).concat(filesInExeDir.length > 10 ? ['...'] : []));
    } catch (e) { console.error(`[MCP Server Debug] Could not read EXE Dir: ${YOURSCRAPINGAPP_EXE_DIR}`, e); }
} else { console.error(`[MCP Server Debug] EXE Dir DOES NOT EXIST: ${YOURSCRAPINGAPP_EXE_DIR}`); }

const EXECUTION_TIMEOUT = 600000;
const MCP_SERVER_PORT = process.env.MCP_PORT ? parseInt(process.env.MCP_PORT, 10) : 3001;

// --- Zodスキーマ定義 ---
const crawlWebsiteInputSchema = z.object({
    url: z.string().url({ message: "Invalid URL format for starting crawl." }).describe("The starting URL for crawling (must be a valid URL)."),
    selector: z.string().min(1, { message: "CSS selector cannot be empty." }).describe("CSS selector for links to follow (e.g., 'a', '.content a')."),
    max_depth: z.number().int().positive().optional().describe("Maximum crawl depth from the start URL. If not provided, task default will be used."),
    parallel: z.number().int().positive().optional().describe("Maximum number of parallel browser tasks. If not provided, task default will be used."),
    timeout: z.number().int().positive().optional().describe("Operation timeout in milliseconds for page loads/actions. If not provided, task default will be used."),
    apply_stealth: z.boolean().optional().describe("Whether to apply playwright-stealth for evasion. If not provided, task default will be used."),
    headless_mode: z.boolean().optional().describe("Whether to run the browser in headless mode. If not specified, the task's default behavior is used."),
    ignore_robots_txt: z.boolean().optional().describe("Whether to ignore the website's robots.txt file. If not provided, task default will be used."),
    user_agent: z.string().optional().describe("Custom user agent string to use for crawling. If not provided, task default will be used."),
    request_delay: z.number().nonnegative().optional().describe("Delay in seconds between requests. If not provided, task default will be used."),
    no_samedomain: z.boolean().optional().describe("If true, allows crawling to external domains. If false or not provided, restricts to the same domain as the start URL."),
    // ★★★ 新しいプロパティを追加 ★★★
    main_content_only: z.boolean().optional().describe("If true, the crawler will attempt to identify the main content of a page and only follow links within that area, ignoring headers, footers, and sidebars.")
});

const getGoogleAiSummaryInputSchema = z.object({
    query: z.string().min(1, { message: "Search query cannot be empty." }).describe("The search query string for Google."),
    headless_mode: z.boolean().optional().describe("Whether to run the browser in headless mode. If not specified, the task's default behavior is used."),
    wait_seconds: z.number().int().positive().optional().describe("Time in seconds to wait and display results in headed mode. If not provided, task default will be used.")
});

const scrapeLawPageInputSchema = z.object({
    url: z.string().url({ message: "Invalid URL format for the law page." }).describe("The URL of the law page to scrape."),
    keyword: z.string().min(1, { message: "Search keyword cannot be empty." }).describe("The keyword to search for within the law text."),
    wait_selector: z.string().optional().describe("CSS selector to wait for before parsing. If not provided, task default will be used."),
    headless_mode: z.boolean().optional().describe("Whether to run the browser in headless mode. If not specified, the task's default behavior is used."),
    timeout: z.number().int().positive().optional().describe("Operation timeout in milliseconds for page loads/actions. If not provided, task default will be used."),
    browser_type: z.enum(["chromium", "firefox", "webkit"]).optional().describe("The type of browser to use for scraping. If not provided, task default (usually 'chromium') will be used."),
    context_window: z.number().int().positive().optional().describe("Number of characters before and after the keyword to include in the snippet. If not provided, task default will be used."),
    merge_threshold: z.number().int().positive().optional().describe("Threshold distance between keyword occurrences to merge snippets. If not provided, task default will be used.")
});

// ★★★ 新規追加: google_search ツールのスキーマ ★★★
const googleSearchInputSchema = z.object({
    query: z.string().min(1, { message: "Search query cannot be empty." }).describe("The search query string for Google."),
    search_pages: z.number().int().positive().optional().describe("Number of search result pages to process. Defaults to 1 if not provided."),
    parallel: z.number().int().positive().optional().describe("Maximum number of parallel browser tasks for scraping result pages. If not provided, task default will be used."),
    timeout: z.number().int().positive().optional().describe("Operation timeout in milliseconds for page loads/actions. If not provided, task default will be used."),
    headless_mode: z.boolean().optional().describe("Whether to run the browser in headless mode. If not specified, the task's default behavior is used."),
});
// ★★★ ここまで ★★★

async function runYourScrapingAppTool(
    taskName: string,
    params: Record<string, any>
): Promise<CallToolResult> {
    console.log(`[MCP Server Tool][${taskName}] Tool called with params:`, JSON.stringify(params, null, 2));
    const args: string[] = ["--task", taskName, "--output-stdout-json"];

    for (const [key, value] of Object.entries(params)) {
        if (value === undefined || value === null) continue;
        if (key === "output_stdout_json") continue;

        let argName = "";
        let argValue = String(value);
        let pushArgWithValue = true;

        // ★★★ 変更箇所: search_pages のマッピングを追加 ★★★
        switch (key) {
            // --- フラグ系の引数 (値を取らない、または --no- で反転) ---
            case "headless_mode":
                if (value === true) args.push("--headless");
                // `main_app.py`の`argparse`は`--headless`がない場合デフォルトでFalseになるため、
                // falseの場合に明示的に引数を送る必要はない
                pushArgWithValue = false;
                break;
            case "apply_stealth":
                if (value === true) args.push("--stealth");
                pushArgWithValue = false;
                break;
            case "no_samedomain":
                if (value === true) args.push("--no-samedomain");
                pushArgWithValue = false;
                break;
            case "ignore_robots_txt":
                if (value === true) args.push("--ignore_robots_txt");
                pushArgWithValue = false;
                break;
            // ★★★ 新しい引数のマッピングを追加 ★★★
            case "main_content_only":
                if (value === true) args.push("--main-content-only");
                pushArgWithValue = false;
                break;

            // --- 値を取る引数 (exe のヘルプに合わせる) ---
            case "max_depth":         argName = "--max_depth"; break;
            case "request_delay":     argName = "--request_delay"; break;
            case "user_agent":        argName = "--user_agent"; break;
            case "wait_seconds":      argName = "--wait"; break;
            case "wait_selector":     argName = "--wait_selector"; break;
            case "browser_type":      argName = "--browser_type"; break;
            case "context_window":    argName = "--context_window"; break;
            case "merge_threshold":   argName = "--merge_threshold"; break;
            case "search_pages":      argName = "--search-pages"; break; // ★★★ 新規追加 ★★★

            // Zodのキー名とexeの引数名が一致しているもの
            case "url":
            case "selector":
            case "parallel":
            case "timeout":
            case "query":
            case "keyword":
                argName = `--${key}`;
                break;
            default:
                console.warn(`[MCP Server Tool][${taskName}] Unhandled key to argName conversion for: ${key}. Defaulting to --${key.replace(/_/g, '-')}`);
                argName = `--${key.replace(/_/g, '-')}`;
        }
        // ★★★ ここまで ★★★

        if (pushArgWithValue && argName) {
            args.push(argName, argValue);
        }
    }

    const absoluteExePath = path.resolve(YOURSCRAPINGAPP_EXE_PATH);
    const absoluteCwd = path.resolve(YOURSCRAPINGAPP_EXE_DIR);

    const commandToLog = `"${absoluteExePath}" ${args.map(arg => arg.includes(" ") ? `"${arg}"` : arg).join(' ')}`;
    console.log(`[MCP Server Tool][${taskName}] Executing: ${commandToLog}`);
    console.log(`[MCP Server Tool][${taskName}] CWD: "${absoluteCwd}"`);

    try {
        const { stdout, stderr } = await execFileAsync(absoluteExePath, args, {
            timeout: EXECUTION_TIMEOUT,
            encoding: 'buffer',
            cwd: absoluteCwd,
            windowsHide: true
        });

        const stdoutString = stdout.toString('utf-8').trim();
        const stderrString = stderr.toString('utf-8').trim();

        if (stderrString) {
            console.warn(`[MCP Server Tool][${taskName}] YourScrapingApp.exe stderr:\n--- STDERR ---\n${stderrString}\n------------`);
        }
        if (stdoutString) {
            console.log(`[MCP Server Tool][${taskName}] YourScrapingApp.exe stdout (decoded, length: ${stdoutString.length}):\n--- STDOUT (first 1000 chars) ---\n${stdoutString.substring(0, 1000)}${stdoutString.length > 1000 ? '...' : ''}\n------------`);
        } else {
            console.log(`[MCP Server Tool][${taskName}] YourScrapingApp.exe produced empty stdout after decoding and trimming.`);
        }

        if (!stdoutString) {
            const errorMsg = `Error: Task '${taskName}' process produced no output after decoding. Stderr (if any): ${stderrString || '(empty)'}`;
            console.error(`[MCP Server Tool][${taskName}] ${errorMsg}`);
            return { isError: true, content: [{ type: "text", text: errorMsg }] };
        }

        let resultData: any;
        try {
            resultData = JSON.parse(stdoutString);
            console.log(`[MCP Server Tool][${taskName}] Successfully parsed decoded stdout as JSON.`);
        } catch (parseError: any) {
            const errorMsg = `Error: Could not parse task '${taskName}' decoded output as JSON. Raw (first 500 chars of decoded):\n${stdoutString.substring(0, 500)}`;
            console.error(`[MCP Server Tool][${taskName}] JSON parsing error: ${parseError.message}. ${errorMsg}`, parseError);
            return { isError: true, content: [{ type: "text", text: errorMsg }] };
        }

        if (resultData && typeof resultData === 'object' && resultData !== null) {
            // main_app.pyが返すJSONの構造をチェック
            // 1. エラーを報告しているか (status != 'success')
            // 2. 成功を報告しているか (status == 'success')
            // 3. 上記statusフィールドがないか (直接データが出力されたとみなす)
            if ('status' in resultData && resultData.status !== "success") {
                const errorMessage = resultData.message || `Task '${taskName}' reported status: ${resultData.status}`;
                console.warn(`[MCP Server Tool][${taskName}] Task reported error via status field: ${errorMessage}`);
                return { isError: true, content: [{ type: "text", text: JSON.stringify(resultData) }] }; // エラー詳細を含めて返す
            } else if (resultData.status === "success") {
                 // 成功の場合、'task_output_data' を探す
                 const taskOutput = resultData.task_output_data;
                 if (taskOutput) {
                    console.log(`[MCP Server Tool][${taskName}] Task successful, returning task_output_data.`);
                    return { content: [{ type: "text", text: JSON.stringify(taskOutput) }] };
                 } else {
                     console.warn(`[MCP Server Tool][${taskName}] Task reported status:success but no 'task_output_data' found. Returning full result.`);
                     return { content: [{ type: "text", text: JSON.stringify(resultData) }] };
                 }
            } else {
                // statusフィールドがない場合、全体を成功データとみなす
                console.log(`[MCP Server Tool][${taskName}] Task successful, received direct data output (no status field).`);
                return { content: [{ type: "text", text: JSON.stringify(resultData) }] };
            }
        } else {
            const unexpectedDataMsg = `Error: Task '${taskName}' output parsed to an unexpected value (not an object or null). Parsed as: ${typeof resultData}`;
            console.error(`[MCP Server Tool][${taskName}] ${unexpectedDataMsg} Data:`, resultData);
            return { isError: true, content: [{ type: "text", text: unexpectedDataMsg }] };
        }

    } catch (error: any) {
        console.error(`[MCP Server Tool][${taskName}] Error executing YourScrapingApp.exe:`, error);
        let detailedErrorMsg = `Failed to execute task '${taskName}'.`;
        if (error.message) detailedErrorMsg += ` Message: ${error.message}`;
        const execError = error as ExecFileException & { stdout?: string | Buffer, stderr?: string | Buffer };
        if (execError.code !== undefined) detailedErrorMsg += ` Exit code: ${execError.code}.`;
        if (execError.signal !== undefined) detailedErrorMsg += ` Signal: ${execError.signal}.`;
        if (execError.stdout) {
            let execStdout = Buffer.isBuffer(execError.stdout) ? execError.stdout.toString('utf-8') : execError.stdout;
            if (execStdout) detailedErrorMsg += `\n--- Process STDOUT (during error) ---\n${execStdout}`;
        }
        if (execError.stderr) {
            let execStderr = Buffer.isBuffer(execError.stderr) ? execError.stderr.toString('utf-8') : execError.stderr;
            if (execStderr) detailedErrorMsg += `\n--- Process STDERR (during error) ---\n${execStderr}`;
        }
        return { isError: true, content: [{ type: "text", text: detailedErrorMsg }] };
    }
}

function setupMcpServer(): McpServer {
    console.log("[MCP Server Init] Initializing Scraping MCP Server...");
    const server = new McpServer({ name: "ScrapingToolsServer", version: "1.0.0" });
    console.log("[MCP Server Init] Server instance created.");
    
    // 既存のツール
    server.tool("crawl_website", "指定されたURLからウェブサイトをクロールし、リンク、メールアドレス、電話番号などの情報を収集します。最大深度や同一ドメイン制限などのオプションを指定できます。", crawlWebsiteInputSchema.shape, async (params) => runYourScrapingAppTool("crawl", params));
    console.log("[MCP Server Tool] 'crawl_website' tool defined.");
    
    server.tool("get_google_ai_summary", "指定された検索クエリでGoogle検索を実行し、AIによる概要の参照元URLを全件取得します。SEO分析などに特化しています。", getGoogleAiSummaryInputSchema.shape, async (params) => runYourScrapingAppTool("google_ai", params));
    console.log("[MCP Server Tool] 'get_google_ai_summary' tool defined.");

    server.tool("scrape_law_page", "指定された法令ページのURLから特定のキーワードを検索し、キーワードが出現する条文や関連する階層情報（章、節など）を含む文脈を抽出します。", scrapeLawPageInputSchema.shape, async (params) => runYourScrapingAppTool("law_scraper", params));
    console.log("[MCP Server Tool] 'scrape_law_page' tool defined.");

    // ★★★ 新規追加: google_search ツール ★★★
    server.tool(
        "google_search",
        "指定された検索クエリでGoogle検索を実行し、AIによる概要と通常の検索結果の両方を取得します。さらに、それらの結果ページのURLにアクセスして、本文コンテンツ、メールアドレス、電話番号を収集します。",
        googleSearchInputSchema.shape,
        async (params) => runYourScrapingAppTool("google_search", params)
    );
    console.log("[MCP Server Tool] 'google_search' tool defined.");
    // ★★★ ここまで ★★★

    return server;
}

async function startHttpServer() {
    const app = express();
    app.use(express.json());
    console.log(`[HTTP Server] Setting up /mcp endpoint on port ${MCP_SERVER_PORT}...`);
    
    app.post('/mcp', async (req: Request, res: Response) => {
        console.log('[HTTP Server] Received POST /mcp request');
        console.debug(`[HTTP Server] Body: ${JSON.stringify(req.body, null, 2)}`);
        
        let transport: StreamableHTTPServerTransport | null = null;
        let mcpServerInstance: McpServer | null = null;
        try {
            mcpServerInstance = setupMcpServer();
            transport = new StreamableHTTPServerTransport({ sessionIdGenerator: undefined });
            res.on('close', () => { 
                console.log('[HTTP Server] Client connection closed. Cleaning up...'); 
                if (transport) transport.close(); 
                if (mcpServerInstance) mcpServerInstance.close(); 
            });
            await mcpServerInstance.connect(transport);
            console.log('[HTTP Server] McpServer connected to transport.');
            await transport.handleRequest(req, res, req.body);
            console.log('[HTTP Server] Handled POST /mcp request via transport.');
        } catch (error) {
            console.error('[HTTP Server] Error handling POST /mcp request:', error);
            const requestId = (typeof req.body === 'object' && req.body && 'id' in req.body) ? req.body.id : null;
            if (!res.headersSent) { res.status(500).json({ jsonrpc: '2.0', error: { code: -32603, message: 'Internal server error during MCP processing.' }, id: requestId }); }
            else { console.error("[HTTP Server] Headers already sent, cannot send 500 error response."); }
            if (transport) transport.close(); 
            if (mcpServerInstance) mcpServerInstance.close();
        }
    });

    app.get('/mcp', (req: Request, res: Response) => { 
        console.log('[HTTP Server] GET /mcp (Not Allowed for Stateless).'); 
        res.status(405).set('Allow', 'POST').json({ jsonrpc: "2.0", error: { code: -32601, message: "Method Not Allowed. Use POST." }, id: null });
    });

    const httpServer = http.createServer(app);
    httpServer.listen(MCP_SERVER_PORT, () => {
        console.log("==========================================================");
        console.log(` Scraping MCP Server is running (Stateless HTTP Mode) `);
        console.log(` Listening for POST requests on http://localhost:${MCP_SERVER_PORT}/mcp `);
        console.log(` -> Invoking YourScrapingApp.exe from: ${YOURSCRAPINGAPP_EXE_PATH}`);
        console.log("==========================================================");
        console.log("Waiting for client connections...");
    });

    const shutdown = (signal: string) => {
        console.log(`\n[System] ${signal} received. Shutting down...`);
        httpServer.close((err?: Error) => {
            if (err) { console.error("[System] HTTP server shutdown error:", err); process.exit(1); }
            else { console.log("[System] HTTP server closed."); process.exit(0); }
        });
        setTimeout(() => { console.error("[System] Graceful shutdown timeout. Forcefully exiting."); process.exit(1); }, 10000);
    };

    process.on('SIGINT', () => shutdown('SIGINT'));
    process.on('SIGTERM', () => shutdown('SIGTERM'));
}

startHttpServer().catch(error => {
    console.error("[System] Failed to start HTTP server:", error);
    process.exit(1);
});


---


- フォルダ名: ./tools
- ファイル名: mcp_tools.py
- 内容:
# tools/mcp_tools.py (完全同期・安定版)

import json
import subprocess
from pathlib import Path
from typing import List, Optional, Dict, Any, Literal
import sys

from langchain_core.tools import tool
from pydantic import BaseModel, Field

# --- 定数定義 ---
PROJECT_ROOT = Path(__file__).parent.parent
CLIENT_PROJECT_PATH = PROJECT_ROOT / "mcp-client-typescript"
CLIENT_SCRIPT_PATH = CLIENT_PROJECT_PATH / "src" / "run_tool.ts"
EXECUTION_TIMEOUT = 300.0
TSX_EXECUTABLE_NAME = "tsx.cmd" if sys.platform == "win32" else "tsx"
TSX_EXECUTABLE_PATH = CLIENT_PROJECT_PATH / "node_modules" / ".bin" / TSX_EXECUTABLE_NAME

# --- Pydanticモデル定義 (変更なし) ---
class CrawlWebsiteArgs(BaseModel):
    url: str = Field(description="クロールを開始するURL。")
    selector: str = Field(description="辿るリンクを指定するCSSセレクタ。例: 'a', '.content a'")
    max_depth: Optional[int] = Field(None)
    main_content_only: Optional[bool] = Field(None)
class GetGoogleAiSummaryArgs(BaseModel):
    query: str = Field(description="Googleで検索するクエリ文字列。")
class ScrapeLawPageArgs(BaseModel):
    url: str = Field(description="スクレイピング対象の法令ページのURL。")
    keyword: str = Field(description="条文テキスト内で検索するキーワード。")
class GoogleSearchArgs(BaseModel):
    query: str = Field(description="Googleで検索するクエリ文字列。")
    search_pages: Optional[int] = Field(None)

# --- 共通ヘルパー関数 (完全同期に変更) ---
def _run_mcp_tool_sync(tool_name: str, args_dict: Dict[str, Any]) -> str:
    """
    subprocessを同期的に使用してTypeScriptのクライアントスクリプトを実行する。
    """
    if not TSX_EXECUTABLE_PATH.is_file():
        return f"Error: tsx executable not found at '{TSX_EXECUTABLE_PATH}'. Please run 'npm install' in 'mcp-client-typescript'."
    
    command = [
        str(TSX_EXECUTABLE_PATH),
        str(CLIENT_SCRIPT_PATH),
        tool_name,
        json.dumps(args_dict, ensure_ascii=False)
    ]
    
    try:
        result = subprocess.run(
            command,
            capture_output=True,
            encoding='utf-8',
            errors='ignore',
            timeout=EXECUTION_TIMEOUT,
            cwd=CLIENT_PROJECT_PATH,
            check=False
        )

        if result.returncode == 0:
            output = result.stdout.strip()
            try:
                data = json.loads(output)
                if isinstance(data, dict) and data.get("error") is True:
                    error_msg = data.get("message", "Unknown error from client script.")
                    if "api usage limit exceeded" in error_msg.lower():
                        return f"FATAL_ERROR: {error_msg}"
                    else:
                        return f"Error from tool '{tool_name}': {error_msg}"
            except json.JSONDecodeError:
                pass # JSONでなければ正常な出力とみなす
            return output or f"Tool '{tool_name}' returned no output."
        else:
            return (
                f"Error executing tool '{tool_name}': Subprocess failed with exit code {result.returncode}\n"
                f"Stderr: {result.stderr.strip() or 'N/A'}"
            )
            
    except subprocess.TimeoutExpired:
        return f"Error: Tool '{tool_name}' timed out after {EXECUTION_TIMEOUT} seconds."
    except FileNotFoundError:
        return f"Error: Command not found. Path: '{TSX_EXECUTABLE_PATH}'."
    except Exception as e:
        return f"An unexpected Python error occurred in subprocess execution for '{tool_name}': {e}"

# --- LangChainツール定義 (同期) ---

discripsion1 = """
google_search
インターネット上の情報を検索する必要がある場合に使用します。
ユーザーの質問に答えるために、時事問題、特定のトピック、製品、人物など、
あらゆる事柄について最新の情報をウェブから検索し、関連ページのコンテンツを取得します。

crawl_website
特定のウェブサイトの構造や内容を詳細に調査する場合に使用します。
指定されたURLからリンクを辿り、複数のページからテキスト、メールアドレス、電話番号を網羅的に収集します。


"""

@tool(args_schema=GoogleSearchArgs)
def google_search(query: str, search_pages: Optional[int] = 1) -> str:
    """
ユーザーの質問に答えるための初期調査として、まずこのツールを使用する。
広範なトピックについてウェブを検索し、概要、関連情報、そしてより詳細な情報源となるウェブサイトのURLを特定する。

    """
    args = {"query": query, "search_pages": search_pages}
    # Pydanticモデルの exclude_unset=True を使わないように引数を渡す
    validated_args = GoogleSearchArgs(**args).model_dump()
    return _run_mcp_tool_sync("google_search", validated_args)

@tool(args_schema=CrawlWebsiteArgs)
def crawl_website(url: str, selector: str = 'a', max_depth: Optional[int] = 1, main_content_only: Optional[bool] = False) -> str:
    """
google_searchで見つけた特定のウェブサイトについて、より深く、詳細な情報を得るために使用する。
指定されたURLのページ内容を直接読み取り、google_searchの結果では得られない具体的な情報を抽出する。
指定されたURLからリンクを辿り、複数のページからテキスト、メールアドレス、電話番号を網羅的に収集します。
    """
    args = {"url": url, "selector": selector, "max_depth": max_depth, "main_content_only": main_content_only}
    validated_args = CrawlWebsiteArgs(**args).model_dump()
    return _run_mcp_tool_sync("crawl_website", validated_args)

@tool(args_schema=GetGoogleAiSummaryArgs)
def get_google_ai_summary(query: str) -> str:
    """
    特定の検索クエリに対するGoogleのAI要約の「情報源」を調査したい、という特殊な場合にのみ使用する。
    """
    args = {"query": query}
    validated_args = GetGoogleAiSummaryArgs(**args).model_dump()
    return _run_mcp_tool_sync("get_google_ai_summary", validated_args)

@tool(args_schema=ScrapeLawPageArgs)
def scrape_law_page(url: str, keyword: str) -> str:
    """
法律や規則のウェブページから、特定のキーワードを含む条文を正確に抜き出す、法務調査に特化したツール.
    """
    args = {"url": url, "keyword": keyword}
    validated_args = ScrapeLawPageArgs(**args).model_dump()
    return _run_mcp_tool_sync("scrape_law_page", validated_args)

all_tools = [
    google_search,
    crawl_website,
    get_google_ai_summary,
    scrape_law_page,
]

def aaaa():
    # --- 直接実行によるテスト用のコード ---
    async def main_test():
        """
        このモジュールを直接実行した際のテスト用関数。
        各ツールを個別にテストできます。
        """
        print("--- Testing 'google_search' tool ---")
        test_args_google_search = {
            "query": "LangChain ReAct Agent",
            "search_pages": 1
        }
        result_google_search = await google_search.ainvoke(test_args_google_search)
        print("Result:")
        # 結果がJSON文字列なので、見やすくするためにパースして表示
        try:
            print(json.dumps(json.loads(result_google_search), indent=2, ensure_ascii=False))
        except json.JSONDecodeError:
            print(result_google_search) # パース失敗時は生の結果を表示

        print("\n" + "="*50 + "\n")

        print("--- Testing 'crawl_website' tool (with local file) ---")
        # テスト用のローカルHTMLファイルを作成
        test_html_content = """
        <html><head><title>Test Page</title></head>
        <body><h1>Local Test</h1><a href="https://langchain.com">LangChain Official</a></body>
        </html>
        """
        test_html_path = PROJECT_ROOT / "test_page.html"
        test_html_path.write_text(test_html_content, encoding='utf-8')
        
        test_args_crawl = {
            "url": test_html_path.as_uri(), # 'file:///...' 形式のURL
            "selector": "a"
        }
        result_crawl = await crawl_website.ainvoke(test_args_crawl)
        print("Result:")
        try:
            print(json.dumps(json.loads(result_crawl), indent=2, ensure_ascii=False))
        except json.JSONDecodeError:
            print(result_crawl)
        
        # テスト用ファイルを削除
        test_html_path.unlink()


    if __name__ == "__main__":
        # このスクリプトを直接実行した場合、非同期のテスト関数を実行
        # 注: このテストを実行するには、MCPサーバーと`run_tool.ts`が正しくセットアップされている必要があります。
        print("Running mcp_tools.py standalone test...")
        asyncio.run(main_test())